{
  "_id": "6696c2cb763f0712c198f0b7",
  "name": {
    "en": "",
    "ru": "Удвоить и вернуть цифры в массиве строк"
  },
  "instruction": {
    "en": "",
    "ru": "Функция `doubleNumbers` принимает массив строк.\n\nНеобходимо вернуть новый массив строк, в котором будут только удвоенные цифры из первоначального массива.\n\nБуквы и знаки не должны попасть в новый массив. Если в строке нет цифр, то она не должна попасть в новый массив.\n\nПример запуска функции:\n```javascript\ndoubleNumbers([\"a1\", \"b2\", \"c3\"]) // [\"2\", \"4\", \"6\"]\ndoubleNumbers([\"a1\", \"b\", \"c3\", \"d\", \"e\"]) // [\"2\", \"6\"]\ndoubleNumbers([\"d\", \"e\", \"f\"]) // []\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function doubleNumbers(arr) {\n  const newArr = []\n  const numbers = '123456789'\n  for (let i = 0; i < arr.length; i++) {\n    let str = ''\n    for (let j = 0; j < arr[i].length; j++) {\n      if (numbers.includes(arr[i][j])) str += +arr[i][j] * 2;\n    }\n    if (str.length) newArr.push(str)\n  }\n  return newArr;\n}",
  "openTest": "it('Created function doubleNumbers', () => {\n  expect(doubleNumbers).to.be.a('function');\n});\n\nit('doubleNumbers([\"a1\", \"b2\", \"c3\"]) should returns [\"2\", \"4\", \"6\"]', () => {\n  expect(doubleNumbers([\"a1\", \"b2\", \"c3\"])).to.eql([\"2\", \"4\", \"6\"]);\n});\n\nit('doubleNumbers([\"a1\", \"b2\", \"c3\", \"d4\"]) should returns [\"2\", \"4\", \"6\", \"8\"]', () => {\n  expect(doubleNumbers([\"a1\", \"b2\", \"c3\", \"d4\"])).to.eql([\"2\", \"4\", \"6\", \"8\"]);\n});\n\nit('doubleNumbers([\"a1\", \"b\", \"c3\", \"d\", \"e\"]) should returns [\"2\", \"6\"]', () => {\n  expect(doubleNumbers([\"a1\", \"b\", \"c3\", \"d\", \"e\"])).to.eql([\"2\", \"6\"]);\n});\n\nit('doubleNumbers([\"d\", \"e\", \"f\"]) should returns []', () => {\n  expect(doubleNumbers([\"d\", \"e\", \"f\"])).to.eql([]);\n});\n\nit('doubleNumbers([]) should returns []', () => {\n  expect(doubleNumbers([])).to.eql([]);\n});\n\nit('doubleNumbers([\"a1\", \"\", \"c3\", \"\", \"e\", \"f\"]) should returns [\"2\", \"6\"]', () => {\n  expect(doubleNumbers([\"a1\", \"\", \"c3\", \"\", \"e\", \"f\"])).to.eql([\"2\", \"6\"]);\n});\n\nit('doubleNumbers([\"5\"]) should returns [\"10\"]', () => {\n  expect(doubleNumbers([\"5\"])).to.eql([\"10\"]);\n});\n\nit('doubleNumbers([\"a\"]) should returns []', () => {\n  expect(doubleNumbers([\"a\"])).to.eql([]);\n});\n\nit('doubleNumbers([\"\", \"\", \"\"]) should returns []', () => {\n  expect(doubleNumbers([\"\", \"\", \"\"])).to.eql([]);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}