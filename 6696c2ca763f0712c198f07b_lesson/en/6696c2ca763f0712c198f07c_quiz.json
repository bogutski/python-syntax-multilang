{
  "name": "Double each element of the array if it is a number",
  "questions": {
    "0": {
      "name": "Which elements in the array below have the data type Number?",
      "description": "```javascript\nconst arr = [{}, 2, '4', NaN, -8, Infinity, 16, true, 'NaN', null];\n```",
      "variants": {
        "0": {
          "name": "2, NaN, -8, Infinity, 16"
        },
        "1": {
          "name": "2nd, 3rd, 5th and 7th elements of the array"
        },
        "2": {
          "name": "2, '4', NaN, -8, 16, 'NaN'."
        },
        "3": {
          "name": "2nd, 4th, 5th, 6th and 7th elements of the array"
        }
      }
    },
    "1": {
      "name": "What does the if clause in the code below mean?",
      "description": "```javascript\nconst arr = ['2 + 3', 5, NaN, -2, true, 1.3];\nfor(let i = 0; i < arr.length; i++) {\n  if(typeof arr[i] === 'number' && !isNaN(arr[i]))\n}\n```",
      "variants": {
        "0": {
          "name": "If the data type of an array element is a number or is NaN"
        },
        "1": {
          "name": "If the data type of an array element is a number or it is not NaN"
        },
        "2": {
          "name": "If the data type of an array element is a number and it is not NaN"
        },
        "3": {
          "name": "If the data type of an array element is a number and is NaN"
        }
      }
    },
    "2": {
      "name": "What will running the code below output to the console?",
      "description": "```javascript\nconst arr = ['2 + 3', 5, NaN, -2, true, 1.3];\nfor(let i = 0; i < arr.length; i++) {\n  if(typeof arr[i] === 'number' && !isNaN(arr[i]))\n  console.log(arr[i]);\n}\n```",
      "variants": {
        "0": {
          "name": "2 3 5 -2 1.3"
        },
        "1": {
          "name": "5 NaN -2 1.3"
        },
        "2": {
          "name": "5 -2 1.3"
        },
        "3": {
          "name": "2 3 5 1.3"
        }
      }
    },
    "3": {
      "name": "Select the correct result of running the code below",
      "description": "```javascript\nconst arr = [NaN, 15, 'one', 201, 7, -13];\nfor(let i = 0; i < arr.length; i++) {\n  if(typeof arr[i] === 'number' && !isNaN(arr[i]))\n  console.log(i);\n}\n```",
      "variants": {
        "0": {
          "name": "15 201 7 -13"
        },
        "1": {
          "name": "The console will display the indices of all elements except NaN"
        },
        "2": {
          "name": "The console will print the indices of elements that are numbers and are not NaN"
        },
        "3": {
          "name": "1 3 4 5"
        }
      }
    },
    "4": {
      "name": "What should I write instead of ??? to make the numeric elements of the array increase by 2 times?",
      "description": "```javascript\nconst arr = [NaN, 15, 'one', 201, 7, -13];\nfor(let i = 0; i < arr.length; i++) {\n  if(typeof arr[i] === 'number' && !isNaN(arr[i]))\n  ???;\n}\n```",
      "variants": {
        "0": {
          "name": "arr[i] = arr[i] * 2;"
        },
        "1": {
          "name": "arr[i] *= 2;"
        },
        "2": {
          "name": "arr[i] = arr[i] * arr[i];"
        },
        "3": {
          "name": "arr[i] = arr[i] ** 2;"
        }
      }
    },
    "5": {
      "name": "What is the result of running the code below if you go through the array in reverse order?",
      "description": "```javascript\nconst arr = [2, -4, 8];\nfor(let i = arr.length - 1; i >= 0; i--) {\n  if(typeof arr[i] === 'number' && !isNaN(arr[i]))\n    arr[i] = arr[i] * 2;\n}\nconsole.log(arr);\n```",
      "variants": {
        "0": {
          "name": "[4, 8, 16]"
        },
        "1": {
          "name": "[4, -8, 16]"
        },
        "2": {
          "name": "[16, -8, 4]"
        },
        "3": {
          "name": "[16, 8, 4]"
        }
      }
    },
    "6": {
      "name": "Is it correct that the result of running the code below is [20, 'two', 50, -10, NaN, 22, 0]?",
      "description": "```javascript\nconst arr = [10, 'two', 25, -5, NaN, 11, 0];\nfor(let i = 0; i < arr.length; i += 2) {\n  if(typeof arr[i] === 'number' && !isNaN(arr[i]))\n  arr[i] *= 2;\n}\nconsole.log(arr);\n```",
      "variants": {
        "0": {
          "name": "Incorrect, the result is [20, 'two', 50, -5, NaN, 11, 0]"
        },
        "1": {
          "name": "Right, the result is [20, 'two', 50, -10, NaN, 22, 0]"
        },
        "2": {
          "name": "Incorrect, the result is [20, 'two', 50, -5, NaN, 11, 2]"
        },
        "3": {
          "name": "Incorrect, the result is [10, 'two', 50, -10, NaN, 22, 0]"
        }
      }
    },
    "7": {
      "name": "What will running the code below output to the console?",
      "description": "```javascript\nconst arr = [20, 50, 3, 100];\nfor(let i = 0; i < arr.length; i++) {\n  if(typeof arr[i] === 'number' && !isNaN(arr[i]))\n  arr[i] *= -2;\n}\nconsole.log(arr);\n```",
      "variants": {
        "0": {
          "name": "[-40, 50, -6, 100]"
        },
        "1": {
          "name": "[40, 100, 6, 200]"
        },
        "2": {
          "name": "[-40, -100, -6, -200]"
        },
        "3": {
          "name": "[20, -100, 3, -200]"
        }
      }
    },
    "8": {
      "name": "Select the correct result of running the code below",
      "description": "```javascript\nconst arr = [-2, 0, -3, 100, Infinity];\nfor(let i = 0; i < arr.length; i++) {\n  if(typeof arr[i] === 'number' && !isNaN(arr[i]))\n  arr[i] *= -2;\n}\nconsole.log(arr);\n```",
      "variants": {
        "0": {
          "name": "[4, 0, 6, -200, Infinity]"
        },
        "1": {
          "name": "[4, -2, 6, -200, Infinity]"
        },
        "2": {
          "name": "[4, 0, 6, -200, -Infinity]"
        },
        "3": {
          "name": "[4, 0, 6, 200, Infinity]"
        }
      }
    },
    "9": {
      "name": "Is it correct that the result of running the code below is [NaN, 4, 0, 6, -Infinity]?",
      "description": "```javascript\nconst arr = [NaN, -2, 0, -3, Infinity];\nfor(let i = 0; i < arr.length; i++) {\n  if(typeof arr[i] === 'number' && !isNaN(arr[i]) && arr[i] !== Infinity)\n  arr[i] *= -2;\n}\nconsole.log(arr);\n```",
      "variants": {
        "0": {
          "name": "Correct, the result is [NaN, 4, 0, 6, -Infinity]"
        },
        "1": {
          "name": "Incorrect, the result is [NaN, -4, 0, -6, Infinity]"
        },
        "2": {
          "name": "Incorrect, the result is [NaN, 4, -2, 6, Infinity]"
        },
        "3": {
          "name": "Incorrect, the result is [NaN, 4, 0, 6, Infinity]"
        }
      }
    }
  }
}