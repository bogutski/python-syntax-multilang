{
  "_id": "6696c2ca763f0712c198dfd1",
  "name": {
    "en": "Multiply the number to the given power",
    "ru": "Возведите число в указанную степень"
  },
  "instruction": {
    "en": "Write a function `power` that takes 2 parameters.\n\nThe first parameter is a number to be raised to a power.\n\nThe second parameter is the power to which the number is to be raised.\n\nThe function should return the number, raised to the specified power.\n\nExamples:\n ```javascript\npower(2, 3) // 8\npower(3, 2) // 9\npower(3, 3) // 27\npower(2, 10) // 1024\npower(10, 2) // 100\n```",
    "ru": "Напишите функцию `power`, которая принимает 2 параметра.\n\nПервый параметр - число, которое нужно возвести в степень.\n\nВторой параметр - степень, в которую нужно возвести число.\n\nФункция должна возвращать число, возведенное в указанную степень.\n\nПримеры:\n ```javascript\npower(2, 3) // 8\npower(3, 2) // 9\npower(3, 3) // 27\npower(2, 10) // 1024\npower(10, 2) // 100\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function power(n, m) {\n  return n ** m;\n}",
  "openTest": "it('Created function power', () => {\n  expect(power).to.be.a('function');\n});\n\nit('Function returns correct result for arguments `2, 3`', () => {\n  expect(power(2, 3)).to.equal(8);\n});\n\nit('Function returns correct result for arguments `3, 2`', () => {\n  expect(power(3, 2)).to.equal(9);\n});\n\nit('Function returns correct result for arguments `3, 3`', () => {\n  expect(power(3, 3)).to.equal(27);\n});\n\nit('Function returns correct result for arguments `2, 10`', () => {\n  expect(power(2, 10)).to.equal(1024);\n});\n\nit('Function returns correct result for arguments `10, 2`', () => {\n  expect(power(10, 2)).to.equal(100);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}