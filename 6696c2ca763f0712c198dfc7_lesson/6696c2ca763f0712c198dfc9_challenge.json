{
  "_id": "6696c2ca763f0712c198dfc9",
  "name": {
    "en": "Defining a function argument type with a default parameter",
    "ru": "Определение типа аргумента функции с параметром по умолчанию"
  },
  "instruction": {
    "en": "Write a function `defineTypeArg` that takes 1 parameter `arg` and returns its type.\nIf no argument is passed, the function should return a string `'string'`.\n\nExamples:\n  * the `defineTypeArg(1)` function should return `'number'`;\n  * The `defineTypeArg('1')` function should return `'string'`;\n  * The `defineTypeArg()` function must return `'string'`;",
    "ru": "Напишите функцию `defineTypeArg`, которая принимает 1 параметр `arg` и возвращает его тип.\nЕсли аргумент не передан, то функция должна вернуть строку `'string'`.\n\nПримеры:\n  * функция `defineTypeArg(1)` должна вернуть `'number'`;\n  * функция `defineTypeArg('1')` должна вернуть `'string'`;\n  * функция `defineTypeArg()` должна вернуть `'string'`;"
  },
  "initialSolution": "fun",
  "completedSolution": "function defineTypeArg(arg = '') {\n  return typeof arg;\n}",
  "openTest": "it('Created function defineTypeArg', () => {\n  expect(defineTypeArg).to.be.a('function');\n});\n\nit('Function returns correct result for argument 1', () => {\n  expect(defineTypeArg(1)).to.equal('number');\n});\n\nit('Function returns correct result for argument `one`', () => {\n  expect(defineTypeArg('one')).to.equal('string');\n});\n\nit('Function returns correct result without argument', () => {\n  expect(defineTypeArg()).to.equal('string');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}