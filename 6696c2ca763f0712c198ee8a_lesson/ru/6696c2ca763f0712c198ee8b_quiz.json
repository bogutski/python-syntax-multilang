{
  "name": "Заменить в строке числа на их словесное описание",
  "questions": {
    "0": {
      "name": "Выберите верный вариант результата замены чисел на слова для строки ниже",
      "description": "```javascript\nconst str = '1 + 3 = 5 - 1';\n```",
      "variants": {
        "0": {
          "name": "'one + three = five - one'"
        },
        "1": {
          "name": "'one plus three = five minus one'"
        },
        "2": {
          "name": "'one + three equals five - one'"
        },
        "3": {
          "name": "'one plus three equals five minus one'"
        }
      }
    },
    "1": {
      "name": "Что представляет из себя объект ниже при замене числа на словесное его описание?",
      "description": "```javascript\nconst numbers = {\n  0: 'zero',\n  1: 'one',\n  2: 'two',\n  3: 'three',\n  4: 'four',\n  5: 'five'\n}\n```",
      "variants": {
        "0": {
          "name": "Объект является таблицей соответствия, где ключ - это словесное описание числа, а значение - это число"
        },
        "1": {
          "name": "Объект является таблицей соответствия, где ключ - это число, а значение - это его словесное описание"
        }
      }
    },
    "2": {
      "name": "Сколько соответствий надо прописать в объекте, чтобы заменить все числа от 0 до 5 на их словесное описание?",
      "variants": {
        "0": {
          "name": "Достаточно прописать соответствия только для 0 и для 5, остальные числа будут заменены автоматически"
        },
        "1": {
          "name": "Соответствия должны быть прописаны от 0 до 10 включительно"
        },
        "2": {
          "name": "От 0 до 5 включительно"
        },
        "3": {
          "name": "const numbers = {\n  1: 'one',\n  2: 'two',\n  3: 'three',\n  4: 'four',\n  5: 'five'\n}"
        }
      }
    },
    "3": {
      "name": "Где следует создавать объект с соответствиями? Перед функцией или внутри функции?",
      "variants": {
        "0": {
          "name": "После функции"
        },
        "1": {
          "name": "Перед функцией"
        },
        "2": {
          "name": "Внутри функции"
        },
        "3": {
          "name": "Не имеет значения"
        }
      }
    },
    "4": {
      "name": "Верно ли, что результатом работы кода ниже будет 'one + two = three'?",
      "description": "```javascript\nconst numbers = {\n  0: 'zero',\n  1: 'one',\n  2: 'two'\n}; \n\nfunction changeNumberToWord(str){\n  let result = '';\nlet word = '';\n\nfor(let i = 0; i < str.length; i++){\n    if(str[i] !== ' ') word += str[i];\n    if(str[i] === ' ' && word) {\n        if(numbers[word]) result += numbers[word];\n        else result += word;\n        word = '';\n    }\n\n    if(str[i] === ' ') result += ' ';\n  }\n  return result;\n};\n\nconsole.log(changeNumberToWord('1 + 2 = 3'));\n",
      "variants": {
        "0": {
          "name": "Нет, результат будет 'one + two = 3'"
        },
        "1": {
          "name": "Нет, результат будет 'one + two ='"
        },
        "2": {
          "name": "Нет, результат будет 'one plus two equals three'"
        },
        "3": {
          "name": "Да, результат будет 'one + two = three'"
        }
      }
    },
    "5": {
      "name": "Что надо добавить во второе условии if, чтобы последний элемент строки не обрезался?",
      "description": "```javascript\nconst numbers = {\n  1: 'one',\n  2: 'two',\n  3: 'three',\n  4: 'four',\n  5: 'five'\n}; \n\nfunction changeNumberToWord(str){\n  let result = '';\n  let word = '';\n\nfor(let i = 0; i < str.length; i++){\n    if(str[i] !== ' ') word += str[i];\n    if(str[i] === ' ' && word) {\n        if(numbers[word]) result += numbers[word];\n        else result += word;\n        word = '';\n    }\n    if(str[i] === ' ') result += ' ';\n  }\n  return result;\n};\n\nconsole.log(changeNumberToWord('1 2 3 4 5 ready or not, here I come'));\n```",
      "variants": {
        "0": {
          "name": "&& i === str.length - 1"
        },
        "1": {
          "name": "|| i === str.length - 1 && word"
        },
        "2": {
          "name": "|| i === str.length - 1"
        },
        "3": {
          "name": "&& i === str.length - 1 && word"
        }
      }
    },
    "6": {
      "name": "Верно ли, что результатом работы кода ниже будет '!404! - !404! = five'?",
      "description": "```javascript\nconst numbers = {\n  1: 'one',\n  2: 'two',\n  3: 'three',\n  4: 'four',\n  5: 'five'\n}; \n\nfunction changeNumberToWord(str){\n  let result = '';\n  let word = '';\nfor(let i = 0; i < str.length; i++){\n    if(str[i] !== ' ') word += str[i];\n    if(str[i] === ' ' && word || i === str.length - 1) {\n        if(numbers[word]) result += numbers[word];\n        else if(!Number.isNaN(+word)) result += '!404!';\n        else result += word;\n        word = '';\n    }\n    if(str[i] === ' ') result += ' ';\n  }\n  return result;\n};\nconsole.log(changeNumberToWord('100 - 95 = 5'));\n```",
      "variants": {
        "0": {
          "name": "Нет, результатом будет 'one hundred - ninety five = five'"
        },
        "1": {
          "name": "Нет, результатом будет '100 - 95 = five'"
        },
        "2": {
          "name": "Нет, результатом будет '!404! - !404! = !404!'"
        },
        "3": {
          "name": "Да, результатом будет '!404! - !404! = five'"
        }
      }
    },
    "7": {
      "name": "Что получится в результате запуска кода ниже?",
      "description": "```javascript\nconst numbers = {\n  1: 'one',\n  2: 'two',\n  3: 'three'\n}; \n\nfunction changeNumberToWord(str){\n  let result = '';\n  let word = '';\nfor(let i = 0; i < str.length; i++){\n    if(str[i] !== ' ') word += str[i];\n    if(str[i] === ' ' && word || i === str.length - 1) {\n        if(numbers[word]) result += numbers[word];\n        else if(!Number.isNaN(+word)) result += 'SomeNumber';\n        else result += word;\n        word = '';\n    }\n    if(str[i] === ' ') result += ' ';\n  }\n  return result;\n};\nconsole.log(changeNumberToWord('On cloud 9'));\n```",
      "variants": {
        "0": {
          "name": "'On cloud nine'"
        },
        "1": {
          "name": "'On cloud 9'"
        },
        "2": {
          "name": "'On cloud SomeNumber'"
        },
        "3": {
          "name": "'On cloud '"
        }
      }
    },
    "8": {
      "name": "Что надо дописать, чтобы все числа заменились на их словесное описание?",
      "description": "```javascript\nconst numbers = {\n  1: 'one',\n  2: 'two',\n  3: 'three'\n}; \n\nfunction changeNumberToWord(str){\n  let result = '';\n  let word = '';\nfor(let i = 0; i < str.length; i++){\n    if(str[i] !== ' ') word += str[i];\n    if(str[i] === ' ' && word || i === str.length - 1) {\n        if(numbers[word]) result += numbers[word];\n        else if(!Number.isNaN(+word)) result += 'SomeNumber';\n        else result += word;\n        word = '';\n    }\n    if(str[i] === ' ') result += ' ';\n  }\n  return result;\n};\nconsole.log(changeNumberToWord('1 2 Buckle my shoe 3 4 Shut the door'));\n\n```",
      "variants": {
        "0": {
          "name": "Ничего дописывать не надо, все числа заменятся на их словесное описание"
        },
        "1": {
          "name": "В объекте numbers надо добавить еще одно свойство - 4: 'four'"
        },
        "2": {
          "name": "В объекте numbers надо добавить еще одно свойство - 5: 'five'"
        }
      }
    },
    "9": {
      "name": "Выберите верный вариант результата запуска кода ниже",
      "description": "```javascript\nconst numbers = {\n  1: 'one',\n  2: 'two',\n  3: 'three',\n  4: 'four',\n  5: 'five'\n}; \n\nfunction changeNumberToWord(str){\n  let result = '';\n  let word = '';\nfor(let i = 0; i < str.length; i++){\n    if(str[i] !== ' ') word += str[i];\n    if(str[i] === ' ' && word || i === str.length - 1) {\n        if(numbers[word]) result += numbers[word];\n        else if(!Number.isNaN(+word)) result += 'SomeNumber';\n        else result += word;\n        word = '';\n    }\n    if(str[i] === ' ') result += ' ';\n  }\n  return result;\n};\nconsole.log(changeNumberToWord('5 4 3 2 1 Start!'));\n```",
      "variants": {
        "0": {
          "name": "five four three two one Start!"
        },
        "1": {
          "name": "'five four three two one '"
        },
        "2": {
          "name": "'5 4 3 2 1 Start!'"
        },
        "3": {
          "name": "'five four three two one Start!'"
        }
      }
    }
  }
}