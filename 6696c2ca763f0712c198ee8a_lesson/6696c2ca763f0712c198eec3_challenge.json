{
  "_id": "6696c2ca763f0712c198eec3",
  "name": {
    "en": "",
    "ru": "Перевод строки чисел в строку слов"
  },
  "instruction": {
    "en": "",
    "ru": "Функция `numToWord` принимает строку чисел от `0` до `99` и возвращает строку, в которой каждое число заменено на слово, соответствующее этому числу.\n\nНапример, строка `1, 3, 15, 74` превратится в строку `one, three, fifteen, seventy-four`.\n\nВ строке числа разделены запятыми и пробелами.\n\nПустой строки не будет.\n\nРазберите код ниже и добавьте что функция возвращает, можно использовать метод массива.\n\nПостарайтесь переписать код самостоятельно.\n\n\nПримеры запуска функции:\n```javascript\nnumToWord('1, 3, 7, 9');          // 'one, three, seven, nine'\nnumToWord('11, 12, 16, 18');      // 'eleven, twelve, sixteen, eighteen'\nnumToWord('23, 46, 72, 94');      // 'twenty-three, forty-six, seventy-two, ninety-four'\nnumToWord('65, 0, 41, 13, 6, 7'); // 'sixty-five, zero, forty-one, thirteen, six, seven'\n\n```"
  },
  "initialSolution": "function numToWord(str){\n  const objFrom0to9 = {0: 'zero', 1: 'one', 2: 'two', 3: 'three', 4: 'four', 5: 'five', 6: 'six', 7: 'seven', 8: 'eight', 9: 'nine'}\n  const objFrom11to19 = {11: 'eleven', 12: 'twelve', 13: 'thirteen', 14: 'fourteen', 15: 'fifteen', 16: 'sixteen', 17: 'seventeen', 18: 'eighteen', 19: 'nineteen'}\n  const objFrom10to90 = {1: 'ten', 2: 'twenty', 3: 'thirty', 4: 'forty', 5: 'fifty', 6: 'sixty', 7: 'seventy', 8: 'eighty', 9: 'ninety'}\n\n  let newArr = [];\n  const arrayOfNums = str.split(', ');                     // split string into array of numbers\n\n  for(let i = 0; i < arrayOfNums.length; i++){             // loop through new array\n\n    const num = arrayOfNums[i]                             // assign current number to `num`\n    let word = '';                                         // word to push to new array\n\n    if(num.length === 1) word = objFrom0to9[num];          // if number has 1 digit, take it from `objFrom0to9`\n\n    else if(num[1] === '0') word = objFrom10to90[num[0]];  // if number has 2 digits and the second one is 0, take it from `objFrom10to90`\n\n    else if(num[0] === '1') word = objFrom11to19[num];     // if number has 2 digits and the first one is 1, take it from `objFrom11to19`\n\n    else {                                                 // if number has 2 digits and first one is not 1 and second one is not 0\n      const part1 = objFrom10to90[num[0]];                 // take first digit from `objFrom10to90`\n      const part2 = objFrom0to9[num[1]];                   // take second digit from `objFrom0to9`\n      word = part1 + '-' + part2;                          // combine them with `-` in between\n    }\n\n    newArr.push(word)                                      // push `word` to `newArr`\n  }\n\n  <code here>                                              // join `newArr` into string with `, ` in between and return it\n}",
  "completedSolution": "function numToWord(str){\n  const objFrom0to9 = { 0: 'zero', 1: 'one', 2: 'two', 3: 'three', 4: 'four', 5: 'five', 6: 'six', 7: 'seven', 8: 'eight', 9: 'nine', }\n  const objFrom11to19 = { 11: 'eleven', 12: 'twelve', 13: 'thirteen', 14: 'fourteen', 15: 'fifteen', 16: 'sixteen', 17: 'seventeen', 18: 'eighteen', 19: 'nineteen', }\n  const objFrom10to90 = { 1: 'ten', 2: 'twenty', 3: 'thirty', 4: 'forty', 5: 'fifty', 6: 'sixty', 7: 'seventy', 8: 'eighty', 9: 'ninety', }\n\n  let newArr = [];\n  const arrayOfNums = str.split(', ');\n\n  for(let i = 0; i < arrayOfNums.length; i++){\n\n    const num = arrayOfNums[i];\n    let word = '';\n\n    if(num.length === 1) word = objFrom0to9[num];\n\n    else if(num[1] === '0') word = objFrom10to90[num[0]];\n\n    else if(num[0] === '1') word = objFrom11to19[num];\n\n    else {\n      const part1 = objFrom10to90[num[0]];\n      const part2 = objFrom0to9[num[1]];\n      word = part1 + '-' + part2;\n    }\n\n    newArr.push(word);\n  }\n\n  return newArr.join(', ');\n}",
  "openTest": "it('Created function numToWord', () => {\n  expect(numToWord).to.be.a('function');\n});\n\nit(\"numToWord('0, 2, 6, 9, 11, 12, 16, 19, 21, 46, 78, 99') should return 'zero, two, six, nine, eleven, twelve, sixteen, nineteen, twenty-one, forty-six, seventy-eight, ninety-nine'\", () => {\n  expect(numToWord('0, 2, 6, 9, 11, 12, 16, 19, 21, 46, 78, 99')).to.deep.equal('zero, two, six, nine, eleven, twelve, sixteen, nineteen, twenty-one, forty-six, seventy-eight, ninety-nine');\n});\n\nit(\"numToWord('9, 8, 7, 6, 5, 4, 3, 2, 1, 0') should return 'nine, eight, seven, six, five, four, three, two, one, zero'\", () => {\n  expect(numToWord('9, 8, 7, 6, 5, 4, 3, 2, 1, 0')).to.deep.equal('nine, eight, seven, six, five, four, three, two, one, zero');\n});\n\nit(\"numToWord('19, 15, 10, 13, 14, 17, 18, 11, 12, 16') should return 'nineteen, fifteen, ten, thirteen, fourteen, seventeen, eighteen, eleven, twelve, sixteen'\", () => {\n  expect(numToWord('19, 15, 10, 13, 14, 17, 18, 11, 12, 16')).to.deep.equal('nineteen, fifteen, ten, thirteen, fourteen, seventeen, eighteen, eleven, twelve, sixteen');\n});\n\nit(\"numToWord('98, 81, 76, 64, 52, 43, 29, 17') should return 'ninety-eight, eighty-one, seventy-six, sixty-four, fifty-two, forty-three, twenty-nine, seventeen'\", () => {\n  expect(numToWord('98, 81, 76, 64, 52, 43, 29, 17')).to.deep.equal('ninety-eight, eighty-one, seventy-six, sixty-four, fifty-two, forty-three, twenty-nine, seventeen');\n});\n\nit(\"numToWord('10, 11, 27, 3, 44, 53, 6, 7, 89, 9') should return 'ten, eleven, twenty-seven, three, forty-four, fifty-three, six, seven, eighty-nine, nine'\", () => {\n  expect(numToWord('10, 11, 27, 3, 44, 53, 6, 7, 89, 9')).to.deep.equal('ten, eleven, twenty-seven, three, forty-four, fifty-three, six, seven, eighty-nine, nine');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}