{
  "_id": "6696c2ca763f0712c198eec1",
  "name": {
    "en": "",
    "ru": "Перевод чисел в слова с помощью объектов"
  },
  "instruction": {
    "en": "",
    "ru": "Функция `numToWord` принимает массив чисел от `0` до `10` включительно и от `20` до `99`` включительно и возвращает массив строковых значений, соответствующих этим числам.\n\nРазберите код функции и перепишите его самостоятельно несколько раз.\n\nДобавьте условие в цикл, чтобы функция работала правильно.\n\n\nПримеры запуска функции:\n```javascript\nnumToWord([10, 20, 30]); // ['ten', 'twenty', 'thirty']\nnumToWord([25, 97, 46, 73]); // ['twenty-five', 'ninety-seven', 'forty-six', 'seventy-three']\nnumToWord([0, 47, 3, 8, 63, 8]); // ['zero', 'forty-seven', 'three', 'eight', 'sixty-three', 'eight']\n```"
  },
  "initialSolution": "function numToWord(arr){\n  const objFrom0to9 = { 0: 'zero', 1: 'one', 2: 'two', 3: 'three', 4: 'four', 5: 'five', 6: 'six', 7: 'seven', 8: 'eight', 9: 'nine'}\n  const objFrom10to90 = {1: 'ten', 2: 'twenty', 3: 'thirty', 4: 'forty', 5: 'fifty', 6: 'sixty', 7: 'seventy', 8:'eighty', 9: 'ninety'}\n  const newArr = [];\n\n  for(<code here...>){\n    const str = arr[i].toString();\n    let word = '';\n\n    if(str.length === 1) word = objFrom0to9[str];         // if length of string is 1, it's a number from 0 to 9\n    else {                                                // else it's a number 10 or from 20 to 99\n      if(str[1] === '0') word = objFrom10to90[str[0]];    // if second digit is 0, then using `objFrom10to90` object only\n      else {                                              // else using both objects\n        const part1 = objFrom10to90[str[0]];              // first digit\n        const part2 = objFrom0to9[str[1]];                // second digit\n        word = part1 + '-' + part2;                       // combine them with '-'\n      }\n    }\n\n    newArr.push(word);\n  }\n  return newArr;\n}",
  "completedSolution": "function numToWord(arr){\n  const objFrom0to9 = { 0: 'zero', 1: 'one', 2: 'two', 3: 'three', 4: 'four', 5: 'five', 6: 'six', 7: 'seven', 8: 'eight', 9: 'nine'}\n  const objFrom10to90 = {1: 'ten', 2: 'twenty', 3: 'thirty', 4: 'forty', 5: 'fifty', 6: 'sixty', 7: 'seventy', 8:'eighty', 9: 'ninety'}\n  const newArr = [];\n\n  for(let i = 0; i < arr.length; i++){\n    const str = arr[i].toString();\n    let word = '';\n\n    if(str.length === 1) word = objFrom0to9[str];\n    else {\n      if(str[1] === '0') word = objFrom10to90[str[0]];\n      else {\n        const part1 = objFrom10to90[str[0]];\n        const part2 = objFrom0to9[str[1]];\n        word = part1 + '-' + part2;\n      }\n    }\n\n    newArr.push(word);\n  }\n  return newArr;\n}",
  "openTest": "it('Created function numToWord', () => {\n  expect(numToWord).to.be.a('function');\n});\n\nit(\"numToWord([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]) should return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']\", () => {\n  expect(numToWord([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])).to.deep.equal(['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n});\n\nit(\"numToWord([10, 20, 30, 40, 50, 60, 70, 80, 90]) should return ['ten', 'twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety']\", () => {\n  expect(numToWord([10, 20, 30, 40, 50, 60, 70, 80, 90])).to.deep.equal(['ten', 'twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety']);\n});\n\nit(\"numToWord([21, 39, 48, 57, 66, 75, 84, 93]) should return ['twenty-one', 'thirty-nine', 'forty-eight', 'fifty-seven', 'sixty-six', 'seventy-five', 'eighty-four', 'ninety-three']\", () => {\n  expect(numToWord([21, 39, 48, 57, 66, 75, 84, 93])).to.deep.equal(['twenty-one', 'thirty-nine', 'forty-eight', 'fifty-seven', 'sixty-six', 'seventy-five', 'eighty-four', 'ninety-three']);\n});\n\nit(\"numToWord([99, 5, 43, 77, 1, 36, 56, 21, 7, 3, 82]) should return ['ninety-nine', 'five', 'forty-three', 'seventy-seven', 'one', 'thirty-six', 'fifty-six', 'twenty-one', 'seven', 'three', 'eighty-two']\", () => {\n  expect(numToWord([99, 5, 43, 77, 1, 36, 56, 21, 7, 3, 82])).to.deep.equal(['ninety-nine', 'five', 'forty-three', 'seventy-seven', 'one', 'thirty-six', 'fifty-six', 'twenty-one', 'seven', 'three', 'eighty-two']);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}