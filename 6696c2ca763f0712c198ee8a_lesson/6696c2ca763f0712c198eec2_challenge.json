{
  "_id": "6696c2ca763f0712c198eec2",
  "name": {
    "en": "",
    "ru": "Перевод чисел от 20 до 99 в слова"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `numToWord`, которая принимает массив чисел от `20` до `99``.\n\nФункция должна вернуть массив строк, где каждая строка - это перевод числа в слова.\n\n\nПримеры запуска функции:\n```javascript\nnumToWord([20, 30, 40]);             // ['twenty', 'thirty', 'forty']\nnumToWord([25, 97, 46, 73]);         // ['twenty-five', 'ninety-seven', 'forty-six', 'seventy-three']\nnumToWord([50, 47, 73, 34, 63, 88]); // ['fifty', 'forty-seven', 'seventy-three', 'thirty-four', 'sixty-three', 'eighty-eight']\n```"
  },
  "initialSolution": "function numToWord(arr){\n  const objFrom1to9 = {1: 'one', 2: 'two', 3: 'three', 4: 'four', 5: 'five', 6: 'six', 7: 'seven', 8: 'eight', 9: 'nine'}\n  const objFrom20to90 = {2: 'twenty', 3: 'thirty', 4: 'forty', 5: 'fifty', 6: 'sixty', 7: 'seventy', 8:'eighty', 9: 'ninety'}\n\n  code here...\n\n}",
  "completedSolution": "function numToWord(arr){\n  const objFrom1to9 = {1: 'one', 2: 'two', 3: 'three', 4: 'four', 5: 'five', 6: 'six', 7: 'seven', 8: 'eight', 9: 'nine'}\n  const objFrom20to90 = {2: 'twenty', 3: 'thirty', 4: 'forty', 5: 'fifty', 6: 'sixty', 7: 'seventy', 8:'eighty', 9: 'ninety'}\n  const newArr = [];\n\n  for(let i = 0; i < arr.length; i++){\n    const str = arr[i].toString();\n    let word = '';\n\n    if(str[1] === '0') word = objFrom20to90[str[0]];\n    else {\n      const part1 = objFrom20to90[str[0]];\n      const part2 = objFrom1to9[str[1]];\n      word = part1 + '-' + part2;\n    }\n\n    newArr.push(word);\n  }\n  return newArr;\n}",
  "openTest": "it('Created function numToWord', () => {\n  expect(numToWord).to.be.a('function');\n});\n\nit(\"numToWord([20, 30, 40, 50, 60, 70, 80, 90]) should return ['twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety']\", () => {\n  expect(numToWord([20, 30, 40, 50, 60, 70, 80, 90])).to.deep.equal(['twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety']);\n});\n\nit(\"numToWord([91, 34, 62, 84, 75, 29, 43, 53]) should return ['ninety-one', 'thirty-four', 'sixty-two', 'eighty-four', 'seventy-five', 'twenty-nine', 'forty-three', 'fifty-three']\", () => {\n  expect(numToWord([91, 34, 62, 84, 75, 29, 43, 53])).to.deep.equal(['ninety-one', 'thirty-four', 'sixty-two', 'eighty-four', 'seventy-five', 'twenty-nine', 'forty-three', 'fifty-three']);\n});\n\nit(\"numToWord([21, 39, 48, 57, 66, 75, 84, 93]) should return ['twenty-one', 'thirty-nine', 'forty-eight', 'fifty-seven', 'sixty-six', 'seventy-five', 'eighty-four', 'ninety-three']\", () => {\n  expect(numToWord([21, 39, 48, 57, 66, 75, 84, 93])).to.deep.equal(['twenty-one', 'thirty-nine', 'forty-eight', 'fifty-seven', 'sixty-six', 'seventy-five', 'eighty-four', 'ninety-three']);\n});\n\nit(\"numToWord([99, 57, 43, 77, 65, 36, 56, 21, 72, 34, 82]) should return ['ninety-nine', 'fifty-seven', 'forty-three', 'seventy-seven', 'sixty-five', 'thirty-six', 'fifty-six', 'twenty-one', 'seventy-two', 'thirty-four', 'eighty-two']\", () => {\n  expect(numToWord([99, 57, 43, 77, 65, 36, 56, 21, 72, 34, 82])).to.deep.equal(['ninety-nine', 'fifty-seven', 'forty-three', 'seventy-seven', 'sixty-five', 'thirty-six', 'fifty-six', 'twenty-one', 'seventy-two', 'thirty-four', 'eighty-two']);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}