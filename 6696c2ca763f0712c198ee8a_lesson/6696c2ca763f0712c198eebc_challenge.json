{
  "_id": "6696c2ca763f0712c198eebc",
  "name": {
    "en": "",
    "ru": "Посчитать количество цифр и записать в объект"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `countOfNumbers`, которая принимает строку и возвращает объект с количеством цифр в строке.\n\nВ строку могут передаваться только цифры `0, 1, 2`.\n\nНапример, строка `011222` должна вернуть объект `{zero: 1, one: 2, two: 3}`.\n\n\nПример запуска функции:\n```javascript\ncountOfNumbers('');        // {zero: 0, one: 0, two: 0}\ncountOfNumbers('012');     // {zero: 1, one: 1, two: 1}\ncountOfNumbers('2112000'); // {zero: 3, one: 2, two: 2}\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function countOfNumbers(str){\n  let countZero = 0;\n  let countOne = 0;\n  let countTwo = 0;\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] === '0') countZero++;\n    else if (str[i] === '1') countOne++;\n    else if (str[i] === '2') countTwo++;\n  }\n  return {\n    'zero': countZero,\n    'one': countOne,\n    'two': countTwo\n  }\n}",
  "openTest": "it('Created function countOfNumbers', () => {\n  expect(countOfNumbers).to.be.a('function');\n});\n\nit(\"countOfNumbers('012') returns {zero: 1, one: 1, two: 1}\", () => {\n  expect(countOfNumbers('012')).to.deep.equal({zero: 1, one: 1, two: 1});\n});\n\nit(\"countOfNumbers('211200') returns {zero: 2, one: 2, two: 2}\", () => {\n  expect(countOfNumbers('211200')).to.deep.equal({zero: 2, one: 2, two: 2});\n});\n\nit(\"countOfNumbers('111') returns {zero: 0, one: 3, two: 0}\", () => {\n  expect(countOfNumbers('111')).to.deep.equal({zero: 0, one: 3, two: 0});\n});\n\nit(\"countOfNumbers('22222') returns {zero: 0, one: 0, two: 5}\", () => {\n  expect(countOfNumbers('22222')).to.deep.equal({zero: 0, one: 0, two: 5});\n});\n\nit(\"countOfNumbers('0000000000') returns {zero: 10, one: 0, two: 0}\", () => {\n  expect(countOfNumbers('0000000000')).to.deep.equal({zero: 10, one: 0, two: 0});\n});\n\nit(\"countOfNumbers('') returns {zero: 0, one: 0, two: 0}\", () => {\n  expect(countOfNumbers('')).to.deep.equal({zero: 0, one: 0, two: 0});\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}