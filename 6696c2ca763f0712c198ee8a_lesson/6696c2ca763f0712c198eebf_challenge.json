{
  "_id": "6696c2ca763f0712c198eebf",
  "name": {
    "en": "",
    "ru": "Заменить телефонный номер на слова"
  },
  "instruction": {
    "en": "",
    "ru": "Функция `phoneNumber` принимает строку с телефонным номером, который может быть записан в разных форматах.\n\nНапример:\n* `(123) 456 7890`\n* `(111)555-2345`\n* `(0 9 8) 111 - 4567`\n\nФункция должна вернуть строку, в которой все цифры заменены на слова и разделены дефисом.\n\nПопытайтесь разобраться в каждой строке кода и перепишите функцию самостоятельно.\n\nВ функции не хватает одной строчки, на месте `code here...`, добавьте нужную строчку, чтобы функция работала правильно.\n\n\nПример запуска функции:\n```javascript\nphoneNumber('(123) 456 7890') // 'one-two-three-four-five-six-seven-eight-nine-zero'\nphoneNumber('(0 9 5) 2 2 3 - 8 6 6 7') // 'zero-nine-five-two-two-three-eight-six-six-seven'\nphoneNumber('9-1-1') // 'nine-one-one'\nphoneNumber('') // ''\n```"
  },
  "initialSolution": "function phoneNumber(str){\n  const arr = {'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'}\n  code here...\n  for(let i = 0; i < str.length; i++){\n    if(str[i] !== ' ' && str[i] !== '(' && str[i] !== ')' && str[i] !== '-'){\n      if(i !== str.length - 1) {\n        newStr += arr[str[i]] + '-';\n      } else {\n        newStr += arr[str[i]];\n      }\n    }\n  }\n  return newStr;\n}",
  "completedSolution": "function phoneNumber(str){\n  const arr = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']\n  let newStr = '';\n  for(let i = 0; i < str.length; i++){\n    if(str[i] !== ' ' && str[i] !== '(' && str[i] !== ')' && str[i] !== '-'){\n      if(i !== str.length - 1) newStr += arr[str[i]] + '-';\n      else newStr += arr[str[i]];\n    }\n  }\n  return newStr;\n}",
  "openTest": "it('Created function phoneNumber', () => {\n  expect(phoneNumber).to.be.a('function');\n});\n\nit(\"phoneNumber('(123) 456 7890') returns 'one-two-three-four-five-six-seven-eight-nine-zero'\", () => {\n  expect(phoneNumber('(123) 456 7890')).to.equal('one-two-three-four-five-six-seven-eight-nine-zero');\n});\n\nit(\"phoneNumber('(111)555-2345') returns 'one-one-one-five-five-five-two-three-four-five'\", () => {\n  expect(phoneNumber('(111)555-2345')).to.equal('one-one-one-five-five-five-two-three-four-five');\n});\n\nit(\"phoneNumber('(0 9 8) 1 2 3 - 4 5 6 7') returns 'zero-nine-eight-one-two-three-four-five-six-seven'\", () => {\n  expect(phoneNumber('(0 9 8) 1 2 3 - 4 5 6 7')).to.equal('zero-nine-eight-one-two-three-four-five-six-seven');\n});\n\nit(\"phoneNumber('9-1-1') returns 'nine-one-one'\", () => {\n  expect(phoneNumber('9-1-1')).to.equal('nine-one-one');\n});\n\nit(\"phoneNumber('') returns ''\", () => {\n  expect(phoneNumber('')).to.equal('');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}