{
  "_id": "6696c2cb763f0712c198f28d",
  "name": {
    "en": "Checking numbers and strings in arrays",
    "ru": "Проверка чисел и строк в массивах"
  },
  "instruction": {
    "en": "Write a function `checkForElementsType` that takes two arrays.\n\nThe function should check that all elements of the first array are numbers, and all elements of the second array are strings.\n\n\n* If all elements of the first array are numbers and all elements of the second array are strings, then return an object of the form `{firstArray: true, secondArray: true}`.\n\n* If one or both of the arrays contain elements of a different type, then change the value in the object to `false` for the corresponding array.\n\n* If one of the arrays is empty, then change the value in the object to `null` for the corresponding array.\n\n* If both arrays are empty, then return the string `'Both arrays are empty'`.\n\n\n\n\nExamples of function calls:\n```javascript\ncheckForElementsType([1, 2, 3], ['1', '2', '3']);     // {firstArray: true, secondArray: true}\ncheckForElementsType([20, 0, 6], ['a', 'b', true]);   // {firstArray: true, secondArray: false}\ncheckForElementsType([undefined, 'str'], [1, 5, 10]); // {firstArray: false, secondArray: false}\ncheckForElementsType([], ['a', 'b', 'c']);            // {firstArray: null, secondArray: true}\ncheckForElementsType(['string'], []);                 // {firstArray: false, secondArray: null}\ncheckForElementsType([], []);                         // 'Both arrays are empty'\n```",
    "ru": "Напишите функцию `checkForElementsType`, которая принимает два массива.\n\nФункция должна проверить, что все элементы первого массива являются числами, а все элементы второго массива являются строками.\n\n\n* Если все элементы первого массива являются числами, а все элементы второго массива являются строками, то вернуть объект вида `{firstArray: true, secondArray: true}`.\n\n* Если один, либо оба, из массивов содержат элементы другого типа, то нужно поменять значение в объекте на `false` для соответствующего массива.\n\n* Если один из массивов пустой, то поменять значение в объекте на `null` для соответствующего массива.\n\n* Если оба массива пустые, то вернуть строку `'Both arrays are empty'`.\n\n\n\n\nПримеры запуска функции:\n```javascript\ncheckForElementsType([1, 2, 3], ['1', '2', '3']);     // {firstArray: true, secondArray: true}\ncheckForElementsType([20, 0, 6], ['a', 'b', true]);   // {firstArray: true, secondArray: false}\ncheckForElementsType([undefined, 'str'], [1, 5, 10]); // {firstArray: false, secondArray: false}\ncheckForElementsType([], ['a', 'b', 'c']);            // {firstArray: null, secondArray: true}\ncheckForElementsType(['string'], []);                 // {firstArray: false, secondArray: null}\ncheckForElementsType([], []);                         // 'Both arrays are empty'\n```"
  },
  "initialSolution": "function checkForElementsType(arr1, arr2)",
  "completedSolution": "function checkForElementsType(arr1, arr2){\n  if(!arr1.length && !arr2.length) return 'Both arrays are empty';\n  \n  let firstArr = true;\n  let secondArr = true;\n  \n  if(!arr1.length) firstArr = null;\n  if(!arr2.length) secondArr = null;\n  \n  for(let i = 0; i < arr1.length; i++){\n    if(typeof arr1[i] !== 'number'){\n     firstArr = false;\n     break;\n    }\n  }\n  \n  for(let i = 0; i < arr2.length; i++){\n    if(typeof arr2[i] !== 'string'){\n     secondArr = false;\n     break;\n    }\n  }\n  \n  return {'firstArray': firstArr, 'secondArray': secondArr};\n}",
  "openTest": "it('Created function checkForElementsType', () => {\n  expect(checkForElementsType).to.be.a('function');\n});\n\nit(\"checkForElementsType([1, 2, 3], ['1', '2', '3']) should return {'firstArray': true, 'secondArray': true}\", () => {\n  expect(checkForElementsType([1, 2, 3], ['1', '2', '3'])).to.be.deep.equal({'firstArray': true, 'secondArray': true});\n});\n\nit(\"checkForElementsType([10, 20, NaN], ['test', 'string', null]) should return {'firstArray': true, 'secondArray': false}\", () => {\n  expect(checkForElementsType([10, 20, NaN], ['test', 'string', null])).to.be.deep.equal({'firstArray': true, 'secondArray': false});\n});\n\nit(\"checkForElementsType([true, undefined, 'str'], ['only', 'strings', 'here']) should return {'firstArray': false, 'secondArray': true}\", () => {\n  expect(checkForElementsType([true, undefined, 'str'], ['only', 'strings', 'here'])).to.be.deep.equal({'firstArray': false, 'secondArray': true});\n});\n\nit(\"checkForElementsType([], ['a', 'b', 'c']) should return {'firstArray': null, 'secondArray': true}\", () => {\n  expect(checkForElementsType([], ['a', 'b', 'c'])).to.be.deep.equal({'firstArray': null, 'secondArray': true});\n});\n\nit(\"checkForElementsType([1, 2, 3], []) should return {'firstArray': true, 'secondArray': null}\", () => {\n  expect(checkForElementsType([1, 2, 3], [])).to.be.deep.equal({'firstArray': true, 'secondArray': null});\n});\n\nit(\"checkForElementsType([], []) should return 'Both arrays are empty'\", () => {\n  expect(checkForElementsType([], [])).to.be.equal('Both arrays are empty');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}