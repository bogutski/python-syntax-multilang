{
  "_id": "6696c2cb763f0712c198f7a4",
  "name": {
    "en": "/*",
    "ru": "Проверка наличия всех элементов в массиве"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `containsAllElements`, которая принимает два массива: `arr` и `elements`.\n\nФункция должна возвращать `true`, если все элементы из массива `elements` содержатся в массиве `arr`, и `false` в противном случае.\n\n\nПримеры запуска функции:\n```javascript\ncontainsAllElements(['apple', 'banana', 'mango'], ['banana', 'apple']); // true\ncontainsAllElements([1, 2, 3, 4, 5], [2, 4, 6]);  // false\ncontainsAllElements(['a', 'b', 'c'], ['a', 'd']); // false\n```"
  },
  "initialSolution": "function containsAllElements(){\n\n}",
  "completedSolution": "function containsAllElements(arr, elements) {\n  for(let el of elements){\n    if(!arr.includes(el)) return false\n  }\n\n  return true;\n}",
  "openTest": "it('Created function containsAllElements', () => {\n  expect(containsAllElements).to.be.a('function');\n});\n\nit(\"Function containsAllElements should include includes method\", () => {\n  const result = containsAllElements.toString();\n  expect(result).to.include('.includes(');\n});\n\nit('containsAllElements([\"apple\", \"banana\", \"mango\"], [\"banana\", \"apple\"]) should return true', function() {\n  expect(containsAllElements([\"apple\", \"banana\", \"mango\"], [\"banana\", \"apple\"])).to.equal(true);\n});\n\nit('containsAllElements([1, 2, 3, 4, 5], [2, 4, 6]) should return false', function() {\n  expect(containsAllElements([1, 2, 3, 4, 5], [2, 4, 6])).to.equal(false);\n});\n\nit('containsAllElements([\"a\", \"b\", \"c\"], [\"a\", \"d\"]) should return false', function() {\n  expect(containsAllElements([\"a\", \"b\", \"c\"], [\"a\", \"d\"])).to.equal(false);\n});\n\nit('containsAllElements([true, false, true], [true, false]) should return true', function() {\n  expect(containsAllElements([true, false, true], [true, false])).to.equal(true);\n});\n\nit('containsAllElements([null, undefined, null], [null]) should return true', function() {\n  expect(containsAllElements([null, undefined, null], [null])).to.equal(true);\n});\n\nit('containsAllElements([NaN, 1, 2], [NaN]) should return true', function() {\n  expect(containsAllElements([NaN, 1, 2], [NaN])).to.equal(true);\n});\n\nit('containsAllElements([\"apple\", \"banana\", \"mango\"], [\"APPLE\"]) should return false', function() {\n  expect(containsAllElements([\"apple\", \"banana\", \"mango\"], [\"APPLE\"])).to.equal(false);\n});\n\nit('containsAllElements([], [\"anything\"]) should return false', function() {\n  expect(containsAllElements([], [\"anything\"])).to.equal(false);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}