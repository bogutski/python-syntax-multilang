{
  "_id": "6696c2ca763f0712c198efbe",
  "name": {
    "en": "",
    "ru": "Сумма чисел в массиве, включая числа в строковом формате"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `sumOfNumbers`, которая принимает массив и возвращает сумму всех чисел в массиве.\n\nВ массиве могут быть разные типы данных, включая числа в строковом формате, например `['1', '2', '3']`. Такие числа\n нужно приводить к числовому типу и тоже суммировать.\n\nЕсли массив пустой, то верните строку `'Array is empty'`.\n\nHint: если не выходит решить задачу, попробуйте использовать следующие проверки:\n* `typeof arr[i] !== 'boolean'`\n* `!isNaN(arr[i])`\n\n\nПримеры запуска функции:\n```javascript\nsumOfNumbers(['abc', true, {}, [], null, NaN, undefined]);            // 0\nsumOfNumbers(['1',2,'3',4,'5',10, true, (8 < 44), 'bca']);            // 25\nsumOfNumbers(['150', '250', '300']);                                  // 700\nsumOfNumbers([true, false, true]);                                    // 0\nsumOfNumbers([]);                                                     // 'Array is empty'\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function sumOfNumbers(arr){\n  if(!arr.length) return 'Array is empty';\n  let sum = 0;\n\n  for(let i = 0; i < arr.length; i++){\n    if(typeof arr[i] !== 'boolean' && !isNaN(arr[i])) sum += +arr[i];\n  }\n\n  return sum;\n}",
  "openTest": "it('Created function sumOfNumbers', () => {\n  expect(sumOfNumbers).to.be.a('function');\n});\n\nit(\"sumOfNumbers(['1',2,'3',4,'5',10, true, false, (5 > 4), 'b', 'c']) should return 25\", () => {\n  expect(sumOfNumbers(['1',2,'3',4,'5',10, true, false, (5 > 4), 'b', 'c'])).to.equal(25);\n});\n\nit(\"sumOfNumbers(['100', '200', '300']) should return 600\", () => {\n  expect(sumOfNumbers(['100', '200', '300'])).to.equal(600);\n});\n\nit(\"sumOfNumbers([true, false, true]) should return 0\", () => {\n  expect(sumOfNumbers([true, false, true])).to.equal(0);\n});\n\nit(\"sumOfNumbers(['abc', true, {a: 1}, [], null, NaN, undefined]) should return 0\", () => {\n  expect(sumOfNumbers(['abc', true, {a: 1}, [], null, NaN, undefined])).to.equal(0);\n});\n\nit(\"sumOfNumbers([]) should return 'Array is empty'\", () => {\n  expect(sumOfNumbers([])).to.equal('Array is empty');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}