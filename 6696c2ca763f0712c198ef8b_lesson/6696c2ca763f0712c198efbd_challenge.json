{
  "_id": "6696c2ca763f0712c198efbd",
  "name": {
    "en": "",
    "ru": "Сумма чисел из трех массивов"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `sumOfNumbers`, которая принимает 3 массива и возвращает сумму всех чисел в этих массивах.\n\nВ массивах могут быть не только числа, но и другие типы данных. Такие элементы массива нужно игнорировать.\n\nЕсли все три массива пустые, то верните строку: `'All arrays are empty'`.\n\nHint: Это задание можно выполнить с помощью только одного цикла.\n\n\nПример запуска функции:\n```javascript\nsumOfNumbers([1,'2',3], [4,5,'6'], ['7',8,9]) // 30\nsumOfNumbers([10, 34, 37, 75], [500, false], []) // 656\nsumOfNumbers([true, (1 === 1), 1000], [], [10]) // 1010\nsumOfNumbers([], [20, 30], [1, 2, 3]) // 56\nsumOfNumbers(['hi'], ['there'], ['no', 'numbers']) // 0\nsumOfNumbers([], [], []) // 'All arrays are empty'\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function sumOfNumbers(arr1, arr2, arr3){\n  if(!arr1.length && !arr2.length && !arr3.length) return 'All arrays are empty';\n\n  let sum = 0;\n  const newArr = [...arr1, ...arr2, ...arr3];\n\n  for(let i = 0; i < newArr.length; i++){\n    if(typeof newArr[i] === 'number') sum += newArr[i];\n  }\n  return sum;\n}",
  "openTest": "it('Created function sumOfNumbers', () => {\n  expect(sumOfNumbers).to.be.a('function');\n});\n\nit(\"sumOfNumbers([1, '2', 3], [4, 5, '6'], ['7', 8, 9]) should return 30\", () => {\n  expect(sumOfNumbers([1, '2', 3], [4, 5, '6'], ['7', 8, 9])).to.equal(30);\n});\n\nit(\"sumOfNumbers([10, 34, 37, 75], [47, 500, false], []) should return 703\", () => {\n  expect(sumOfNumbers([10, 34, 37, 75], [47, 500, false], [])).to.equal(703);\n});\n\nit(\"sumOfNumbers([true, (1 === 1), 1000], [], [9000]) should return 10000\", () => {\n  expect(sumOfNumbers([true, (1 === 1), 1000], [], [9000])).to.equal(10000);\n});\n\nit(\"sumOfNumbers([], [10, 20, 30], [1, 2, 3, 4, 5, 0]) should return 75\", () => {\n  expect(sumOfNumbers([], [10, 20, 30], [1, 2, 3, 4, 5, 0])).to.equal(75);\n});\n\nit(\"sumOfNumbers(['hi', 'there'], ['there', 'is'], ['no', 'numbers']) should return 0\", () => {\n  expect(sumOfNumbers(['hi', 'there'], ['there', 'is'], ['no', 'numbers'])).to.equal(0);\n});\n\nit(\"sumOfNumbers([], [], []) should return 'All arrays are empty'\", () => {\n  expect(sumOfNumbers([], [], [])).to.equal('All arrays are empty');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}