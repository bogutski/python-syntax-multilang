{
  "_id": "6696c2ca763f0712c198efc2",
  "name": {
    "en": "",
    "ru": "Сумма чисел массива, начинающихся на 5"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `sumOfNumbers`, которая принимает массив положительных чисел.\n\nФункция должна вернуть сумму всех чисел, которые начинаются на `5`.\n\nНапример:\n* числа `5, 51, 532, 5898, ...` - должны быть просуммированы\n* числа `4, 15, 355, 754, 9555, ...` - не должны быть просуммированы\n\nЕсли в массиве нет чисел, которые начинаются на `5`, функция должна вернуть `0`.\n\n\nПримеры запуска функции:\n```javascript\nsumOfNumbers([5, 12, 55, 2, 5, 10, 7, 36, 254, 15]) // 65\nsumOfNumbers([15, 55, 74, 4, 856, 5]) // 60\nsumOfNumbers([90, 135, 655, 701]) // 0\nsumOfNumbers([5, 50, 555]) // 610\nsumOfNumbers([]) // 0\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function sumOfNumbers(arr){\n  let sum = 0;\n  for (let i = 0; i < arr.length; i++){\n    if(arr[i].toString()[0] === '5') sum += arr[i];\n  }\n  return sum;\n}",
  "openTest": "it('Created function sumOfNumbers', () => {\n  expect(sumOfNumbers).to.be.a('function');\n});\n\nit('sumOfNumbers([5, 12, 55, 2, 5, 10, 7, 36, 254, 15]) should return 65', () => {\n  expect(sumOfNumbers([5, 12, 55, 2, 5, 10, 7, 36, 254, 15])).to.equal(65);\n});\n\nit('sumOfNumbers([5, 50, 500, 5000, 50000]) should return 55555', () => {\n  expect(sumOfNumbers([5, 50, 500, 5000, 50000])).to.equal(55555);\n});\n\nit('sumOfNumbers([1, 2, 3, 46, 78, 90, 135, 655, 701]) should return 0', () => {\n  expect(sumOfNumbers([1, 2, 3, 46, 78, 90, 135, 655, 701])).to.equal(0);\n});\n\nit('sumOfNumbers([15, 255, 3555, 45555, 555555]) should return 555555', () => {\n  expect(sumOfNumbers([15, 255, 3555, 45555, 555555])).to.equal(555555);\n});\n\nit('sumOfNumbers([0, 51, 523, 564, 5789]) should return 6927', () => {\n  expect(sumOfNumbers([0, 51, 523, 564, 5789])).to.equal(6927);\n});\n\nit('sumOfNumbers([]) should return 0', () => {\n  expect(sumOfNumbers([])).to.equal(0);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}