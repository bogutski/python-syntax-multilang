{
  "_id": "6696c2ca763f0712c198efc1",
  "name": {
    "en": "",
    "ru": "Сумма трехзначных чисел из массива"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `sumOfNumbers`, которая принимает массив чисел.\n\nФункция должна вернуть сумму всех отрицательных и положительных трехзначных чисел из массива.\n\nЕсли таких чисел нет, функция должна вернуть 0.\n\nПримеры запуска функции:\n```javascript\nsumOfNumbers([1, 10, 200, 3000]) // 200\nsumOfNumbers([150, 300, 900, 1000]) // 1350\nsumOfNumbers([-1205, -5000, 7800, 1000]) // 0\nsumOfNumbers([]) // 0\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function sumOfNumbers(arr){\n  let sum = 0;\n\n  for (let i = 0; i < arr.length; i++){\n    if(arr[i] > 99 && arr[i] < 1000 ||\n      arr[i] > -1000 && arr[i] < -99) sum += arr[i]\n  }\n\n  return sum;\n}",
  "openTest": "it('Created function sumOfNumbers', () => {\n  expect(sumOfNumbers).to.be.a('function');\n});\n\nit('sumOfNumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 0]) should return 0', () => {\n  expect(sumOfNumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 0])).to.be.equal(0);\n});\n\nit('sumOfNumbers([1000, 100, -500, -1000]) should return -400', () => {\n  expect(sumOfNumbers([1000, 100, -500, -1000])).to.be.equal(-400);\n});\n\nit('sumOfNumbers([-1000, -99, 99, 1000]) should return 0', () => {\n  expect(sumOfNumbers([-1000, -99, 99, 1000])).to.be.equal(0);\n});\n\nit('sumOfNumbers([999, 100, -999, -100]) should return 0', () => {\n  expect(sumOfNumbers([999, 100, -999, -100])).to.be.equal(0);\n});\n\nit('sumOfNumbers([]) should return 0', () => {\n  expect(sumOfNumbers([])).to.be.equal(0);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}