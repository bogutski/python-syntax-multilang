{
  "_id": "6696c2ca763f0712c198ef8b",
  "content": {
    "ru": "Разберем как пройтись по всем элементам массива и вывести их в консоль.\n\n```javascript\nconst arr = [1, 2, 3, 4, 5];\n\nfor(let i = 0; i < arr.length; i++) {\n  console.log(arr[i]);    // 1, 2, 3, 4, 5\n}\n```\n\n### Сумма всех элементов массива\n\nТеперь дополним наш код, чтобы посчитать сумму всех элементов массива.\n\n```javascript\nconst arr = [1, 2, 3, 4, 5];\n\nlet acc = 0;                            // аккумулятор, с первональным значением 0\n\nfor(let i = 0; i < arr.length; i++) {   // цикл по массиву\n    acc += arr[i];                      // прибавляем к аккумулятору значение элемента массива\n}\nconsole.log(acc)    // 15\n```\n\n\n### Сумма всех элементов массива с нечисловыми значениями\n\nДобавим в наш массив нечисловое значение и посмотрим что получится.\n\n```javascript\nconst arr = [1, 2, 3, 4, 5, 'string', '10'];\n\nlet acc = 0;\n\nfor(let i = 0; i < arr.length; i++) {\n    acc += arr[i];\n}\nconsole.log(acc)    // '15string10'\n```\n\nВ результате мы получили строку, так как при сложении числа со строкой, число приводится к строке.\n\nДавайте попробуем исправить это.\n\nВ следующем примере, мы сделаем так, чтобы суммировались только числовые значения.\n\nПример №1:\n```javascript\nconst arr = [null, 1, 'a', 2, 'b', 3, undefined, 4, 5, 'string', '10'];\n\nlet acc = 0;\n\nfor(let i = 0; i < arr.length; i++) {\n    if(typeof arr[i] === 'number') acc += arr[i]; // если тип элемента массива число, то прибавляем его к аккумулятору\n}\nconsole.log(acc)    // 15\n```\n\nПример №2:\n```javascript\nconst arr = [1, 2, 3, NaN];\n\nlet acc = 0;\n\nfor(let i = 0; i < arr.length; i++) {\n  if(typeof arr[i] === 'number') acc += arr[i]; // если тип элемента массива число, то прибавляем его к аккумулятору\n}\nconsole.log(acc)    // NaN\n```\n\nМы сделали так, чтобы в аккумулятор прибавлялись только числовые значения и в первом примере все сработало, но во втором - мы получили `NaN`.\n\nТак случилось потому, что `NaN` имеет тип `number`, но при этом не является числом.\n\n\n### Сумма числовых и строковых значений, если в строке содержится число\n\nИзменим наш код, чтобы исправить проблему с прошлого примера.\n\n```javascript\nconst arr = [1, 2, '4', NaN, 'hello', undefined, null, -3];\n\nlet acc = 0;\n\nfor(let i = 0; i < arr.length; i++) {\n    if(!Number.isNaN(+arr[i])) acc += +arr[i];  // если элемент массива не NaN, то прибавляем его к аккумулятору\n}\nconsole.log(acc)    // 4\n```\n\nОтлично, теперь все работает как надо.\n\nОбратите внимание, что мы использовали унарный плюс `+` при проверке на `NaN` и при сложении, чтобы привести строку к числу.",
    "en": "Let's see how to go through all the elements of the array and display them in the console.\n\n```javascript\nconst arr = [1, 2, 3, 4, 5];\n\nfor(let i = 0; i < arr.length; i++) {\n  console.log(arr[i]);    // 1, 2, 3, 4, 5\n}\n```\n\n### Sum of all elements of the array\n\nNow let's extend our code to calculate the sum of all the elements of the array.\n\n```javascript\nconst arr = [1, 2, 3, 4, 5];\n\nlet acc = 0; // accumulator, with primary value 0\n\nfor(let i = 0; i < arr.length; i++) { // array loop\n    acc += arr[i]; // add the value of array item to the accumulator\n}\nconsole.log(acc) // 15\n```\n\n\n### The sum of all elements of an array with nonnumeric values\n\nLet's add a non-numeric value to our array and see what happens.\n\n```javascript\nconst arr = [1, 2, 3, 4, 5, 'string', '10'];\n\nlet acc = 0;\n\nfor(let i = 0; i < arr.length; i++) {\n    acc += arr[i];\n}\nconsole.log(acc)    // '15string10'\n```\n\nAs a result, we got a string, because when you add a number to a string, the number is reduced to a string.\n\nLet's try to fix that.\n\nIn the following example, we will make only numeric values add up.\n\nExample No1:\n```javascript\nconst arr = [null, 1, 'a', 2, 'b', 3, undefined, 4, 5, 'string', '10'];\n\nlet acc = 0;\n\nfor(let i = 0; i < arr.length; i++) {\n    if(typeof arr[i] === 'number') acc += arr[i]; //  if the type of an array element is a number, add it to the accumulator\n}\nconsole.log(acc)    // 15\n```\n\nExample No2:\n```javascript\nconst arr = [1, 2, 3, NaN];\n\nlet acc = 0;\n\nfor(let i = 0; i < arr.length; i++) {\n  if(typeof arr[i] === 'number') acc += arr[i]; //  if the type of the array element is a number, add it to the accumulator\n}\nconsole.log(acc)    // NaN\n```\n\nWe made it so that only numeric values are added to the accumulator and in the first example everything worked, but in the second one we got `NaN`.\n\nThis is because `NaN` is of type `number`, but it is not a number.\n\n\n### Sum of numeric and string values, if the string contains a number\n\nLet's change our code to fix the problem from the last example.\n\n```javascript\nconst arr = [1, 2, '4', NaN, 'hello', undefined, null, -3];\n\nlet acc = 0;\n\nfor(let i = 0; i < arr.length; i++) {\n    if(!Number.isNaN(+arr[i])) acc += +arr[i];  // if the array element is not NaN, then add it to the accumulator\n}\nconsole.log(acc)    // 4\n```\n\nGreat, now everything is working properly.\n\nNote that we used unary plus `+` when checking for `NaN` and when adding to bring the string to a number.",
    "es": "# Сумма чисел в массиве language: es"
  },
  "video": {
    "ru": "https://youtu.be/p-A1RZ-Vj_s",
    "en": "",
    "es": ""
  }
}