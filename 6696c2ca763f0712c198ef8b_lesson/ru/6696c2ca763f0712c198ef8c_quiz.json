{
  "name": "Сумма чисел в массиве",
  "questions": {
    "0": {
      "name": "Выберите верный вариант типа данных NaN",
      "variants": {
        "0": {
          "name": "'string'"
        },
        "1": {
          "name": "'number'"
        },
        "2": {
          "name": "'boolean'"
        },
        "3": {
          "name": "'object'"
        }
      }
    },
    "1": {
      "name": "Что определяет метод Number.isNaN()?",
      "variants": {
        "0": {
          "name": "Является ли переданное значение NaN"
        },
        "1": {
          "name": "Является ли переданное значение числом"
        },
        "2": {
          "name": "Является ли переданное значение строкой"
        },
        "3": {
          "name": "Является ли переданное значение null"
        }
      }
    },
    "2": {
      "name": "Что получится в результате выполнения кода ниже?",
      "description": "```javascript\nconst arr = [1, 2, 3, 4, 5];\nfor(let i = 0; i < arr.length; i++) {\n  console.log(arr[i]);\n}\nfor(let i = arr.length - 1; i >= 0; i--) {\n  console.log(arr[i]);\n}\n```",
      "variants": {
        "0": {
          "name": "5 4 3 2 1\n1 2 3 4 5"
        },
        "1": {
          "name": "Первый и второй циклы пройдутся по массиву слева направо"
        },
        "2": {
          "name": "1 2 3 4 5\n5 4 3 2 1"
        },
        "3": {
          "name": "Первый цикл пройдется по массиву слева направо, второй - справа налево"
        }
      }
    },
    "3": {
      "name": "Что получится в результате запуска кода ниже?",
      "description": "```javascript\nconst arr = [2, 4, 6];\nlet acc = 0;\nfor(let i = 0; i < arr.length; i++) {\n  console.log(`${acc} + ${arr[i]} = ${acc + arr[i]}`);\n  acc += arr[i];\n}\n```",
      "variants": {
        "0": {
          "name": "'2 + 2 = 4'\n'4 + 4 = 8'\n'8 + 6 = 14'"
        },
        "1": {
          "name": "'0 + 2 = 2'\n'2 + 4 = 6'\n'6 + 6 = 12'"
        },
        "2": {
          "name": "2 6 12"
        },
        "3": {
          "name": "2 4 6"
        }
      }
    },
    "4": {
      "name": "Верно ли, что сумма элементов одного и того же массива слева направо и справа налево одинакова\nи результатом работы кода ниже будет true?",
      "description": "```javascript\nconst arr = [1, 3, -7];\nlet acc = 0;\nfor(let i = 0; i < arr.length; i++) {\n  acc += arr[i];\n}\nlet acc2 = 0;\nfor(let i = arr.length - 1; i >= 0; i--) {\n  acc2 += arr[i];\n}\nconsole.log(acc === acc2);\n```",
      "variants": {
        "0": {
          "name": "Нет, сумма элементов слева направо и справа налево будет разной, результатом работы кода будет false"
        },
        "1": {
          "name": "Да, сумма элементов слева направо и справа налево одинаковая, результатом работы кода будет true"
        }
      }
    },
    "5": {
      "name": "Что произойдет если в массиве помимо чисел будут и строки и каким будет результат для кода ниже?",
      "description": "```javascript\nconst arr = [400, 4, ' error'];\nlet acc = 0;\nfor(let i = 0; i < arr.length; i++) {\n  acc += arr[i];\n}\nconsole.log(acc)\n```",
      "variants": {
        "0": {
          "name": "Произойдет конкатенация. Результатом будет '4004 error'"
        },
        "1": {
          "name": "Строки не учтутся, а все числа в массиве сложатся. Результатом будет 404"
        },
        "2": {
          "name": "Числа, идущие до строки сложатся и дальше произойдет конкатенация. Результатом будет '404 error'"
        },
        "3": {
          "name": "Сложение чисел в таком случае невозможно. Результатом будет NaN"
        }
      }
    },
    "6": {
      "name": "Почему результатом работы кода ниже будет '0error 4004'?",
      "description": "```javascript\nconst arr = ['error ', 400, 4];\nlet acc = 0;\nfor(let i = 0; i < arr.length; i++) {\n  acc += arr[i];\n}\nconsole.log(acc)\n```",
      "variants": {
        "0": {
          "name": "Первый элемент массива - строка, сложение строки и числа приводит к конкатенации,\nа 0 в начале результирующий строки - это первоначальное значение переменной acc"
        },
        "1": {
          "name": "Результатом будет 'error 4004', потому что первый элемент массива строка, а сложение строк приводит к конкатенации"
        },
        "2": {
          "name": "Результатом будет 'error 404'. Числа в конце массива сложатся, а соединившись со строкой, приведут к конкатенации"
        },
        "3": {
          "name": "Результатом будет 404. Строка не учтется, а все числа в массиве сложатся"
        }
      }
    },
    "7": {
      "name": "Верно ли, что результатом работы кода ниже будет 111?",
      "description": "```javascript\nconst arr = [1, 10, 100, NaN];\nlet acc = 0;\nfor(let i = 0; i < arr.length; i++) {\n  acc += arr[i];\n}\nconsole.log(acc)\n```",
      "variants": {
        "0": {
          "name": "Верно, результатом будет 111. NaN не участвует в вычислениях, а все числа в массиве сложатся"
        },
        "1": {
          "name": "Неверно, результатом будет NaN. Сложение чисел с NaN приводит к NaN"
        }
      }
    },
    "8": {
      "name": "Верно ли исправлен код ниже и результатом работы будет 111?",
      "description": "```javascript\nconst arr = [1, 10, 100, NaN];\nlet acc = 0;\nfor(let i = 0; i < arr.length; i++) {\n  if(typeof arr[i] === 'number') acc += arr[i];\n}\nconsole.log(acc)\n```",
      "variants": {
        "0": {
          "name": "Нет, результатом будет NaN, потому что тип данных NaN - number, а сложение чисел с NaN приводит к NaN"
        },
        "1": {
          "name": "Верно, результатом будет 111. Условие if внутри цикла исключает NaN из вычислений"
        }
      }
    },
    "9": {
      "name": "Выберите верный вариант исправления условия if внутри цикла ниже, чтобы результатом было -222",
      "description": "```javascript\nconst arr = [-2, -20, -200, NaN];\nlet acc = 0;\nfor(let i = 0; i < arr.length; i++) {\n  if(typeof arr[i] === 'number') acc += arr[i];\n}\nconsole.log(acc)\n```",
      "variants": {
        "0": {
          "name": "if(!Number.isNaN(i))"
        },
        "1": {
          "name": "if(Number.isNaN(+arr[i]))"
        },
        "2": {
          "name": "if(!Number.isNaN(+arr[i]))"
        },
        "3": {
          "name": "if(!Number.isNaN(arr[i]))"
        }
      }
    }
  }
}