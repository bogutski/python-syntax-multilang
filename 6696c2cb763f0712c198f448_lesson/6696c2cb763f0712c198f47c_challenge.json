{
  "_id": "6696c2cb763f0712c198f47c",
  "name": {
    "en": "/*",
    "ru": "Преобразование температур"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `convertCelsiusToFahrenheit`, которая принимает массив температур в градусах Цельсия и возвращает новый массив, где каждая температура преобразована в градусы Фаренгейта.\n\nИспользуйте метод `map()` для этого преобразования.\n\nФормула для конвертации: Фаренгейт = (Цельсий * 9/5) + 32.\n\n\nПример запуска функции:\n```javascript\nconvertCelsiusToFahrenheit([0, 25, 30]);    // [ 32, 77, 86 ]\nconvertCelsiusToFahrenheit([-20, -10, -5]); // [ -4, 14, 23 ]\n```"
  },
  "initialSolution": "function convertCelsiusToFahrenheit(){\n\n}",
  "completedSolution": "function convertCelsiusToFahrenheit(arr) {\n  return arr.map(el => (el * 9 / 5) + 32);\n}",
  "openTest": "it('Created function convertCelsiusToFahrenheit', () => {\n  expect(convertCelsiusToFahrenheit).to.be.a('function');\n});\n\nit('Function convertCelsiusToFahrenheit should include method map()', () => {\n  const res = convertCelsiusToFahrenheit.toString()\n  expect(res).to.include('.map(')\n});\n\nit('convertCelsiusToFahrenheit([]) should return []', () => {\n  expect(convertCelsiusToFahrenheit([])).to.deep.equal([]);\n});\n\nit('convertCelsiusToFahrenheit([-20, -10, 0]) should return [-4, 14, 32]', () => {\n  expect(convertCelsiusToFahrenheit([-20, -10, 0])).to.deep.equal([-4, 14, 32]);\n});\n\nit('convertCelsiusToFahrenheit([0.5, 25.3, 30.7]) should return [32.9, 77.54, 87.26]', () => {\n  const celsiusTemps = [0.5, 25.3, 30.7];\n  const expectedFahrenheit = [32.9, 77.54, 87.26];\n  expect(convertCelsiusToFahrenheit(celsiusTemps).map(temp => parseFloat(temp.toFixed(2)))).to.deep.equal(expectedFahrenheit);\n});\n\nit('convertCelsiusToFahrenheit([100]) should return [212]', () => {\n  const celsiusTemps = [100];\n  const expectedFahrenheit = [212];\n  expect(convertCelsiusToFahrenheit(celsiusTemps)).to.deep.equal(expectedFahrenheit);\n});\n\nit('convertCelsiusToFahrenheit([-30, -10, 0, 20, 40]) should return [-22, 14, 32, 68, 104]', () => {\n  const celsiusTemps = [-30, -10, 0, 20, 40];\n  const expectedFahrenheit = [-22, 14, 32, 68, 104];\n  expect(convertCelsiusToFahrenheit(celsiusTemps)).to.deep.equal(expectedFahrenheit);\n});\n\nit('convertCelsiusToFahrenheit([0.555, 25.123, 30.987]) should return [32.999, 77.2214, 87.7756]', () => {\n  const celsiusTemps = [0.555, 25.123, 30.987];\n  const expectedFahrenheit = [32.999, 77.2214, 87.7756];\n  expect(convertCelsiusToFahrenheit(celsiusTemps).map(temp => parseFloat(temp.toFixed(2)))).to.deep.equal(expectedFahrenheit.map(temp => parseFloat(temp.toFixed(2))));\n});\n\nit('convertCelsiusToFahrenheit([-15]) should return [5]', () => {\n  const celsiusTemps = [-15];\n  const expectedFahrenheit = [5];\n  expect(convertCelsiusToFahrenheit(celsiusTemps)).to.deep.equal(expectedFahrenheit);\n});\n\nit('convertCelsiusToFahrenheit([0]) should return [32]', () => {\n  const celsiusTemps = [0];\n  const expectedFahrenheit = [32];\n  expect(convertCelsiusToFahrenheit(celsiusTemps)).to.deep.equal(expectedFahrenheit);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}