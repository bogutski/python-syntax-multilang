{
  "_id": "6696c2cb763f0712c198f47d",
  "name": {
    "en": "/*",
    "ru": "Удвоение значений в массиве"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `doubleValues`, которая принимает массив чисел и возвращает новый массив, где каждое число удвоено.\n\nИспользуйте метод map() для этой задачи.\n\n\nПример запуска функции:\n```javascript\ndoubleValues([1, 2, 3, 4]); // [ 2, 4, 6, 8 ]\ndoubleValues([-100, -50, -10, - 5]); // [ -200, -100, -20, -10 ]\n```"
  },
  "initialSolution": "function doubleValues(){\n\n}",
  "completedSolution": "function doubleValues(arr) {\n  return arr.map(num => num * 2);\n}",
  "openTest": "it('Created function doubleValues', () => {\n  expect(doubleValues).to.be.a('function');\n});\n\nit('Function doubleValues should include method map()', () => {\n  const res = doubleValues.toString()\n  expect(res).to.include('.map(')\n});\n\nit(\"doubleValues([1, 2, 3, 4]) should return [2, 4, 6, 8]\", () => {\n  expect(doubleValues([1, 2, 3, 4])).to.deep.equal([2, 4, 6, 8]);\n});\n\nit(\"doubleValues([-1, -2, -3, -4]) should return [-2, -4, -6, -8]\", () => {\n  expect(doubleValues([-1, -2, -3, -4])).to.deep.equal([-2, -4, -6, -8]);\n});\n\nit(\"doubleValues([0, 0, 0]) should return [0, 0, 0]\", () => {\n  expect(doubleValues([0, 0, 0])).to.deep.equal([0, 0, 0]);\n});\n\nit(\"doubleValues([]) should return []\", () => {\n  expect(doubleValues([])).to.deep.equal([]);\n});\n\nit(\"doubleValues([1.5, 2.5, 3.5]) should return [3.0, 5.0, 7.0]\", () => {\n  expect(doubleValues([1.5, 2.5, 3.5])).to.deep.equal([3.0, 5.0, 7.0]);\n});\n\nit(\"doubleValues([10, 20, 30]) should return [20, 40, 60]\", () => {\n  expect(doubleValues([10, 20, 30])).to.deep.equal([20, 40, 60]);\n});\n\nit(\"doubleValues([-2, 0, 2]) should return [-4, 0, 4]\", () => {\n  expect(doubleValues([-2, 0, 2])).to.deep.equal([-4, 0, 4]);\n});\n\nit(\"doubleValues([2]) should return [4]\", () => {\n  expect(doubleValues([2])).to.deep.equal([4]);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}