{
  "_id": "6696c2ca763f0712c198e76d",
  "name": {
    "en": "Checking for the presence of an element in an array. Fruits",
    "ru": "Проверка наличия элемента в массиве. Фрукты"
  },
  "instruction": {
    "en": "The `list` function takes two parameters:\n* `fruits` - array of strings\n* `key` - string\n\nThe function should return `true` if `key` is in the `fruits` array and `false` otherwise.\n\nAn example of running the function:\n``` javascript\nlist(['apple', 'banana', 'orange'], 'apple') // true\n\nlist(['apple', 'banana', 'orange'], 'pear') // false\n```",
    "ru": "Функция `list` принимает два параметра:\n* `fruits` - массив строк\n* `key` - строка\n\nФункция должна вернуть `true`, если `key` есть в массиве `fruits`, и `false` в противном случае.\n\nПример запуска функции:\n``` javascript\nlist(['apple', 'banana', 'orange'], 'apple') // true\n\nlist(['apple', 'banana', 'orange'], 'pear') // false\n```"
  },
  "initialSolution": "function",
  "completedSolution": "function list(fruits, key) {\n  return fruits.includes(key)\n}",
  "openTest": "it('Created function list', () => {\n  expect(list).to.be.a('function');\n});\n\nit('list([\\'apple\\', \\'banana\\', \\'orange\\'], \\'apple\\') should return true', () => {\n    expect(list(['apple', 'banana', 'orange'], 'apple')).to.equal(true);\n});\n\nit('list([\\'apple\\', \\'banana\\', \\'orange\\'], \\'pear\\') should return false', () => {\n    expect(list(['apple', 'banana', 'orange'], 'pear')).to.equal(false);\n});\n\nit('list([\\'mango\\', \\'apricot\\', \\'grape\\'], \\'mango\\') should return true', () => {\n    expect(list(['mango', 'apricot', 'grape'], 'mango')).to.equal(true);\n});\n\nit('list([\\'mango\\', \\'apricot\\', \\'grape\\'], \\'pear\\') should return false', () => {\n    expect(list(['mango', 'apricot', 'grape'], 'pear')).to.equal(false);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}