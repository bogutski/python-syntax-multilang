{
  "_id": "6696c2ca763f0712c198e775",
  "name": {
    "en": "Finding a duplicate of the last element in an array",
    "ru": "Поиск дубликата последнего элемента в массиве"
  },
  "instruction": {
    "en": "The `searchDuplicate` function takes the `arr` array as a parameter.\n\nYou need to check whether the last element of the array is a duplicate of any of the previous elements.\n\nTo check, find the last element of the array and then use the `lastIndexOf` method to find the previous occurrence of this element in the array.\n\nThe function should return the string:\n`Last element is duplicate` if the last element is a duplicate\n`Last element is not duplicate` if the last element is not duplicate\n\nAn example of running the function:\n```javascript\nsearchDuplicate(['a', 'b', 'c', 'd', 'a']); // Last element is duplicate\nsearchDuplicate([35, 25, 15, 55, 45]); // Last element is not duplicate\n```",
    "ru": "Функция `searchDuplicate` принимает массив `arr` в качестве параметра.\n\nНеобходимо проверить, является ли последний элемент массива дубликатом какого-либо из предыдущих элементов.\n\nДля проверки найдите последний элемент массива, а затем используйте метод `lastIndexOf` для поиска предыдущего вхождения этого элемента в массив.\n\nФункция должна вернуть строку:\n`Last element is duplicate`, если последний элемент является дубликатом,\n`Last element is not duplicate`, если последний элемент не является дубликатом\n\nПример запуска функции:\n```javascript\nsearchDuplicate(['a', 'b', 'c', 'd', 'a']); // Last element is duplicate\nsearchDuplicate([35, 25, 15, 55, 45]); // Last element is not duplicate\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function searchDuplicate(arr) {\n  const lastElement = arr[arr.length - 1];\n  if (arr.lastIndexOf(lastElement, arr.length - 2) !== -1) {\n    return 'Last element is duplicate';\n  }\n  return 'Last element is not duplicate';\n}",
  "openTest": "it('Created function searchDuplicate', () => {\n  expect(searchDuplicate).to.be.a('function');\n});\n\nit(`searchDuplicate(['a', 'b', 'c', 'd', 'a']) should return \"Last element is duplicate\"`, () => {\n  expect(searchDuplicate(['a', 'b', 'c', 'd', 'a'])).to.be.equal(\n    'Last element is duplicate',\n  );\n});\n\nit(`searchDuplicate([35, 25, 15, 55, 45]) should return \"Last element is not duplicate\"`, () => {\n  expect(searchDuplicate([35, 25, 15, 55, 45])).to.be.equal(\n    'Last element is not duplicate',\n  );\n});\n\nit(`searchDuplicate(['Alice', 'Anna', 'Alisha', 'Amy', 'Amy']) should return \"Last element is duplicate\"`, () => {\n  expect(searchDuplicate(['Alice', 'Anna', 'Alisha', 'Amy', 'Amy'])).to.be.equal(\n    'Last element is duplicate',\n  );\n});\n\nit(`searchDuplicate(['a', 'b', 'c', 'd', 'e']) should return \"Last element is not duplicate\"`, () => {\n  expect(searchDuplicate(['a', 'b', 'c', 'd', 'e'])).to.be.equal(\n    'Last element is not duplicate',\n  );\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}