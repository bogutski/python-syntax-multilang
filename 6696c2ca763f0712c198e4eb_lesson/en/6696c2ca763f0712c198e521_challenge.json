{
  "name": "Calculator in the object",
  "instruction": "Write a function `objectCalculator` that takes three parameters: `number1`, `number2`, `operation`. The first two parameters are numbers, the third is a string.\n\nThe `operation` can be equal to one of four operations: `+`, `-`, `*`, `/`.\n\nDepending on the value of `operation` the function must return different objects:\n\n- If `operation` equals `+`, the function must return an object with properties `number1`, `number2`, `sum`. `sum` is the sum of `number1` and `number2`.\n- If `operation` is `-`, then the function must return an object with properties `number1`, `number2`, `sub`. `sub` is the difference of `number1` and `number2`.\n- If `operation` is `*`, then the function must return an object with properties `number1`, `number2`, `multi`. `multi` is the product of `number1` and `number2`.\n- If `operation` is `/`, then the function must return an object with properties `number1`, `number2`, `div`. `div` is the quotient of `number1` and `number2`.\n\nExamples of running a function:\n``javascript.\nobjectCalculator(10, 20, '+'); // { number1: 10, number2: 20, sum: 30 }\nobjectCalculator(5, 10, '-'); // { number1: 5, number2: 10, sub: -5 }\nobjectCalculator(5, 10, '*'); // { number1: 5, number2: 10, multi: 50 }\nobjectCalculator(10, 2, '/'); // { number1: 10, number2: 2, div: 5 }\n```\n\nTo solve the problem use the `if` construct and string comparison using the `===` operator.\n\nA similar example:\n```javascript\nfunction sum(a, b, c) {\n  if (c === '+') {\n    return {\n      a,\n      b,\n      sum: a + b,\n    };\n  }\n}\n```"
}