{
  "_id": "6696c2ca763f0712c198e524",
  "name": {
    "en": "Triple nesting of objects",
    "ru": "Тройная вложенность объектов"
  },
  "instruction": {
    "en": "Write a function `tripleNestedObject` that takes one parameter: `param`. The parameter is any value.\n\nAn example will help you understand what you need to do:\n\n```javascript\ntripleNestedObject(5); // { first: { second: { third: { param: 5 } } } }\ntripleNestedObject('hello'); // { first: { second: { third: { param: 'hello' } } } }\n```\n\nThe function should return an object that has three nested properties `first`, ``second`, `third`. Each of these properties must be an object.",
    "ru": "Напишите функцию `tripleNestedObject`, которая принимает один параметр: `param`. Параметр - любое значение.\n\nПример поможет понять что нужно сделать:\n\n```javascript\ntripleNestedObject(5); // { first: { second: { third: { param: 5 } } } }\ntripleNestedObject('hello'); // { first: { second: { third: { param: 'hello' } } } }\n```\n\nФункция должна возвращать объект, в котором есть три вложенных свойства `first`, `second`, `third`. Каждое из этих свойств должно быть объектом."
  },
  "initialSolution": "fun",
  "completedSolution": "function tripleNestedObject(param) {\n  return {\n    first: {\n      second: {\n        third: {\n          param,\n        },\n      },\n    },\n  };\n}",
  "openTest": "it('Created function tripleNestedObject', () => {\n  expect(tripleNestedObject).to.be.a('function');\n});\n\nit('tripleNestedObject(5) return { first: { second: { third: { param: 5 } } } }', () => {\n  expect(tripleNestedObject(5)).eql({ first: { second: { third: { param: 5 } } } });\n});\n\nit('tripleNestedObject(\"hello\") return { first: { second: { third: { param: \"hello\" } } } }', () => {\n  expect(tripleNestedObject('hello')).eql({\n    first: { second: { third: { param: 'hello' } } },\n  });\n});\n\nit('tripleNestedObject(true) return { first: { second: { third: { param: true } } } }', () => {\n  expect(tripleNestedObject(true)).eql({ first: { second: { third: { param: true } } } });\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}