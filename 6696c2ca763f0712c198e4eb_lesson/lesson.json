{
  "_id": "6696c2ca763f0712c198e4eb",
  "content": {
    "ru": "Объекты в JavaScript - это одна из основных структур данных, которые могут хранить и организовывать информацию в коде.\n\nОбъекты представляют собой коллекцию свойств, где свойство — это пара `ключ: значение`. Ключ — это уникальная строка, а значением может быть любой тип данных в JavaScript, включая другой объект.\n\nСинтаксис создания объекта:\n\n```javascript\nlet person = {\n  key: value,\n  key1: value1,\n  key2: value,\n  key3: value1,\n};\n```\n\nКаждый ключ в объекте должен быть уникальным и не может повторяться, тогда как значения могут повторяться.\n\nОбъекты в JavaScript — это как коробки, которые могут хранить разные вещи. Например, в одной коробке может быть информация о тебе, а в другой — информация о друге. Кроме того, коробки могут содержать другие коробки внутри себя, что позволяет организовать информацию в сложные структуры.\n\n![](https://course-qa-basics.s3.us-west-1.amazonaws.com/box-js.png)\n\nРассмотрим пример объекта, который представляет информацию о человеке:\n\n```javascript\nlet person = {\n  name: 'Eve',\n  age: 10,\n  favoriteColor: 'Blue',\n};\n```\n\nЭтот объект содержит три свойства:\n\n- name (имя)\n- age (возраст)\n- favoriteColor (любимый цвет)\n\nНапишем функцию `makePersonObject` которая будет принимать `name, age, favoriteColor` и возвращать объект:\n\n```javascript\nfunction makePersonObject(name, age, favoriteColor) {\n  return {\n    name: name,\n    age: age,\n    favoriteColor: favoriteColor,\n  };\n}\n\nconst stivePerson = makePersonObject('Stive', 5, 'Yellow');\nconst evePerson = makePersonObject('Eve', 10, 'Blue');\n\nconsole.log(stivePerson); // { name: \"Stive\", age: 5 , favoriteColor: \"Yellow\" }\nconsole.log(evePerson); // { name: \"Eve\", age: 10 , favoriteColor: \"Blue\" }\n```\n![](https://course-qa-basics.s3.us-west-1.amazonaws.com/girl-and-key.png)",
    "en": "Objects in JavaScript are one of the basic data structures that can store and organize information in code.\n\nObjects are a collection of properties, where a property is a `key: value` pair. The key is a unique string, and the value can be any data type in JavaScript, including another object.\n\nSyntax for creating an object:\n\n```javascript\nlet person = {\n  key: value,\n  key1: value1,\n  key2: value,\n  key3: value1,\n};\n```\n\nEach key in an object must be unique and cannot be repeated, while values can be repeated.\n\nObjects in JavaScript are like boxes that can store different things. For example, one box can hold information about you, and another can hold information about a friend. Also, boxes can contain other boxes within them, allowing you to organize information into complex structures.\n\n![](https://course-qa-basics.s3.us-west-1.amazonaws.com/box-js.png)\n\nConsider the example of an object that represents information about a person:\n\n```javascript\nlet person = {\n  name: 'Eve',\n  age: 10,\n  favoriteColor: 'Blue',\n};\n```\n\nThis object contains three properties:\n\n- name\n- age\n- favoriteColor\n\nLet's write a function `makePersonObject` that will take `name, age, favoriteColor` and return an object:\n\n```javascript\nfunction makePersonObject(name, age, favoriteColor) {\n  return {\n    name: name,\n    age: age,\n    favoriteColor: favoriteColor,\n  };\n}\n\nconst stivePerson = makePersonObject('Stive', 5, 'Yellow');\nconst evePerson = makePersonObject('Eve', 10, 'Blue');\n\nconsole.log(stivePerson); // { name: \"Stive\", age: 5 , favoriteColor: \"Yellow\" }\nconsole.log(evePerson); // { name: \"Eve\", age: 10 , favoriteColor: \"Blue\" }\n```\n![](https://course-qa-basics.s3.us-west-1.amazonaws.com/girl-and-key.png)",
    "es": "# Создание объекта language: es"
  },
  "video": {
    "ru": "https://youtu.be/fEmnFbNU-_I",
    "en": "",
    "es": ""
  }
}