{
  "_id": "6696c2ca763f0712c198e523",
  "name": {
    "en": "Creating a user object",
    "ru": "Создание объекта пользователя"
  },
  "instruction": {
    "en": "Write a function `createUser` that takes 6 parameters:\n\n* `firstName` - user's first name, a string that may contain spaces at the beginning and end of the string,\n* `lastName` - user's last name, a string that may contain spaces at the beginning and end of the string,\n* `age` - user's age, a number,\n* `city` - user's city, a string that may contain spaces at the beginning and end of the string,\n* `email` - user's email, a string that may contain spaces at the beginning and end of the string, and may be written in different cases,\n* `phone` - user's phone number, a string that may contain spaces at the beginning and end of the string.\n\nThe function should return an object with the following properties:\n\n* `name` - user's full name, a string written in the format `firstName lastName`, with spaces at the beginning and end of the string removed,\n* `age` - user's age, a number,\n* `city` - user's city, a string with spaces at the beginning and end of the string removed,\n* `email` - user's email, a string with spaces at the beginning and end of the string removed, and all letters in lowercase,\n* `phone` - user's phone number, a string with spaces at the beginning and end of the string removed, and should start with `+` if it is not at the beginning of the original string.\n\nExamples of function calls:\n```javascript\ncreateUser('  Alex', '  Smith', 20, '  New York', ' Alex@Sample.nY ', '  12345678900 ');\n// { name: 'Alex Smith', age: 20, city: 'New York', email: 'alex@sample.ny', phone: '+12345678900' }\n\ncreateUser('  Alice', '  Saw', 21, '  Miami  ', ' ALICE@MIAMI.SM ', '  +12345678900 ');\n// { name: 'Alice Saw', age: 21, city: 'Miami', email: 'alice@miami.sm', phone: '+12345678900' }\n```\n\nNote that in the examples above, the `phone` property in some examples has a `+` symbol at the beginning of the string, while in others it does not. If it is not present, it should be added.",
    "ru": "Напишите функцию `createUser`, которая принимает 6 параметров:\n\n* `firstName` – имя пользователя, строка, может содержать пробелы в начале и в конце строки,\n* `lastName` – фамилия пользователя, строка, может содержать пробелы в начале и в конце строки,\n* `age` – возраст пользователя, число,\n* `city` – город пользователя, строка, может содержать пробелы в начале и в конце строки,\n* `email` – email пользователя, строка, может содержать пробелы в начале и в конце строки, может быть записан в разных регистрах,\n* `phone` – телефон пользователя, строка, может содержать пробелы в начале и в конце строки.\n\nФункция должна возвращать объект со свойствами:\n\n* `name` – имя и фамилия пользователя, строка, записанная в формате `firstName lastName`, пробелы в начале и в конце строки должны быть удалены,\n* `age` – возраст пользователя, число,\n* `city` – город пользователя, строка, пробелы в начале и в конце строки должны быть удалены,\n* `email` – email пользователя, строка, пробелы в начале и в конце строки должны быть удалены, все буквы должны быть в нижнем регистре,\n* `phone` – телефон пользователя, строка, пробелы в начале и в конце строки должны быть удалены, должен начинаться с `+` если его нет в начале исходной строки.\n\nПримеры запуска функции:\n ```javascript\ncreateUser('  Alex', '  Smith', 20, '  New York', ' Alex@Sample.nY ', '  12345678900 ');\n// { name: 'Alex Smith', age: 20, city: 'New York', email: 'alex@sample.ny', phone: '+12345678900' }\n\ncreateUser('  Alice', '  Saw', 21, '  Miami  ', ' ALICE@MIAMI.SM ', '  +12345678900 ');\n// { name: 'Alice Saw', age: 21, city: 'Miami', email: 'alice@miami.sm', phone: '+12345678900' }\n```\n\nОбратите внимание, что в примерах выше, в свойстве `phone` в некоторых примерах есть символ `+` в начале строки, а в некоторых его нет. Если его нет, то его нужно добавить."
  },
  "initialSolution": "fun",
  "completedSolution": "function createUser(firstName, lastName, age, city, email, phone) {\n  let p = phone.trim();\n  if (p[0] !== '+') p = '+' + p;\n\n  return {\n    name: `${firstName.trim()} ${lastName.trim()}`,\n    age,\n    city: city.trim(),\n    email: email.trim().toLowerCase(),\n    phone: p,\n  };\n}",
  "openTest": "it('Created function createUser', () => {\n  expect(createUser).to.be.a('function');\n});\n\nit(\"createUser('  Alex', '  Smith', 20, '  New York', ' Alex@Sample.nY ', '  12345678900 ') return { name: 'Alex Smith', age: 20, city: 'New York', email: 'alex@sample.ny', phone: '+12345678900' }\", () => {\n  expect(\n    createUser(\n      '  Alex',\n      '  Smith',\n      20,\n      '  New York',\n      ' Alex@Sample.nY ',\n      '  12345678900 ',\n    ),\n  ).eql({\n    name: 'Alex Smith',\n    age: 20,\n    city: 'New York',\n    email: 'alex@sample.ny',\n    phone: '+12345678900',\n  });\n});\n\nit(\"createUser('  Alice', '  Saw', 21, '  Miami  ', ' ALICE@MIAMI.SM ', '  +12345678900 '); return  { name: 'Alice Saw', age: 21, city: 'Miami', email: 'alice@miami.sm', phone: '+12345678900' }\", () => {\n  expect(\n    createUser(\n      '  Alice',\n      '  Saw',\n      21,\n      '  Miami  ',\n      ' ALICE@MIAMI.SM ',\n      '  +12345678900 ',\n    ),\n  ).eql({\n    name: 'Alice Saw',\n    age: 21,\n    city: 'Miami',\n    email: 'alice@miami.sm',\n    phone: '+12345678900',\n  });\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}