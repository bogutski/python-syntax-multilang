{
  "_id": "6696c2ca763f0712c198e6bf",
  "name": {
    "en": "Fire Hazard Forecast. Objects",
    "ru": "Прогноз пожароопасности. Объекты"
  },
  "instruction": {
    "en": "The `forecast` function estimates the fire risk in forests depending on the temperature and humidity of the air.\n\nThe function takes a `weather` object with two properties:\n* `temperature` - temperature in degrees Celsius, number\n* `humidity` - humidity in percent, number\n\nIf the temperature is below 22 degrees and the humidity is above 65%, the function should return the string `Low risk`.\n\nIf the temperature is between 22 and 29 degrees (inclusive) and the humidity is higher than 50%, then the function should return the string `Medium risk`.\n\nIf the temperature is above 29 degrees and the humidity is equal or less than 50%, then return the string `High risk`.\n\nIn other cases return the string `Watch the situation`.\n\nExamples of running the function:\n```javascript\nforecast({temperature: 20, humidity: 70}) // => 'Low risk'\n\nforecast({temperature: 25, humidity: 55}) // => 'Medium risk'\n\nforecast({temperature: 30, humidity: 60}) // => 'Watch the situation'\n\nforecast({temperature: 30, humidity: 30}) // => 'High risk'\n```",
    "ru": "Функция `forecast` оценивает риск пожароопасности в лесах в зависимости от температуры и влажности воздуха.\n\nФункция принимает объект `weather` с двумя свойствами:\n* `temperature`  - температура в градусах цельсия, число\n* `humidity` - влажность в процентах, число\n\nЕсли температура ниже 22 градусов, а влажность выше 65%, то функция должна вернуть строку `Low risk`.\n\nЕсли температура от 22 до 29 градусов (включительно), а влажность выше 50%, то вернуть строку `Medium risk`.\n\nЕсли температура выше 29 градусов и влажность равна или меньше 50%, то вернуть строку `High risk`.\n\nВ остальных случаях вернуть строку `Watch the situation`.\n\nПримеры запуска функции:\n```javascript\nforecast({temperature: 20, humidity: 70}) // => 'Low risk'\n\nforecast({temperature: 25, humidity: 55}) // => 'Medium risk'\n\nforecast({temperature: 30, humidity: 60}) // => 'Watch the situation'\n\nforecast({temperature: 30, humidity: 30}) // => 'High risk'\n```"
  },
  "initialSolution": "function",
  "completedSolution": "function forecast(weather){\n  if (weather.temperature < 22 && weather.humidity > 65){return \"Low risk\";}\n  else if (weather.temperature >= 22 && weather.temperature <= 29 && weather.humidity > 50) {return \"Medium risk\";}\n  else if (weather.temperature > 29 && weather.humidity <= 50) {return \"High risk\";}\n  return 'Watch the situation';\n}",
  "openTest": "it('Created function forecast', () => {\n  expect(forecast).to.be.a('function');\n});\n\nit('forecast({temperature: 20, humidity: 70}) should return \"Low risk\"', () => {\n    expect(forecast({temperature: 20, humidity: 70})).eql('Low risk');\n});\n\nit('forecast({temperature: 25, humidity: 55}) should return \"Medium risk\"', () => {\n    expect(forecast({temperature: 25, humidity: 55})).eql('Medium risk');\n});\n\nit('forecast({temperature: 30, humidity: 60}) should return \"Watch the situation\"', () => {\n    expect(forecast({temperature: 30, humidity: 60})).eql('Watch the situation');\n});\n\nit('forecast({temperature: 30, humidity: 30}) should return \"High risk\"', () => {\n    expect(forecast({temperature: 30, humidity: 30})).eql('High risk');\n});\n\nit('forecast({temperature: 22, humidity: 51}) should return \"Medium risk\"', () => {\n    expect(forecast({temperature: 22, humidity: 51})).eql('Medium risk');\n});\n\nit('forecast({temperature: 29, humidity: 49}) should return \"Watch the situation\"', () => {\n    expect(forecast({temperature: 29, humidity: 49})).eql('Watch the situation');\n});\n\nit('forecast({temperature: 29, humidity: 31}) should return \"Watch the situation\"', () => {\n    expect(forecast({temperature: 29, humidity: 31})).eql('Watch the situation');\n});\n\nit('forecast({temperature: 35, humidity: 85}) should return \"Watch the situation\"', () => {\n    expect(forecast({temperature: 35, humidity: 85})).eql('Watch the situation');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}