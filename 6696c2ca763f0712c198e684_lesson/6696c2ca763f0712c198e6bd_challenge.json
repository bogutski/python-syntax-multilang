{
  "_id": "6696c2ca763f0712c198e6bd",
  "name": {
    "en": "Performing mathematical operations on an object",
    "ru": "Выполнение математических операций с объектом"
  },
  "instruction": {
    "en": "The function `numberSpec` takes four parameters:\n* `obj` - object to be checked\n* `key1` - the string, the key to be checked\n* `key2` - the string, the key to be checked\n* `operator` - a string that takes values of mathematical operators `\"+\", \"-\", \"*\", \"/\"`.\n\nIf the function contains properties `key1` and `key2` then it is necessary to perform a mathematical operation between them which is specified in the parameter `operator` and return the result.\n\nThe result must be returned as a string: `obj[key1] operator obj[key2] = result`.\n\nIf the function does not contain property `key1`,`key2` or takes `operator` which is not specified above, the string `There is no such properties in object` must be returned.\n\nAn example of running a function:\n```javascript\nnumberSpec({ evenSum: 10, oddSum: 10 }, \"evenSum\", \"oddSum\", \"+\") // \"10 + 10 = 20\"\n\nnumberSpec({ maxNumber: 100, minNumber: 5 }, \"maxNumber\", \"minNumber\", \"-\") // \"100 - 6 = 95\"\n\nnumberSpec({ evenSum: 10, oddSum: 10 }, \"evenSum\", \"oddSum\", \"%\") // \"There is no such properties in object\"\n```",
    "ru": "Функция `numberSpec` принимает четыре параметра:\n* `obj` – объект, который необходимо проверить\n* `key1` – строка, ключ, который необходимо проверить\n* `key2` – строка, ключ, который необходимо проверить\n* `operator` – строка, которая принимает значения математических операторов `\"+\", \"-\", \"*\", \"/\"`.\n\nЕсли `объект` содержит свойства `key1` и `key2`, то необходимо произвести между ними математическую операцию, которая\n указана в параметре `operator` и вернуть результат.\n\nРезультат необходимо вернуть в виде строки: `obj[key1] operator obj[key2] = result`.\n\nЕсли `объект` не содержит свойство `key1`,`key2` или функция принимает `operator`, который не указан выше, то\n необходимо вернуть строку `There is no such properties in object`.\n\nПример запуска функции:\n```javascript\nnumberSpec({ evenSum: 10, oddSum: 10 }, \"evenSum\", \"oddSum\", \"+\") // \"10 + 10 = 20\"\nnumberSpec({ maxNumber: 100, minNumber: 5 }, \"maxNumber\", \"minNumber\", \"-\") // \"100 - 5 = 95\"\nnumberSpec({ evenSum: 10, oddSum: 10 }, \"evenSum\", \"oddSum\", \"%\") // \"There is no such properties in object\"\n```"
  },
  "initialSolution": "function",
  "completedSolution": "function numberSpec(obj, key1, key2, operator) {\n  if (obj.hasOwnProperty(key1) && obj.hasOwnProperty(key2)) {\n    let result;\n    if (operator === '+') {\n      result = obj[key1] + obj[key2];\n    } else if (operator === '-') {\n      result = obj[key1] - obj[key2];\n    } else if (operator === '*') {\n      result = obj[key1] * obj[key2];\n    } else if (operator === '/') {\n      result = obj[key1] / obj[key2];\n    } else {\n      return 'There is no such properties in object';\n    }\n    return `${obj[key1]} ${operator} ${obj[key2]} = ${result}`;\n  }\n  return 'There is no such properties in object';\n}",
  "openTest": "it('Created function numberSpec', () => {\n  expect(numberSpec).to.be.a('function');\n});\n\nit('numberSpec({ evenSum: 10, oddSum: 10 }, \"evenSum\", \"oddSum\", \"+\") should return \"10 + 10 = 20\"', () => {\n  expect(numberSpec({ evenSum: 10, oddSum: 10 }, 'evenSum', 'oddSum', '+')).to.be.equal(\n    '10 + 10 = 20',\n  );\n});\n\nit('numberSpec({ evenSum: 10, oddSum: 10 }, \"evenSum\", \"oddSum\", \"-\") should return \"10 - 10 = 0\"', () => {\n  expect(numberSpec({ evenSum: 10, oddSum: 10 }, 'evenSum', 'oddSum', '-')).to.be.equal(\n    '10 - 10 = 0',\n  );\n});\n\nit('numberSpec({ evenSum: 10, oddSum: 10 }, \"lastDigit\", \"oddSum\", \"*\") should return \"There is no such properties in object\"', () => {\n  expect(\n    numberSpec(\n      {\n        evenSum: 10,\n        oddSum: 10,\n      },\n      'lastDigit',\n      'oddSum',\n      '*',\n    ),\n  ).to.be.equal('There is no such properties in object');\n});\n\nit('numberSpec({ lastDigit: 10, quotient: 2 }, \"lastDigit\", \"quotient\", \"/\") should return \"10 / 2 = 5\"', () => {\n  expect(\n    numberSpec(\n      {\n        lastDigit: 10,\n        quotient: 2,\n      },\n      'lastDigit',\n      'quotient',\n      '/',\n    ),\n  ).to.be.equal('10 / 2 = 5');\n});\n\nit('numberSpec({ lastDigit: 10, quotient: 2 }, \"lastDigit\", \"quotient\", \"%\") should return \"There is no such properties in object\"', () => {\n  expect(\n    numberSpec(\n      {\n        lastDigit: 10,\n        quotient: 2,\n      },\n      'lastDigit',\n      'quotient',\n      '%',\n    ),\n  ).to.be.equal('There is no such properties in object');\n});\n\nit('numberSpec({ max: 10, min: 2 }, \"lastDigit\", \"min\", \" \") should return \"There is no such properties in object\"', () => {\n  expect(\n    numberSpec(\n      {\n        max: 10,\n        min: 2,\n      },\n      'lastDigit',\n      'min',\n      ' ',\n    ),\n  ).to.be.equal('There is no such properties in object');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}