{
  "_id": "6696c2ca763f0712c198e469",
  "name": {
    "en": "The function repeats the string",
    "ru": "Функция повторяет строку"
  },
  "instruction": {
    "en": "Write a function `repeater` that takes a string and a number, and returns a new string that consists of repetitions of the original string.\n\nExample use of the function:\n```javascript.\nrepeater('abc', 3); // 'abcabcabc'\nrepeater('qwe', 5); // 'qweqweqweqwe'\n```",
    "ru": "Напиши функцию `repeater`, которая принимает строку и число, и возвращает новую строку, которая состоит из повторений исходной строки.\n\nПример использования функции:\n```javascript\nrepeater('abc', 3); // 'abcabcabc'\nrepeater('qwe', 5); // 'qweqweqweqweqwe'\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function repeater(str, n) {\n  return str.repeat(n);\n}",
  "openTest": "it('Created function repeater', () => {\n  expect(repeater).to.be.a('function');\n});\n\nit('repeater(\"abc\", 3) should return \"abcabcabc\"', () => {\n  expect(repeater('abc', 3)).to.equal('abcabcabc');\n});\n\nit('repeater(\"qwe\", 5) should return \"qweqweqweqweqwe\"', () => {\n  expect(repeater('qwe', 5)).to.equal('qweqweqweqweqwe');\n});\n\nit('repeater(\"qwe\", 0) should return \"\"', () => {\n  expect(repeater('qwe', 0)).to.equal('');\n});\n\nit('repeater(\"qwe\", 1) should return \"qwe\"', () => {\n  expect(repeater('qwe', 1)).to.equal('qwe');\n});\n\nit('repeater(\"qwe\", 2) should return \"qweqwe\"', () => {\n  expect(repeater('qwe', 2)).to.equal('qweqwe');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}