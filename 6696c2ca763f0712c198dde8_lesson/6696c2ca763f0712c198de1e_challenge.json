{
  "_id": "6696c2ca763f0712c198de1e",
  "name": {
    "en": "Unary plus - converting null to number",
    "ru": "Унарный плюс - преобразование null в число"
  },
  "instruction": {
    "en": "It turns out that if you put a `+` sign before null, then \"nothing\" becomes the number 0!\n\nSet the variable `zero` and assign it the value `null`.\n\nSet the variable `value` and assign it the value of the variable `zero`, converted to a number using the unary plus operation.\n\nLet's give an example that is fundamentally similar to what needs to be done, but adapt it to the requirements of the task:\n```javascript\nconst s = null;\nconst x = +s; // 0\n```",
    "ru": "Оказывается, если перед null поставить знак `+`, то из \"ничего\" получится число 0!\n\nЗадайте переменную `zero` и присвойте ей значение `null`.\n\nЗадайте переменную `value` и присвойте ей значение переменной `zero`, преобразованное в число с помощью операции унарный плюс.\n\nПриведем пример, который принципиально похож на то, что нужно сделать, но адаптируйте его к требованиям задачи:\n```javascript\nconst s = null;\nconst x = +s; // 0\n```"
  },
  "initialSolution": "",
  "completedSolution": "const zero = null;\nconst value = +zero;",
  "openTest": "it('Variable `zero` exists and has a value', () => {\n  expect(zero).not.undefined;\n});\n\nit('Variable `zero` has typeof object', () => {\n  expect(typeof zero).equal('object');\n});\n\nit('Variable `zero` has value null', () => {\n  expect(zero).equal(null);\n});\n\nit('Variable `value` has a value', () => {\n  expect(value).not.undefined;\n});\n\nit('the variable type `value` is a number', () => {\n  expect(value).a('number');\n});\n\nit('the variable `value` has the correct value', () => {\n  expect(value).equal(0);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "```javascript\nconst zero = null;\nconst value = +zero;\n```",
    "ru": "```javascript\nconst zero = null;\nconst value = +zero;\n```"
  }
}