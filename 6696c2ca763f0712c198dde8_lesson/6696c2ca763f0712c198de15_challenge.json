{
  "_id": "6696c2ca763f0712c198de15",
  "name": {
    "en": "Side and diagonal of the square",
    "ru": "Сторона и диагональ квадрата"
  },
  "instruction": {
    "en": "Given the square area `square` of a square. Calculate the length of the side `side` and the length of the diagonal `diagonal`.\n\nSet the variable `square` and assign it a value of any non-negative number.\n\nSet the variable `side`, in which you calculate the side of the square (the side of the square is equal to the square root of the area, or the area raised to the power of 0.5).\n\nSet the variable `diagonal`, in which you calculate the length of the diagonal (the diagonal is calculated using the formula: its square is equal to twice the square of the side, and the diagonal itself is the square root of twice the square of the side).\n\nHere is an example that is fundamentally similar to what needs to be done, but adapt it to the requirements of the task:\n```javascript\nconst s = 1000;\nconst a = s ** 0.5; // square root of s\nconst d = (2 * a ** 2) ** 0.5; // square root of 2 * a**2\n```",
    "ru": "Дана площадь `square` квадрата. Вычислить длину стороны `side` и длину диагонали `diagonal`.\n\nЗадайте переменную `square` и присвойте ей значение произвольного неотрицательного числа.\n\nЗадайте переменную `side`, в которой вычислите сторону квадрата (сторона квадрата равна корню квадратному из площади,\nили площади в степени 0.5).\n\nЗадайте переменную `diagonal`, в которой вычислите длину диагонали (диагональ вычисляется по формуле:\nее квадрат равен удвоенному квадрату стороны, а сама диагональ - корню квадратному из удвоенного квадрата стороны).\n\nПриведем пример, который принципиально похож на то, что нужно сделать,\nно адаптируйте его к требованиям задачи:\n```javascript\nconst s = 1000;\nconst a = s ** 0.5; // корень квадратный из s\nconst d = (2 * a ** 2) ** 0.5; //корень из 2 * a**2\n```"
  },
  "initialSolution": "",
  "completedSolution": "const square = 100;\nconst side = square ** 0.5;\nconst diagonal = (2 * side ** 2) ** 0.5;",
  "openTest": "it('Variable`square` contains a value', () => {\n  expect(square).not.undefined;\n});\n\nit('variable`square` type is a number', () => {\n  expect(square).a('number');\n});\n\nit('the `square` variable type is not NaN', () => {\n  expect(isNaN(square)).false;\n});\n\nit('variable`square` has value >= 0', () => {\n  expect(square >= 0).true;\n});\n\nit('The `side` variable has a value', () => {\n  expect(side).not.undefined;\n});\n\nit('Variable type `side` is a number', () => {\n  expect(side).a('number');\n});\n\nit('the variable `side` has the correct value', () => {\n  expect(side).equal(square ** 0.5);\n});\n\nit('The `diagonal` variable has a value', () => {\n  expect(diagonal).not.undefined;\n});\n\nit('Variable type `diagonal` is a number', () => {\n  expect(diagonal).a('number');\n});\n\nit('the `diagonal` variable has the correct value', () => {\n  expect(diagonal).equal((2 * side ** 2) ** 0.5);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "```javascript\nconst square = 100;\nconst side = square ** 0.5;\nconst diagonal = (2 * side ** 2) ** 0.5;\n```",
    "ru": "```javascript\nconst square = 100;\nconst side = square ** 0.5;\nconst diagonal = (2 * side ** 2) ** 0.5;\n```"
  }
}