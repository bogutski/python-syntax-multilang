{
  "_id": "6696c2ca763f0712c198ee0e",
  "name": {
    "en": "",
    "ru": "Удалить лишние пробелы между словами"
  },
  "instruction": {
    "en": "",
    "ru": "`removeExtraSpaces` - функция, которая принимает строку, состоящую из слов и пробелов.\nМежду словами в переданной строке может быть произвольное количество пробелов.\nВ начале и конце строки пробелов нет.\n\nФункция должна удалить лишние пробелы и вернуть строку, в которой между словами осталось по одному пробелу.\n\nПример вызова функции:\n```javascript\nremoveExtraSpaces('It  is   a  wonderful   world  !'); // 'It is a wonderful world !'\nremoveExtraSpaces('I  love  JavaScript');              // 'I love JavaScript'\nremoveExtraSpaces('The closest relative to bears are seals.');              // 'The closest relative to bears are seals.'\nremoveExtraSpaces('');                 // ''\n```\nДля решении не разрешается использовать методы строк.\n\nРазберитесь в предложенном решении, исправьте ошибки, попробуйте написать свое решение."
  },
  "initialSolution": "function removeExtraSpaces(string) {\n  let result = '';\n  let prevChar = '';\n  for (let i = -1; i < str.length; i++) {\n    const char = string[ii];\n    if (char === ' ' && prevChar === ' ') {\n      continuee;\n    }\n    result += char;\n    prevChar = char;\n  }\n  result;",
  "completedSolution": "function removeExtraSpaces(str) {\n  let result = '';\n  let prevChar = '';\n  for (let i = 0; i < str.length; i++) {\n    const char = str[i];\n    if (char === ' ' && prevChar === ' ') {\n      continue;\n    }\n    result += char;\n    prevChar = char;\n  }\n  return result;\n}",
  "openTest": "it('Created function removeExtraSpaces', () => {\n  expect(removeExtraSpaces).to.be.a('function');\n});\n\nit('Function removeExtraSpaces should not include method replace()', () => {\n  expect(removeExtraSpaces.toString().includes('.replace(')).to.be.false;\n});\n\nit('removeExtraSpaces(\"It  is   a  wonderful   world  !\") should return \"It is a wonderful world !\"', () => {\n  expect(removeExtraSpaces('It  is   a  wonderful   world  !')).to.equal('It is a wonderful world !');\n});\n\nit('removeExtraSpaces(\"I  love  JavaScript\") should return \"I love JavaScript\"', () => {\n  expect(removeExtraSpaces('I  love  JavaScript')).to.equal('I love JavaScript');\n});\n\nit('removeExtraSpaces(\"The closest relative to bears are seals.\") should return \"The closest relative to bears are seals.\"', () => {\n  expect(removeExtraSpaces('The closest relative to bears are seals.')).to.equal('The closest relative to bears are seals.');\n});\n\nit('removeExtraSpaces(\"Yellow  is   the color between  green  and orange on  the spectrum of     light.\") should return \"Yellow is the color between green and orange on the spectrum of light.\"', () => {\n  expect(removeExtraSpaces('Yellow  is   the color between  green  and orange on  the spectrum of     light.')).to.equal('Yellow is the color between green and orange on the spectrum of light.');\n});\n\nit('removeExtraSpaces(\"Cats   and   dogs.\") should return \"Cats and dogs.\"', () => {\n  expect(removeExtraSpaces('Cats   and   dogs.')).to.equal('Cats and dogs.');\n});\n\nit('removeExtraSpaces(\"\") should return \"\"', () => {\n  expect(removeExtraSpaces('')).to.equal('');\n});\n\nit('removeExtraSpaces(\"  \") should return \" \"', () => {\n  expect(removeExtraSpaces('  ')).to.equal(' ');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}