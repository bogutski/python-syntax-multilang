{
  "_id": "6696c2ca763f0712c198ee0b",
  "name": {
    "en": "",
    "ru": "Переписать все слова с заглавной буквы"
  },
  "instruction": {
    "en": "",
    "ru": "Функция `wordsCapitalize` принимает строку из слов в нижнем регистре, разделенных пробелами, и возвращает строку, в которой все слова начинаются с заглавной буквы.\nПереданная строка может быть пустой. В этом случае функция должна вернуть пустую строку.\n\nДля решения задачи используйте цикл `for` и метод `toUpperCase()`.\n\nПримеры вызова функции `wordsCapitalize`:\n\n```javascript\nwordsCapitalize('hi hello welcome goodbye'); // 'Hi Hello Welcome Goodbye'\nwordsCapitalize(''); // ''"
  },
  "initialSolution": "fun",
  "completedSolution": "function wordsCapitalize(str) {\n  let result = '';\n  for (let i = 0; i < str.length; i++) {\n    if (i === 0 || str[i - 1] === ' ') {\n      result += str[i].toUpperCase();\n    } else {\n      result += str[i];\n    }\n  }\n  return result;\n}",
  "openTest": "it('Created function wordsCapitalize', () => {\n  expect(wordsCapitalize).to.be.a('function');\n});\n\nit('Function wordsCapitalize should not contain method split()', () => {\n  expect(wordsCapitalize.toString().includes('split(')).to.be.false;\n});\n\nit('Function wordsCapitalize should not contain method join()', () => {\n  expect(wordsCapitalize.toString().includes('join(')).to.be.false;\n});\n\nit('wordsCapitalize(\"hi hello welcome goodbye\") should return \"Hi Hello Welcome Goodbye\"', () => {\n  expect(wordsCapitalize('hi hello welcome goodbye')).to.be.eq('Hi Hello Welcome Goodbye');\n});\n\nit('wordsCapitalize(\"alice bob andrew\") should return \"Alice Bob Andrew\"', () => {\n  expect(wordsCapitalize('alice bob andrew')).to.be.eq('Alice Bob Andrew');\n});\n\nit('wordsCapitalize(\"tom hanks\") should return \"Tom Hanks\"', () => {\n  expect(wordsCapitalize('tom hanks')).to.be.eq('Tom Hanks');\n});\n\nit('wordsCapitalize(\"\") should return \"\"', () => {\n  expect(wordsCapitalize('')).to.be.eq('');\n});\n\nit('wordsCapitalize(\"hi\") should return \"Hi\"', () => {\n  expect(wordsCapitalize('hi')).to.be.eq('Hi');\n});\n\nit('wordsCapitalize(\"the eye is a region of mostly calm weather found at the center of tropical cyclones\") should return \"The Eye Is A Region Of Mostly Calm Weather Found At The Center Of Tropical Cyclones\"', () => {\n  expect(wordsCapitalize('the eye is a region of mostly calm weather found at the center of tropical cyclones')).to.be.eq('The Eye Is A Region Of Mostly Calm Weather Found At The Center Of Tropical Cyclones');\n});\n\nit('wordsCapitalize(\"the eye is characterized by light winds and clear skies\") should return \"The Eye Is Characterized By Light Winds And Clear Skies\"', () => {\n  expect(wordsCapitalize('the eye is characterized by light winds and clear skies')).to.be.eq('The Eye Is Characterized By Light Winds And Clear Skies');\n});\n\nit('wordsCapitalize(\"i\") should return \"I\"', () => {\n  expect(wordsCapitalize('i')).to.be.eq('I');\n});\n\nit('wordsCapitalize(\"i am\") should return \"I Am\"', () => {\n  expect(wordsCapitalize('i am')).to.be.eq('I Am');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}