{
  "_id": "6696c2ca763f0712c198ee08",
  "name": {
    "en": "",
    "ru": "Заменить все цифры в строке на заданный символ"
  },
  "instruction": {
    "en": "",
    "ru": "Функция `replaceDigits` принимает строку и символ, и возвращает новую строку, в которой все цифры заменены на заданный символ.\n`Цифрами` считаются символы от `0` до `9`. Если в строке нет цифр, то возвращается исходная строка.\n\n\n\nПримеры запуска функции:\n```javascript\nreplaceDigits('abc1d3efg', '*'); // 'abc*d*efg'\nreplaceDigits('The score is 3 to 2', '^'); // 'The score is ^ to ^'\nreplaceDigits('1234567890', '&'); // '&&&&&&&&&&'\nreplaceDigits('There are no digits', '*'); // 'There are no digits'\nreplaceDigits('', '*'); // ''\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function replaceDigits(str, symbol) {\n  let result = '';\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] >= '0' && str[i] <= '9') {\n      result += symbol;\n    } else {\n      result += str[i];\n    }\n  }\n  return result;\n}",
  "openTest": "it('Created function replaceDigits', () => {\n  expect(replaceDigits).to.be.a('function');\n});\n\nit('replaceDigits(\"abc1d3efg\", \"*\") returns \"abc*d*efg\"', () => {\n  expect(replaceDigits('abc1d3efg', '*')).to.equal('abc*d*efg');\n});\n\nit('replaceDigits(\"The score is 3 to 2\", \"^\") returns \"The score is ^ to ^\"', () => {\n  expect(replaceDigits('The score is 3 to 2', '^')).to.equal('The score is ^ to ^');\n});\n\nit('replaceDigits(\"1234567890\", \"&\") returns \"&&&&&&&&&&\"', () => {\n  expect(replaceDigits('1234567890', '&')).to.equal('&&&&&&&&&&');\n});\n\nit('replaceDigits(\"There are no digits\", \"*\") returns \"There are no digits\"', () => {\n  expect(replaceDigits('There are no digits', '*')).to.equal('There are no digits');\n});\n\nit('replaceDigits(\"\", \"*\") returns \"\"', () => {\n  expect(replaceDigits('', '*')).to.equal('');\n});\n\nit('replaceDigits(\"No. 4 Tennessee vs. No. 13 Texas\", \"#\") returns \"No. # Tennessee vs. No. ## Texas\"', () => {\n  expect(replaceDigits('No. 4 Tennessee vs. No. 13 Texas', '#')).to.equal('No. # Tennessee vs. No. ## Texas');\n});\n\nit('replaceDigits(\"Stanford (37-14)\", \"/\") returns \"Stanford (//-//)\"', () => {\n  expect(replaceDigits('Stanford (37-14)', '/')).to.equal('Stanford (//-//)');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}