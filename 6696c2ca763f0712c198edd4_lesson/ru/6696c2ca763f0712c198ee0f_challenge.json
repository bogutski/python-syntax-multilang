{
  "name": "Расшифровать сокращенные названия улиц",
  "instruction": "В почтовых адресах для краткости часто используются сокращенные названия улиц.\nСуществует официальная таблица для расшифровки этих сокращений.\nДля примера, вот некоторые из них:\n\n* St. = Street\n* Rd. = Road\n* Ln. = Lane\n* Dr. = Drive\n* Cir. = Circle\n* Ave. = Avenue\n* Pl. = Place\n* Sq. = Square\n* Pkwy. = Parkway\n* Ct. = Court\n* Hwy. = Highway\n* Plz. = Plaza\n* Blvd. = Boulevard\n* Bch. = Beach\n* Aly. = Alley\n\nНа самом деле, таблица довольно большая, но для решения этой задачи мы будем использовать только 15 сокращений, которые указаны выше.\n\nНужно написать функцию `decodeAddress`, которая принимает строку с сокращенным адресом и возвращает строку, включающую адрес с полным названием улицы.\n\nСлова в строке разделены пробелами.\nНужно в цикле получать из строки слова и сравнивать их со значениями в таблице.\nЕсли слово есть в таблице, то нужно заменить его на полное название из таблицы, если нет, то оставить без изменений.\nЗаведомо не известно, в каком порядке будут идти слова в строке, поэтому нужно проверять каждое слово.\n\nЕсли вы забыли алгоритм получения слов из строки, пересмотрите урок `Получить числа из строки`.\nВ решении запрещено использовать методы строк: `split`, `replace`, `indexOf`, `lastIndexOf`, `includes`.\n\nПримеры запуска:\n```javascript\ndecodeAddress('123 Main St.') // '123 Main Street'\ndecodeAddress('1001 1st Ave.') // '1001 1st Avenue'\ndecodeAddress('55 North Center Drive') // '55 North Center Drive'\ndecodeAddress('') // ''\n```\nДля хранения таблицы создадим объект `decodeTable`, в котором сокращения будут являться ключами, а полные названия - значениями.\n```javascript\nconst decodeTable = {\n  'St.': 'Street',\n  'Rd.': 'Road',\n  'Ln.': 'Lane',\n  'Dr.': 'Drive',\n  'Cir.': 'Circle',\n  'Ave.': 'Avenue',\n  'Pl.': 'Place',\n  'Sq.': 'Square',\n  'Pkwy.': 'Parkway',\n  'Ct.': 'Court',\n  'Hwy.': 'Highway',\n  'Plz.': 'Plaza',\n  'Blvd.': 'Boulevard',\n  'Bch.': 'Beach',\n  'Aly.': 'Alley',\n}\n```",
  "instructions": {}
}