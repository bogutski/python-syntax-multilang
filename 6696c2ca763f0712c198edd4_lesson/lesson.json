{
  "_id": "6696c2ca763f0712c198edd4",
  "content": {
    "ru": "### Заменить символ в строке с помощью цикла\n\nВ этом уроке мы научимся заменять символ в строке с помощью цикла.\n\nДля первого примера, мы заменим `восклицательный` знак на `точку`.\n\n```javascript\nconst str = 'Hello! JavaScript!';\nlet result = '';                        // создаем пустую строку, в которую будем записывать результат\n\nfor (let i = 0; i < str.length; i++) {  // перебираем строку\n  if (str[i] === '!') {                 // если текущий символ - восклицательный знак\n    result += '.';                      // вместо него записываем точку\n  } else {                              // иначе\n    result += str[i];                   // записываем в результат текущий символ\n  }\n}\nconsole.log(result);                    // 'Hello. JavaScript.'\n```\n\n\n### Использование объекта для замены символов строки\n\nВ этом примере, мы создадим объект с символами, которые мы хотим заменить.\n\n```javascript\nconst str = '1 + 2 + 3 Hello. JavaScript...';\nlet result = '';\n\nconst map = {                           // создаем объект, в котором будут храниться замены\n    '.': '!',\n    1: 'one',\n    2: 'two',\n    3: 'three',\n    ' ': '_',\n    '+': '*'\n}\n\nfor (let i = 0; i < str.length; i++) {  // перебираем строку\n    if (map[str[i]]) {                  // если текущий символ есть в объекте\n        result += map[str[i]];          // записываем в результат значение из объекта\n    } else {                            // иначе\n        result += str[i];               // записываем в результат текущий символ\n    }\n}\nconsole.log(result);                    // 'one_*_two_*_three_Hello!_JavaScript!!!'\n```\n\nСделаем еще один пример, в котором мы заменим цифры и математические знаки на слова.\n\n```javascript\nconst str = '5 + 4 - 7 = 2; 2 * 3 / 6 = 1';\n\nlet result = '';\n\nconst map = {\n    0: 'zero',\n    1: 'one',\n    2: 'two',\n    3: 'three',\n    4: 'four',\n    5: 'five',\n    6: 'six',\n    7:'seven',\n    8: 'eight',\n    9: 'nine',\n    '-': 'minus',\n    '+': 'plus',\n    '*': 'multiply',\n    '/': 'divide',\n    '=': 'equals',\n    ';': ' and',\n}\n\nfor (let i = 0; i < str.length; i++) {\n    if (map[str[i]]) {\n        result += map[str[i]];\n    } else {\n        result += str[i];\n    }\n}\nconsole.log(result); // 'five plus four minus seven equals two and two multiply three divide six equals one'\n```\n\n\n### Замена символов в строке с помощью метода replace\n\nМетод `replace` - это метод строк, который позволяет заменить символы в строке.\n\n```javascript\nconst str = 'Hello, world!';\n\nlet result = str.replace('world', 'JavaScript');  // заменяем 'world' на 'JavaScript'\n\nconsole.log(result);                              // 'Hello, JavaScript!'\n```\n\nДавайте попробуем заменить несколько элементов в строке.\n\n```javascript\nconst str = 'Hello! World!';\n\nlet result = str.replace('!', ';'); // заменяем восклицательный знак на точку с запятой\n\nconsole.log(result);                // 'Hello; World!'\n```\n\nВ результате мы видим что не все восклицательные знаки были заменены. \n\nЭто произошло потому что метод `replace` заменяет только первое вхождение.\n\nЧтобы заменить все вхождения, нужно использовать `регулярное выражение` или метод `replaceAll`.\n\n\n### Замена всех вхождений с помощью регулярного выражения или метода replaceAll\n\n```javascript\nconst str = 'Hello! World!';\n\nlet result = str.replaceAll('!', ';'); // заменяем все вхождения восклицательного знака на точку с запятой\n\nconsole.log(result);                   // 'Hello; World;'\n```\n\nТеперь заменим элементы в строке с помощью регулярного выражения.\n\n```javascript\nconst str = 'Hello Java Script !';\n\nlet result = str.replace(/ /g, '_');  // заменяем все пробелы на нижнее подчеркивание\n\nconsole.log(result);                   // 'Hello_Java_Script_!'\n```\n",
    "en": "### Replace a character in a string with a loop\n\nIn this lesson we will learn how to replace a character in a string using a loop.\n\nFor the first example, we will replace the `exclamation mark` with a `dot`.\n\n```javascript\nconst str = 'Hello! JavaScript!'\nlet result = ''; // we create an empty string to write the result into\n\nfor (let i = 0; i < str.length; i++) { // loop the string\n  if (str[i] === '!') { // if the current character is an exclamation mark\n    result += '.'; // we put a dot instead\n  } else { // otherwise\n    result += str[i]; // write the current symbol into the result\n  }\n}\nconsole.log(result); // 'Hello. JavaScript.'\n```\n\n\n### Using an object to replace string characters\n\nIn this example, we will create an object with the characters we want to replace.\n\n```javascript\nconst str = '1 + 2 + 3 Hello. JavaScript...';\nlet result = '';\n\nconst map = { // create an object to store replacements\n    '.': '!',\n    1: 'one',\n    2: 'two',\n    3: 'three',\n    ' ': '_',\n    '+': '*'\n}\n\nfor (let i = 0; i < str.length; i++) { // loop the string\n    if (map[str[i]]) { // if the current character is in the object\n        result += map[str[i]]; // write value from the object into the result\n    } else { // otherwise\n        result += str[i]; // write the current character to the result\n    }\n}\nconsole.log(result); // 'one_*_two_*_three_Hello!_JavaScript!!!'\n```\n\nLet's do another example in which we replace numbers and mathematical signs with words.\n\n```javascript\nconst str = '5 + 4 - 7 = 2; 2 * 3 / 6 = 1';\n\nlet result = '';\n\nconst map = {\n    0: 'zero',\n    1: 'one',\n    2: 'two',\n    3: 'three',\n    4: 'four',\n    5: 'five',\n    6: 'six',\n    7:'seven',\n    8: 'eight',\n    9: 'nine',\n    '-': 'minus',\n    '+': 'plus',\n    '*': 'multiply',\n    '/': 'divide',\n    '=': 'equals',\n    ';': ' and',\n}\n\nfor (let i = 0; i < str.length; i++) {\n    if (map[str[i]]) {\n        result += map[str[i]];\n    } else {\n        result += str[i];\n    }\n}\nconsole.log(result); // 'five plus four minus seven equals two and two multiply three divide six equals one'\n```\n\n\n### Replacing characters in a string using the replace method\n\nThe `replace` method is a string method that allows you to replace characters in a string.\n\n```javascript\nconst str = 'Hello, world!';\n\nlet result = str.replace('world', 'JavaScript');  // replace 'world' with 'JavaScript'\n\nconsole.log(result);                              // 'Hello, JavaScript!'\n```\n\nLet's try to replace a few elements in a string.\n\n```javascript\nconst str = 'Hello! World!';\n\nlet result = str.replace('!', ';'); // replace exclamation point with semicolon\n\nconsole.log(result);                // 'Hello; World!'\n```\n\nAs a result, we see that not all exclamation points have been replaced. \n\nThis is because the `replace` method only replaces the first occurrence.\n\nTo replace all occurrences, use `regular expression` or the `replaceAll` method.\n\n\n### Replacing all occurrences with a regular expression or the replaceAll method\n\n```javascript\nconst str = 'Hello! World!';\n\nlet result = str.replaceAll('!', ';'); // replace all occurrences of the exclamation point with a semicolon\n\nconsole.log(result);                   // 'Hello; World;'\n```\n\nNow replace the elements in the string with a regular expression.\n\n```javascript\nconst str = 'Hello Java Script !';\n\nlet result = str.replace(/ /g, '_');  // replace all spaces with underscores\n\nconsole.log(result);                   // 'Hello_Java_Script_!'\n```\n",
    "es": "# Заменить в строке символы language: es"
  },
  "video": {
    "ru": "https://youtu.be/bDIuqqfzvdE",
    "en": "",
    "es": ""
  }
}