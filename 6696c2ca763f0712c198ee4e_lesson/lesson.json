{
  "_id": "6696c2ca763f0712c198ee4e",
  "content": {
    "ru": "Разберем задачу, в которой надо развернуть каждое слово в строке.\n\nНеобходимо, чтобы каждое слово осталось на своем месте, пробелы остались на своих местах, а каждое слово развернулось.\n\n```javascript\nconst str = 'hello js pasv coding com';\n           //olleh sj vsap gnidoc moc  // предполагаем получить такой результат\n\nlet res = '';                           // введем переменную, в которую будем записывать результат\nlet word = '';                          // введем переменную, в которую будем аккумулировать слово\n\nfor(let i = 0; i < str.length; i++){    // создаем цикл, чтобы пройтись по каждому символу строки\n    if(str[i] === ' '){                 // если символ равен пробелу, то\n    res +=reverse(word)                 // нужно делать реверс слова\n    } else if(i === str.length - 1) {   // когда мы дошли до последнего символа\n      word += str[i];                   // добавляем символ в переменную word\n      res +=reverse(word) \n    } else {                            // иначе\n        word += str[i];                 // добавляем символ в переменную word\n    }\n\n}\n\nfunction reverse(str){                 // создадим функцию reverse\nreturn str.toUpperCase()               // пока для примера функция будет только переводить строку в верхний регистр\n}                                      // чтобы нам было видно, что функция работает\n\n\nconsole.log(res); //  \"HELLOHELLOHELLOJSHELLOJSPASVHELLOJSPASVCODINGHELLOJSPASVCODINGCOM\"\n```\nПолучили очень странный результат.\n\nЭто случилось потому что нигде в коде мы не очищаем переменную `word`.\n\n```javascript\nconst str = 'hello js pasv coding com';\n           //olleh sj vsap gnidoc moc    \nlet res = '';                          \nlet word = '';                          \n\nfor(let i = 0; i < str.length; i++){    \n    if(str[i] === ' '){                \n    res +=reverse(word);\n    word = '';                          //  очищаем переменную word\n    } else if(i === str.length - 1) {   \n      word += str[i];                 \n      res +=reverse(word) \n      word = '';                        // очищаем переменную word\n    } else {                            \n        word += str[i];                     \n    }\n\n}\n\nfunction reverse(str){                 \nreturn str.toUpperCase()               \n}                                      \n\n\nconsole.log(res); //  \"HELLOJSPASVCODINGCOM\"\n```\nСтало лучше, но нет пробелов.\n\n```javascript\nconst str = 'hello js pasv coding com';\n           //olleh sj vsap gnidoc moc    \nlet res = '';                          \nlet word = '';                          \n\nfor(let i = 0; i < str.length; i++){    \n    if(str[i] === ' '){                \n    res +=reverse(word);\n    word = '';\n    res += ' ';                         // добавляем пробел\n    } else if(i === str.length - 1) {   \n      word += str[i];                 \n      res +=reverse(word)               // в последнее слово добавлять пробел не нужно\n      word = '';                        \n    } else {                            \n        word += str[i];                     \n    }\n\n}\n\nfunction reverse(str){                 \nreturn str.toUpperCase()               \n}                                      \n\n\nconsole.log(res); //  \"HELLO  JS PASV CODING COM\"\n```\nТеперь все хорошо, пробелы на месте.\nДавайте теперь напишем правильно функцию `reverse`, чтобы она разворачивала слова, а не переводила их в верхний регистр.\n\n```javascript\nconst str = 'hello js pasv coding com';\nlet res = '';\nlet word = '';\n\nfor(let i = 0; i < str.length; i++){\n  if(str[i] === ' '){\n    res +=reverse(word);\n    word = '';\n    res += ' ';                        \n  } else if(i === str.length - 1) {\n    word += str[i];\n    res +=reverse(word)              \n    word = '';\n  } else {\n    word += str[i];\n  }\n\n}\n\nfunction reverse(str){                 \n  let res = '';                          // создаем переменную, в которую будем записывать результат\n  for(let i = 0; i < str.length; i++) {   // создаем цикл, чтобы пройтись по каждому символу строки\n    res = str[i] + res;                  // каждый символ добавляем в начало строки\n  }\n  return res;\n}\n\nconsole.log(res); //  \"olleh  sj vsap gnidoc moc\"\n```\n\nПолучилось как надо! Слова перевернуты, пробелы на своих местах.\n\nОбратите внимание, что внутри функции `reverse` мы используем переменную `res`. Хотя она и имеет такое же имя, как и переменная `res` вне функции, \nэто разные переменные. Переменная `res` внутри функции называется локальной переменной. Она видна только внутри функции. Переменная `res` вне функции называется глобальной переменной. Она видна везде.\n\nДля улучшения кода:\n\nМы видим, что некоторые части кода повторяются\n    \n```javascript\nres +=reverse(word)              \nword = '';\n```\n\nМожно подумать, каким образом мы можем упростить либо укоротить код. Для самостоятельного рассмотрения.\n\nЗаметьте, что в коде мы используем функцию `reverse` до ее объявления.\n\nС функциями так делать можно. Это называется `\"всплытие функций\"` или `\"hoisting\"`.\n\nНо с переменными так делать нельзя!\n",
    "en": "Let's solve a problem where you need to expand each word in a line.\n\nIt is necessary that each word remain in its place, the spaces remain in their places, and each word unfolds.\n\n```javascript\nconst str = 'hello js pasv coding com';\n           //olleh sj vsap gnidoc moc // assume this result\n\nlet res = ''; // we introduce a variable in which we will write the result\nlet word = ''; // type a variable for accumulating the word\n\nfor(let i = 0; i < str.length; i++){ // create a loop to loop through each character of the string\n    if(str[i] === ' '){ // if a character is a space\n    res +=reverse(word) //reverse the word\n    } else if(i === str.length - 1) { // when we got to the last character\n      word += str[i]; // add symbol to the word variable\n      res +=reverse(word) \n    } else { // otherwise\n        word += str[i]; // add a symbol to the word variable\n    }\n\n}\n\nfunction reverse(str){ //create function reverse\nreturn str.toUpperCase() // for the moment the function will only uppercase the string\n} // to let us see that this function works\n\n\nconsole.log(res); // \"HELLOHELLOHELLOJSHELLOJSPASVHELLOJSPASVCODINGHELLOJSPASVCODINGCOM\"\n```\nWe got a very strange result.\n\nThis happened because we don't clear the `word` variable anywhere in the code.\n\n```javascript\nconst str = 'hello js pasv coding com';\n           //olleh sj vsap gnidoc moc   \nlet res = '';   \nlet word = '';   \n\nfor(let i = 0; i < str.length; i++){    \n    if(str[i] === ' '){   \n    res +=reverse(word);\n    word = ''; // clear the word variable\n    } else if(i === str.length - 1) { \n      word += str[i];       \n      res +=reverse(word) \n      word = ''; // clear the word variable\n    } else { \n        word += str[i];       \n    }\n\n}\n\nfunction reverse(str){             \nreturn str.toUpperCase()               \n} \n\n\nconsole.log(res); // \"HELLOJSPASVCODINGCOM\"\n```\nIt's gotten better, but there are no gaps.\n\n```javascript\nconst str = 'hello js pasv coding com';\n           //olleh sj vsap gnidoc moc   \nlet res = '';   \nlet word = '';   \n\nfor(let i = 0; i < str.length; i++){    \n    if(str[i] === ' '){   \n    res +=reverse(word);\n    word = '';\n    res += ' '; // add a space\n    } else if(i === str.length - 1) { \n      word += str[i];       \n      res +=reverse(word) // the last word must not contain a space\n      word = '';   \n    } else { \n        word += str[i];       \n    }\n\n}\n\nfunction reverse(str){             \nreturn str.toUpperCase()               \n} \n\n\nconsole.log(res); // \"HELLO JS PASV CODING COM\"\n```\nNow everything is fine, the spaces are in place.\nLet's now write the `reverse` function correctly, so that it expands words instead of uppercasing them.\n\n```javascript\nconst str = 'hello js pasv coding com';\nlet res = '';\nlet word = '';\n\nfor(let i = 0; i < str.length; i++){\n  if(str[i] === ' '){\n    res +=reverse(word);\n    word = '';\n    res += ' ';  \n  } else if(i === str.length - 1) {\n    word += str[i];\n    res +=reverse(word)              \n    word = '';\n  } else {\n    word += str[i];\n  }\n\n}\n\nfunction reverse(str){             \n  let res = ''; // create a variable to store the result\n  for(let i = 0; i < str.length; i++) { // create a loop to loop through each character of the string\n    res = str[i] + res; // add each character to the beginning of the string\n  }\n  return res;\n}\n\nconsole.log(res); // \"olleh sj vsap gnidoc moc\"\n```\n\nIt turned out just right! The words are reversed, the spaces are in their places.\n\nNote that inside the `reverse` function we use the variable `res`. Although it has the same name as the `res` variable outside the function, \nthey are different variables. The `res` variable inside the function is called a local variable. It is only visible inside the function. The variable `res` outside the function is called a global variable. It is visible everywhere.\n\nTo improve the code:\n\nWe can see that some parts of the code are repeated\n\n```javascript\nres +=reverse(word)              \nword = '';\n```\n\nWe can think of ways in which we can simplify or shorten the code. For your own consideration.\n\nNotice that in the code we use the `reverse` function before it is declared.\n\nYou can do this with functions. This is called `\"hoisting\"`.\n\nBut you can't do that with variables!\n",
    "es": "# Перевернуть в строке каждое слово language: es"
  },
  "video": {
    "ru": "https://youtu.be/0TBiRJpS3Os",
    "en": "",
    "es": ""
  }
}