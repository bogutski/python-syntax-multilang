{
  "_id": "6696c2ca763f0712c198ee82",
  "name": {
    "en": "Reverse the words without changing their order",
    "ru": "Перевернуть слова не изменяя их порядок"
  },
  "instruction": {
    "en": "The `twoWords` function takes a string consisting of two words separated by a space.\n\nYou need to reverse each word in the string without changing the word order. The space must remain between the words.\n\nIf the string is empty, return an empty string.\n\n\nThere are 3 errors in the code below. Find them and fix them.\nThe loop and the code below have no errors.\nFigure out what is happening on each line and why.\n\nExamples of running a function:\n```javascript\ntwoWords('yerg etihw') // 'grey white'\ntwoWords('eulb yks') // 'blue sky'\ntwoWords('789') // '987'\ntwoWords('') // ''\n```",
    "ru": "Функция `twoWords` принимает строку, состоящую из двух слов, разделенных пробелом.\n\nНеобходимо перевернуть каждое слово в строке, не изменяя порядок слов. Пробел должен остаться между словами.\n\nЕсли строка пустая, то вернуть пустую строку.\n\n\nВ коде ниже есть 3 ошибки. Найдите их и исправьте.\nЦикл и код ниже него не содержат ошибок.\nРазберитесь что происходит в каждой строке и почему.\n\nПримеры запуска функции:\n```javascript\ntwoWords('yerg etihw') // 'grey white'\ntwoWords('eulb yks')   // 'blue sky'\ntwoWords('789')        // '987'\ntwoWords('')           // ''\n```"
  },
  "initialSolution": "functions twoWords(words){\n  const newStr = '';\n  let chunk = [''];\n  for (let i = 0; i < words.length; i++) {\n    if (words[i] === ' ') {\n      newStr += chunk + ' ';\n      chunk = '';\n    } else {\n      chunk = words[i] + chunk;\n    }\n  }\n  newStr += chunk;\n  return newStr;\n}",
  "completedSolution": "function twoWords(words){\n  let newStr = '';\n  let chunk = '';\n  for (let i = 0; i < words.length; i++) {\n    if (words[i] === ' ') {\n      newStr += chunk + ' ';\n      chunk = '';\n    } else {\n      chunk = words[i] + chunk;\n    }\n  }\n  newStr += chunk;\n  return newStr;\n}",
  "openTest": "it('Created function twoWords', () => {\n  expect(twoWords).to.be.a('function');\n});\n\nit(\"twoWords('olleH dlroW') returns 'Hello World'\", () => {\n  expect(twoWords('olleH dlroW')).to.be.equal('Hello World');\n});\n\nit(\"twoWords('avaJ tpircS') returns 'Java Script'\", () => {\n  expect(twoWords('avaJ tpircS')).to.be.equal('Java Script');\n});\n\nit(\"twoWords('red blue') returns 'der eulb'\", () => {\n  expect(twoWords('red blue')).to.be.equal('der eulb');\n});\n\nit(\"twoWords('123') returns '321'\", () => {\n  expect(twoWords('123')).to.be.equal('321');\n});\n\nit(\"twoWords('') returns ''\", () => {\n  expect(twoWords('')).to.be.equal('');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}