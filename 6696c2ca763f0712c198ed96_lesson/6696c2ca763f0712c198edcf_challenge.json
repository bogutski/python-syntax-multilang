{
  "_id": "6696c2ca763f0712c198edcf",
  "name": {
    "en": "",
    "ru": "Сколько дубликатов в строке? Исправьте ошибки"
  },
  "instruction": {
    "en": "",
    "ru": "Функция `howManyDuplicates` принимает строку, состоящую из слов в одном регистре.\n\nФункция возвращает количество слов-дубликатов, которые повторяются в этой строке.\n\nСчитать необходимо только дубликаты, первое вхождение слова не считается.\n\nДубликаты разных слов суммируются.\n\nИсправьте ошибки, чтобы функция работала правильно. И попробуйте повторить решение.\n\nПримеры запуска функции:\n```javascript\nhowManyDuplicates(\"hello world hello world\") // 2\nhowManyDuplicates(\"hello hello hello hello\") // 3\n```"
  },
  "initialSolution": "function howManyDuplicates(str) {\n  const count = 0;\n  let word = empty;\n  const obj = {};\n  for (let i = 0, i < str.length, i++) {\n    if (str[i] !== ' ') word += str[i];\n\n    if (str[i] === ' ' || i === str.length - 1) {\n      if (word && !obj[word]) {\n        obj[word] = 1;\n      } else if (word && obj[word] === 1) {\n        count++;\n      }\n      word = '';\n    }\n  }\n  return count\n}",
  "completedSolution": "function howManyDuplicates(str) {\n  let count = 0;\n  let word = '';\n  const obj = {};\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] !== ' ') word += str[i];\n\n    if (str[i] === ' ' || i === str.length - 1) {\n      if (word && !obj[word]) {\n        obj[word] = 1;\n      } else if (word && obj[word] === 1) {\n        count++;\n      }\n      word = '';\n    }\n  }\n  return count\n}",
  "openTest": "it('Created function howManyDuplicates', () => {\n  expect(howManyDuplicates).to.be.a('function');\n});\n\nit('howManyDuplicates(\"hello world hello world\") returns 2', () => {\n  expect(howManyDuplicates(\"hello world hello world\")).to.equal(2);\n});\n\nit('howManyDuplicates(\"hello world\") returns 0', () => {\n  expect(howManyDuplicates(\"hello world\")).to.equal(0);\n});\n\nit('howManyDuplicates(\"hello hello\") returns 1', () => {\n  expect(howManyDuplicates(\"hello hello\")).to.equal(1);\n});\n\nit('howManyDuplicates(\"hello hello hello\") returns 2', () => {\n  expect(howManyDuplicates(\"hello hello hello\")).to.equal(2);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}