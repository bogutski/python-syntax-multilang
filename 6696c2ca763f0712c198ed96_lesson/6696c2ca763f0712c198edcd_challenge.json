{
  "_id": "6696c2ca763f0712c198edcd",
  "name": {
    "en": "",
    "ru": "Найти дубликаты и удалить их независимо от регистра"
  },
  "instruction": {
    "en": "",
    "ru": "Функция `findAndDelete` принимает строку содержащую слова в верхнем или нижнем регистре.\n\nСлова считаются дублирующимися, если они встречаются в строке более одного раза не зависимо от регистра написания.\n\nФункция должна вернуть строку, из которой удалены все слова, встречающиеся в исходной строке более одного раза.\n\nСлова в возвращаемой строке должны быть разделены одним пробелом.\n\nПример запуска функции:\n```javascript\n`findAndDelete(\"Hello hello Abra abra HELLO\")` должна вернуть `\"hello abra\"`.\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function findAndDelete(str) {\n  str = str.toLowerCase();\n  let result = '';\n  let word = '';\n  const obj = {};\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] !== ' ') word += str[i];\n\n    if (str[i] === ' ' || i === str.length - 1) {\n      if (word && !obj[word]) {\n        obj[word] = 1;\n\n        if (result) result += ' ' + word;\n        else result = word;\n      }\n      word = '';\n    }\n  }\n  return result\n}",
  "openTest": "it('Created function findAndDelete', () => {\n  expect(findAndDelete).to.be.a('function');\n});\n\nit('findAndDelete(\"Hello hello Abra abra HELLO\") should return \"hello abra\"', () => {\n  expect(findAndDelete('Hello hello Abra abra HELLO')).to.equal('hello abra');\n});\n\nit('findAndDelete(\"Hello\") should return \"hello\"', () => {\n  expect(findAndDelete('Hello')).to.equal('hello');\n});\n\nit('findAndDelete(\"\") should return \"\"', () => {\n  expect(findAndDelete('')).to.equal('');\n});\n\nit('findAndDelete(\"JS js js JS\") should return \"js\"', () => {\n  expect(findAndDelete('JS js js JS')).to.equal('js');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}