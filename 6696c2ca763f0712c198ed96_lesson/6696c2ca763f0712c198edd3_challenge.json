{
  "_id": "6696c2ca763f0712c198edd3",
  "name": {
    "en": "",
    "ru": "Слова с дефисами это тоже дубликаты"
  },
  "instruction": {
    "en": "",
    "ru": "Функция `findDuplicates` принимает строку.\n\nВ строке могут быть слова, разделенные пробелами или дефисами. Регистр букв не важен.\n\nОдинаковые слова могут быть написаны через дефис, при этом они всё равно считаются дубликатами, а не единым словом.\n\nНеобходимо очистить строку от дубликатов слов и вернуть строку, в которой слова разделены пробелами.\n\nПримеры запуска функции:\n```javascript\nfindDuplicates('hide-and-seek up-down up and down'); // 'hide and seek up down'\nfindDuplicates('start-stop and stop and run'); // 'start stop and run'\nfindDuplicates('javascript'); // 'javascript'\n```"
  },
  "initialSolution": "function",
  "completedSolution": "function findDuplicates(str) {\n  let result = '';\n  let word = '';\n  const obj = {};\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] !== ' ' && str[i] !== '-') word += str[i];\n\n    if (str[i] === ' ' || str[i] === '-' || i === str.length - 1) {\n      if (word && !obj[word]) {\n        obj[word] = 1;\n\n        if (result) result += ' ' + word;\n        else result = word;\n      }\n      word = '';\n    }\n  }\n  return result\n}",
  "openTest": "it('Created function findDuplicates', () => {\n  expect(findDuplicates).to.be.a('function');\n});\n\nit('findDuplicates(\"hide-and-seek up-down up and down\") should return \"hide and seek up down\"', () => {\n  expect(findDuplicates('hide-and-seek up-down up and down')).to.equal('hide and seek up down');\n});\n\nit('findDuplicates(\"\") should return \"\"', () => {\n  expect(findDuplicates('')).to.equal('');\n});\n\nit('findDuplicates(\"start-stop and stop and run\") should return \"start stop and run\"', () => {\n  expect(findDuplicates('start-stop and stop and run')).to.equal('start stop and run');\n});\n\nit('findDuplicates(\"javascript\") should return \"javascript\"', () => {\n  expect(findDuplicates('javascript')).to.equal('javascript');\n});\n\nit('findDuplicates(\"javascript-javascript\") should return \"javascript\"', () => {\n  expect(findDuplicates('javascript-javascript')).to.equal('javascript');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}