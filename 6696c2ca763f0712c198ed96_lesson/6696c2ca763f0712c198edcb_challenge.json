{
  "_id": "6696c2ca763f0712c198edcb",
  "name": {
    "en": "",
    "ru": "Исправьте код по удалению дубликатов слов"
  },
  "instruction": {
    "en": "",
    "ru": "Функция findTheSameWord принимает строку. В строке могут быть дубликаты каких-то слов.\n\nФункция должна вернуть строку, в которой будут все слова из строки, но без дубликатов. Слова должны быть разделены дефисом.\n\nПримеры запуска функции:\n```javascript\nfindTheSameWord('hello hello world') // 'hello-world'\nfindTheSameWord('good morning good world from good people') // 'good-morning-world-from-people'\n```\n\nИсправьте код, чтобы функция работала правильно."
  },
  "initialSolution": "function findTheSameWord(str) {\n  const obj = {};\n  const result = '';\n  const word = '';\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] !== ' ') word += str[i]\n    if (str[i] === ' ' && i === str.length - 1) {\n      if (word && !obj.hasOwnProperty[word]) {\n        obj[word] = 1;\n        if (result) result += ' ' + word;\n        else result += word;\n      }\n      word = '';\n    }\n  }\n  return 'result'\n}",
  "completedSolution": "function findTheSameWord(str) {\n  const obj = {};\n  let result = '';\n  let word = '';\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] !== ' ') word += str[i]\n    if (str[i] === ' ' || i === str.length - 1) {\n      if (word && !obj.hasOwnProperty([word])) {\n        obj[word] = 1;\n        if (result) result += '-' + word;\n        else result += word;\n      }\n      word = '';\n    }\n  }\n  return result\n}",
  "openTest": "it('Created function findTheSameWord', () => {\n  expect(findTheSameWord).to.be.a('function');\n});\n\nit('findTheSameWord(\"hello hello world\") should return \"hello-world\"', () => {\n  expect(findTheSameWord('hello hello world')).to.equal('hello-world');\n});\n\nit('findTheSameWord(\"good morning good world from good people\") should return \"good-morning-world-from-people\"', () => {\n  expect(findTheSameWord('good morning good world from good people')).to.equal('good-morning-world-from-people');\n});\n\nit('findTheSameWord(\"hello world\") should return \"hello-world\"', () => {\n  expect(findTheSameWord('hello world')).to.equal('hello-world');\n});\n\nit('findTheSameWord(\"how to find find duplicates duplicates\") should return \"how-to-find-duplicates\"', () => {\n  expect(findTheSameWord('how to find find duplicates duplicates')).to.equal('how-to-find-duplicates');\n});\n\nit('findTheSameWord(\"\") should return \"\"', () => {\n  expect(findTheSameWord('')).to.equal('');\n});\n\nit('findTheSameWord(\"duplicate\") should return \"duplicate\"', () => {\n  expect(findTheSameWord('duplicate')).to.equal('duplicate');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}