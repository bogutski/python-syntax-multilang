{
  "_id": "6696c2ca763f0712c198e55d",
  "name": {
    "en": "Distance between two points on the coordinate plane",
    "ru": "Расстояние между двумя точками на координатной плоскости"
  },
  "instruction": {
    "en": "Write a function `distanceBetweenPoints` that takes parameters:\n* `point1` - object with the coordinates of the first point\n* `point2` - object with coordinates of the second point\n\nEach point object has the following structure:\n```js\n{\n  x: 5,\n  y: 10\n}\n```\n\nThe function should find the distance between the two points and return it.\n\nThe answer must be a number.\n\nAn example of a function call:\n```javascript\ndistanceBetweenPoints(\n{ x: 5, y: 10 },\n{ x: 10, y: 10 }\n); // 5\n\ndistanceBetweenPoints(\n{ x: 5, y: 10 },\n{ x: 10, y: 20 }\n); // 11.180339887498949\n```\n\nUse the formula for the distance between two points in the plane to solve the problem:\n\n`d = √((x2 - x1)² + (y2 - y1)²)`\n\nExplanation of the formula:\n* Squared the difference of the coordinates on the `x` axis and take the square root of that number\n* Squared the difference in coordinates on the `y` axis and take the square root of that number\n* Add up the two resulting numbers\n* Take the square root of the resulting sum",
    "ru": "Напишите функцию `distanceBetweenPoints`, которая принимает параметры:\n* `point1` - объект с координатами первой точки\n* `point2` - объект с координатами второй точки\n\nКаждый объект точки имеет следующую структуру:\n```js\n{\n  x: 5,\n  y: 10\n}\n```\n\nФункция должна найти расстояние между двумя точками и вернуть его.\n\nОтвет должен быть числом.\n\nПример вызова функции:\n```javascript\ndistanceBetweenPoints(\n  { x: 5, y: 10 },\n  { x: 10, y: 10 }\n); // 5\n\ndistanceBetweenPoints(\n  { x: 5, y: 10 },\n  { x: 10, y: 20 }\n); // 11.180339887498949\n```\n\nДля решения задачи используйте формулу расстояния между двумя точками на плоскости:\n\n`d = √((x2 - x1)² + (y2 - y1)²)`\n\nПояснение к формуле:\n* Возведите в квадрат разность координат по оси `x`.\n* Возведите в квадрат разность координат по оси `y`.\n* Сложите два полученных числа.\n* Из полученной суммы возьмите квадратный корень."
  },
  "initialSolution": "fun",
  "completedSolution": "function distanceBetweenPoints(point1, point2) {\n  return ((point1.x - point2.x) ** 2 + (point1.y - point2.y) ** 2) ** 0.5;\n}",
  "openTest": "it('Created function distanceBetweenPoints', () => {\n  expect(distanceBetweenPoints).to.be.a('function');\n});\n\nit('distanceBetweenPoints({ x: 5, y: 10 }, { x: 10, y: 10 }) returns 5', () => {\n  expect(distanceBetweenPoints({ x: 5, y: 10 }, { x: 10, y: 10 })).eq(5);\n});\n\nit('distanceBetweenPoints({ x: 5, y: 10 }, { x: 10, y: 20 }) returns 11.180339887498949', () => {\n  expect(distanceBetweenPoints({ x: 5, y: 10 }, { x: 10, y: 20 })).eq(11.180339887498949);\n});\n\nit('distanceBetweenPoints({ x: -5, y: 10 }, { x: 10, y: -20 }) returns 33.54101966249684', () => {\n  expect(distanceBetweenPoints({ x: -5, y: 10 }, { x: 10, y: -20 })).eq(\n    33.54101966249684,\n  );\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}