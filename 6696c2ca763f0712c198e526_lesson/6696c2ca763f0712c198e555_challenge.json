{
  "_id": "6696c2ca763f0712c198e555",
  "name": {
    "en": "The arithmetic mean of the object",
    "ru": "Среднее арифметическое из объекта"
  },
  "instruction": {
    "en": "Write a function `averageFromObject` that takes an object with three properties `a`, `b` and `c`.\n\nAn example of an object that will be passed to the function:\n```javascript\n{\n  a: 10,\n  b: 20,\n  c: 30\n}\n```\n\nThe function should return the arithmetic mean of the properties `a`, `b` and `c` of the object.\n\nAn example of running the function:\n```javascript\naverageFromObject({a: 10, b: 20, c: 30}) // 20\n```",
    "ru": "Напишите функцию `averageFromObject`, которая принимает объект с тремя свойствами `a`, `b` и `c`.\n\nПример объекта, который будет передан в функцию:\n```javascript\n{\n  a: 10,\n  b: 20,\n  c: 30\n}\n```\n\nФункция должна вернуть среднее арифметическое свойств `a`, `b` и `c` объекта.\n\nПример запуска функции:\n```javascript\naverageFromObject({a: 10,  b: 20, c: 30}) // 20\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function averageFromObject(obj) {\n  return (obj.a + obj.b + obj.c) / 3;\n}",
  "openTest": "it('Created function averageFromObject', () => {\n  expect(averageFromObject).to.be.a('function');\n});\n\nit('averageFromObject({a: 10,  b: 20, c: 30}) should return 20', () => {\n  expect(averageFromObject({ a: 10, b: 20, c: 30 })).to.equal(20);\n});\n\nit('averageFromObject({a: 1,  b: 2, c: 3}) should return 2', () => {\n  expect(averageFromObject({ a: 1, b: 2, c: 3 })).to.equal(2);\n});\n\nit('averageFromObject({a: 1,  b: 1, c: 1}) should return 1', () => {\n  expect(averageFromObject({ a: 1, b: 1, c: 1 })).to.equal(1);\n});\n\nit('averageFromObject({a: 5,  b: 12, c: 20}) should return  12.333333333333334', () => {\n  expect(averageFromObject({ a: 5, b: 12, c: 20 })).to.equal(12.333333333333334);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}