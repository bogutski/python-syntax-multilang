{
  "_id": "6696c2ca763f0712c198e526",
  "content": {
    "ru": "![](https://course-qa-basics.s3.us-west-1.amazonaws.com/object-string.png)\n\nКаждое свойство имеет `ключ` и `значение`, и можно получить доступ к этим значениям, используя ключ свойства.\n\nДля доступа к свойствам объекта в JavaScript используется синтаксис точки или квадратных скобок. Давайте рассмотрим оба варианта более подробно.\n\n### Синтаксис точки\n\nСинтаксис точки используется для доступа к свойствам объекта, если имя свойства (ключ) известно заранее. Он выглядит следующим образом:\n\n```javascript\nobjectName.propertyName\n```\n\nГде `objectName` - имя объекта, а `propertyName` - имя свойства (ключ).\n\nНапример, у нас есть объект `person`:\n\n```javascript\nlet person = { \n  firstName: 'John',\n  lastName: 'Doe',\n  age: 30,\n  city: 'New York'\n};\n```\n\nМы можем получить доступ к свойствам объекта `person`, используя синтаксис точки:\n\n```javascript\nconsole.log(person.age); // 30\nconsole.log(person.city); // 'New York'\nconsole.log(person.firstName + ' ' + person.lastName + ' from ' + person.city); // 'John Doe from New York'\n```\n\n### Синтаксис квадратных скобок\n\nСинтаксис квадратных скобок используется для доступа к свойствам объекта, если имя свойства содержит пробелы или другие специальные символы. Он выглядит следующим образом:\n\n```javascript\nobjectName['propertyName']\n```\n\nГде `objectName` - имя объекта, а `propertyName` - имя свойства (ключ).\n\nНапример, мы можем получить доступ к значению ключа `'city name'` объекта `person`, используя синтаксис квадратных скобок:\n\n```javascript\nconsole.log(person['city name']); // 'New York'\n```\n\nЕще один пример с квадратными скобками: ключ `'shirt-color'` объекта `store`:\n\n```javascript\nconsole.log(store['shirt-color']); // 'red'\n```\n\n\nМы также можем использовать переменную вместо имени свойства:\n\n```javascript\nlet propName = 'age';\n\nconsole.log(person[propName]); // 30\n```\n\nОбратите внимание, что имя свойства в квадратных скобках должно быть заключено в кавычки (двойные или одинарные).\n\nНапишем функцию `compareAges`, которая принимает два объекта `person1` и `person2`, которые имеют свойство `age`, и возвращает сообщение о том, кто старше.\n\n```javascript\nfunction compareAges(person1, person2) {\n  if (person1.age > person2.age) {\n    return person1.name + 'is older than' + person2.name;\n  } else if (person1.age < person2.age) {\n    return person2.name + 'is older than' + person1.name;\n  } else {\n    return 'these people are the same age';\n  }\n}\n\nlet person1 = { name: 'John', age: 30 };\nlet person2 = { name: 'Jane', age: 25 };\n\nlet result = compareAges(person1, person2);\nconsole.log(result); // 'John older than Jane',\n                     // потому что возраст John больше возраста Jane\n```\n",
    "en": "![](https://course-qa-basics.s3.us-west-1.amazonaws.com/object-string.png)\n\nEach property has a `key` and a `value` and you can access these values using the property key.\n\nJavaScript uses either the point or square bracket syntax to access object properties. Let's take a closer look at both.\n\n### Point syntax\n\nThe point syntax is used to access object properties if the property name (key) is known beforehand. It looks like this:\n\n```javascript\nobjectName.propertyName\n```\n\nWhere `objectName` is the object name and `propertyName` is the property name (key).\n\nFor example, we have a `person` object:\n\n```javascript\nlet person = { \n  firstName: 'John',\n  lastName: 'Doe',\n  age: 30,\n  city: 'New York'\n};\n```\n\nWe can access the properties of the `person` object using the point syntax:\n\n```javascript\nconsole.log(person.age); // 30\nconsole.log(person.city); // 'New York'\nconsole.log(person.firstName + ' ' + person.lastName + ' from ' + person.city); // 'John Doe from New York'\n```\n\n### Square brackets syntax\n\nThe square brackets syntax is used to access object properties if the property name contains spaces or other special characters. It looks as follows:\n\n```javascript\nobjectName['propertyName']\n```\n\nWhere `objectName` is the object name and `propertyName` is the property name (key).\n\nFor example, we can access the value of the key `'city name'` of the object `person` using the syntax of square brackets:\n\n```javascript\nconsole.log(person['city name']); // 'New York'\n```\n\nAnother example with square brackets: the `'shirt-color'` key of the `store` object:\n\n```javascript\nconsole.log(store['shirt-color']); // 'red'\n```\n\n\nWe can also use a variable instead of a property name:\n\n```javascript\nlet propName = 'age';\n\nconsole.log(person[propName]); // 30\n```\n\nNote that the property name in square brackets must be enclosed in quotation marks (double or single).\n\nLet's write a function `compareAges` that takes two objects `person1` and `person2` that have the property `age` and returns a message about who is older.\n\n```javascript\nfunction compareAges(person1, person2) {\n  if (person1.age > person2.age) {\n    return person1.name + 'is older than' + person2.name;\n  } else if (person1.age < person2.age) {\n    return person2.name + 'is older than' + person1.name;\n  } else {\n    return 'these people are the same age';\n  }\n}\n\nlet person1 = { name: 'John', age: 30 };\nlet person2 = { name: 'Jane', age: 25 };\n\nlet result = compareAges(person1, person2);\nconsole.log(result); // 'John older than Jane',\n                     // because John is older than Jane Jane\n```\n",
    "es": "# Доступ к свойствам объекта language: es"
  },
  "video": {
    "ru": "https://youtu.be/ONIf9dz66tA",
    "en": "",
    "es": ""
  }
}