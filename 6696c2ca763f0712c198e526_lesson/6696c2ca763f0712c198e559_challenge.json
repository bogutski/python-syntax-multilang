{
  "_id": "6696c2ca763f0712c198e559",
  "name": {
    "en": "Total amount of purchases. Products, prices and discounts",
    "ru": "Итоговая сумма покупок. Товары, цены и скидки"
  },
  "instruction": {
    "en": "Write a function `totalProductPrice` that takes four parameters:\n* `product1`.\n* `product2`\n* `product3`\n* `product4`.\n\nEach parameter is an object that describes a product.\n\nEach object has four properties:\n* `name` - product name, string\n* `price` - price of the product, number\n* `quantity` - quantity of item, number\n* `discount` - product discount in percent, a number\n\nThe function will return a string of the form: `Total price is: $123`, where 123 is the total amount of purchases.\n\nAn example of running the function:\n```javascript\ntotalProductPrice(\n{ name: 'product1', price: 100, quantity: 2, discount: 12 }, // Subtotal $176\n{ name: 'product2', price: 200, quantity: 1, discount: 0 }, // Subtotal $200\n{ name: 'product3', price: 300, quantity: 4, discount: 15 }, // Subtotal $1020\n{ name: 'product4', price: 400, quantity: 5, discount: 25 }, // Subtotal $1500\n); // Total price is: $2896\n```",
    "ru": "Напишите функцию `totalProductPrice`, которая принимает четыре параметра:\n* `product1`\n* `product2`\n* `product3`\n* `product4`\n\nКаждый параметр – это объект, который описывает товар.\n\nКаждый объект имеет четыре свойства:\n* `name` – название товара, строка\n* `price` – цена товара, число\n* `quantity` – количество товара, число\n* `discount` – скидка на товар в процентах, число\n\nФункция должна вернуть строку вида: `Total price is: $123`, где 123 – это итоговая сумма покупок.\n\nПример запуска функции:\n```javascript\ntotalProductPrice(\n  { name: 'product1', price: 100, quantity: 2, discount: 12 }, // Subtotal $176\n  { name: 'product2', price: 200, quantity: 1, discount: 0 }, // Subtotal $200\n  { name: 'product3', price: 300, quantity: 4, discount: 15 }, // Subtotal $1020\n  { name: 'product4', price: 400, quantity: 5, discount: 25 }, // Subtotal $1500\n); // Total price is: $2896\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function totalProductPrice(product1, product2, product3, product4) {\n  // product { name: 'name', price: 100, quantity: 2, discount: 12 }\n  const subtotal1 = product1.price * product1.quantity * (1 - product1.discount / 100);\n  const subtotal2 = product2.price * product2.quantity * (1 - product2.discount / 100);\n  const subtotal3 = product3.price * product3.quantity * (1 - product3.discount / 100);\n  const subtotal4 = product4.price * product4.quantity * (1 - product4.discount / 100);\n  return  'Total price is: $' + (subtotal1 + subtotal2 + subtotal3 + subtotal4);\n}",
  "openTest": "it('Created function totalProductPrice', () => {\n  expect(totalProductPrice).to.be.a('function');\n});\n\nit('totalProductPrice({ name: \"product1\", price: 100, quantity: 2, discount: 12 }, { name: \"product2\", price: 200, quantity: 1, discount: 0 }, { name: \"product3\", price: 300, quantity: 4, discount: 15 }, { name: \"product4\", price: 400, quantity: 5, discount: 25 }) return Total price is: $2896', () => {\n  expect(\n    totalProductPrice(\n      { name: 'product1', price: 100, quantity: 2, discount: 12 },\n      { name: 'product2', price: 200, quantity: 1, discount: 0 },\n      { name: 'product3', price: 300, quantity: 4, discount: 15 },\n      { name: 'product4', price: 400, quantity: 5, discount: 25 },\n    ),\n  ).eql('Total price is: $2896');\n});\n\nit('totalProductPrice({ name: \"product1\", price: 100, quantity: 20, discount: 95 }, { name: \"product2\", price: 200, quantity: 5, discount: 4 }, { name: \"product3\", price: 300, quantity: 4, discount: 45 }, { name: \"product4\", price: 400, quantity: 1, discount: 35 }) return Total price is: $1980', () => {\n  expect(\n    totalProductPrice(\n      { name: 'product1', price: 100, quantity: 20, discount: 95 },\n      { name: 'product2', price: 200, quantity: 5, discount: 4 },\n      { name: 'product3', price: 300, quantity: 4, discount: 45 },\n      { name: 'product4', price: 400, quantity: 1, discount: 35 },\n    ),\n  ).eql('Total price is: $1980');\n});\n\nit('totalProductPrice({ name: \"product1\", price: 95, quantity: 2, discount: 42 }, { name: \"product2\", price: 372, quantity: 1, discount: 65 }, { name: \"product3\", price: 921, quantity: 4, discount: 16 }, { name: \"product4\", price: 70, quantity: 5, discount: 35 }) return Total price is: $3562.46', () => {\n  expect(\n    totalProductPrice(\n      { name: 'product1', price: 95, quantity: 2, discount: 42 },\n      { name: 'product2', price: 372, quantity: 1, discount: 65 },\n      { name: 'product3', price: 921, quantity: 4, discount: 16 },\n      { name: 'product4', price: 70, quantity: 5, discount: 35 },\n    ),\n  ).eql('Total price is: $3562.46');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}