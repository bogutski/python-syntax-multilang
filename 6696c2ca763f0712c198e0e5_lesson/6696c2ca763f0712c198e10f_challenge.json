{
  "_id": "6696c2ca763f0712c198e10f",
  "name": {
    "en": "Formula for calculating the time value of money",
    "ru": "Формула для расчета временной стоимости денег"
  },
  "instruction": {
    "en": "Money loses its value over time.\n\nFor example, if you get $1,000 today, that money will be worth less in a year than it is today.\n\nThis has to do with inflation. That is, the fact that the prices of goods and services rise over time.\n\nThere is a formula for calculating the time value of money.\n\nThe formula looks like this: `FV = PV * (1 + i / 100) ^ n`, where\nFV is the future value of money,\nPV - current value of money, currentValue\ni - interest rate, interestRate\nn - number of years, years\n\nThe `^ n' in the formula means to a degree.\n\nWrite a function `calculateFutureValue` that takes 3 parameters: `currentValue`, `interestRate` and `years` and returns the future value of money.\n\nExamples:\n```javascript\nwithalculateFutureValue(1000, 10, 1) // 1100\nwithalculateFutureValue(1000, 10, 2) // 1210.0000000000002\nwithalculateFutureValue(1000, 4, 3) // 1061.6",
    "ru": "Деньги со временем теряют свою стоимость.\n\nНапример, если вы получите 1000 долларов сегодня, то через год эти деньги будут стоить меньше, чем сегодня.\n\nЭто связано с инфляцией. То есть, с тем, что цены на товары и услуги растут со временем.\n\nЕсть формула для расчета временной стоимости денег.\n\nФормула выглядит так: `FV = PV * (1 + i / 100) ^ n`, где\n* FV – будущая стоимость денег,\n* PV – текущая стоимость денег, `currentValue`\n* i – процентная ставка, `interestRate`\n* n – количество лет, `years`\n\n`^ n` в формуле означает возведение в степень.\n\nНапишите функцию `calculateFutureValue`, которая принимает 3 параметра: `currentValue`, `interestRate` и `years` и возвращает будущую стоимость денег.\n\nПримеры:\n```javascript\nсalculateFutureValue(1000, 10, 1) // 1100\nсalculateFutureValue(1000, 10, 2) // 1210.0000000000002\nсalculateFutureValue(1000, 4, 3) // 1061.6"
  },
  "initialSolution": "function calculateFutureValue()",
  "completedSolution": "function calculateFutureValue(currentValue, interestRate, years) {\n  return currentValue * (1 + interestRate / 100) ** years;\n}",
  "openTest": "it('Created function calculateFutureValue', () => {\n  expect(calculateFutureValue).to.be.a('function');\n});\n\nit('calculateFutureValue(1000, 10, 1) should return 1100', () => {\n  expect(calculateFutureValue(1000, 10, 1)).to.equal(1100);\n});\n\nit('calculateFutureValue(1000, 10, 2) should return 1210', () => {\n  expect(calculateFutureValue(1000, 10, 2)).to.equal(1210.0000000000002);\n});\n\nit('calculateFutureValue(1000, 4, 3) should return 1061.6', () => {\n  expect(calculateFutureValue(1000, 4, 3)).to.equal(1124.864);\n});\n\nit('calculateFutureValue(1000, 10, 1) should return 1100', () => {\n  expect(calculateFutureValue(1000, 10, 1)).to.equal(1100);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}