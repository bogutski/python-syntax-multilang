{
  "name": "Результат работы функции в другую функцию",
  "questions": {
    "0": {
      "name": "Функции могут принимать различные значения в качестве аргументов, в том числе те, которые были получены в результате работы другой функции.",
      "variants": {
        "0": {
          "name": "Утверждение верно"
        },
        "1": {
          "name": "Утверждение неверно"
        }
      }
    },
    "1": {
      "name": "В выражении const result = sum(1, 2) + sum(3, 4) функция sum вызывается дважды и возвращает два значения, которые затем складываются.",
      "variants": {
        "0": {
          "name": "Утверждение верно"
        },
        "1": {
          "name": "Утверждение неверно"
        }
      }
    },
    "2": {
      "name": "Выберите правильные варианты для выражения const result = sum(sum(2, 3), sum(5, 0))",
      "variants": {
        "0": {
          "name": "Функция sum вызывается четыре раза"
        },
        "1": {
          "name": "Функция sum вызывается два раза"
        },
        "2": {
          "name": "Функция sum вызывается три раза"
        },
        "3": {
          "name": "Код написан с ошибкой"
        }
      }
    },
    "3": {
      "name": "Выберите правильные варианты для выражения const result = sum(sum(2, 3), sum(5, 0))",
      "variants": {
        "0": {
          "name": "Сначала выполняется внешняя функция sum, а затем внутренние"
        },
        "1": {
          "name": "Сначала выполняется функция sum(2, 3), затем sum(5, 0), затем sum с результатами первых двух вызовов"
        },
        "2": {
          "name": "Вызовы всех функций выполняются одновременно"
        }
      }
    },
    "4": {
      "name": "Выберите варианты кода, которые работают без ошибок. Попробуйте определить без запуска",
      "variants": {
        "0": {
          "name": "function sum(a = 1, b = 1) { return a + b; }; const result = sum(sum(sum(), sum()), sum(2, 3))"
        },
        "1": {
          "name": "function sum(a = 1, b = 1) { return a }; const result = sum(sum(sum(), sum()), sum(2, 3))"
        },
        "2": {
          "name": "function add(n = 1) { return n + 1 }; const result = add(add(add(add())))"
        },
        "3": {
          "name": "function add(n = 1) { return n + 1 }; const result = add(add(add(add()))"
        }
      }
    },
    "5": {
      "name": "Внутри функции можно вызывать другие функции, получая результат их работы",
      "variants": {
        "0": {
          "name": "Утверждение верно"
        },
        "1": {
          "name": "Утверждение неверно"
        }
      }
    },
    "6": {
      "name": "У каждой функции должен быть return",
      "variants": {
        "0": {
          "name": "Утверждение верно"
        },
        "1": {
          "name": "Утверждение неверно"
        }
      }
    },
    "7": {
      "name": "При написании кода функции можно использовать переменные, объявленные вне функции",
      "variants": {
        "0": {
          "name": "Утверждение верно"
        },
        "1": {
          "name": "Утверждение неверно"
        }
      }
    },
    "8": {
      "name": "При вызове функции она может менять значения переменных, объявленных вне функции",
      "variants": {
        "0": {
          "name": "Утверждение верно"
        },
        "1": {
          "name": "Утверждение неверно"
        }
      }
    },
    "9": {
      "name": "Результат работы функции можно сохранить в переменную, а затем использовать эту переменную как аргумент другой функции",
      "variants": {
        "0": {
          "name": "Утверждение верно"
        },
        "1": {
          "name": "Утверждение неверно"
        }
      }
    }
  }
}