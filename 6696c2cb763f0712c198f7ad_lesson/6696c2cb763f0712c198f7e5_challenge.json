{
  "_id": "6696c2cb763f0712c198f7e5",
  "name": {
    "en": "/*",
    "ru": "Найти индекс элемента с максимальной суммой"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `findIndexWithMaxDigitSum`, которая принимает массив строк, представляющих числа.\n\nФункция должна вернуть индекс элемента, сумма цифр которого максимальна.\n\nЕсли массив пуст или если элементы массива не содержат цифр, функция должна вернуть строку `No valid elements`.\n\n\nПримеры запуска функции:\n```javascript\nconsole.log(findIndexWithMaxDigitSum(['10', '56', '23'])); // 1\nconsole.log(findIndexWithMaxDigitSum(['123', '456', '789'])); // 2\nconsole.log(findIndexWithMaxDigitSum(['abc', 'def', 'ghi'])); // \"No valid elements\"\nconsole.log(findIndexWithMaxDigitSum([])); // \"No valid elements\"\n```"
  },
  "initialSolution": "function findIndexWithMaxDigitSum(){\n\n}",
  "completedSolution": "function findIndexWithMaxDigitSum(arr) {\n  if(!arr.length) return 'No valid elements'\n  const numbers = arr.map(str => str.split('').reduce((acc, el) => acc + Number(el), 0))\n  const maxNum = Math.max(...numbers)\n\n  return isNaN(maxNum) ? 'No valid elements' : numbers.indexOf(maxNum);\n}",
  "openTest": "it('Created function findIndexWithMaxDigitSum', () => {\n  expect(findIndexWithMaxDigitSum).to.be.a('function');\n});\n\nit('findIndexWithMaxDigitSum([\"123\", \"456\", \"789\"]) should return 2', function() {\n  expect(findIndexWithMaxDigitSum([\"123\", \"456\", \"789\"])).to.equal(2);\n});\n\nit('findIndexWithMaxDigitSum([\"10\", \"56\", \"23\"]) should return 1', function() {\n  expect(findIndexWithMaxDigitSum([\"10\", \"56\", \"23\"])).to.equal(1);\n});\n\nit('findIndexWithMaxDigitSum([\"abc\", \"def\", \"ghi\"]) should return \"No valid elements\"', function() {\n  expect(findIndexWithMaxDigitSum([\"abc\", \"def\", \"ghi\"])).to.equal(\"No valid elements\");\n});\n\nit('findIndexWithMaxDigitSum([]) should return \"No valid elements\"', function() {\n  expect(findIndexWithMaxDigitSum([])).to.equal(\"No valid elements\");\n});\n\nit('findIndexWithMaxDigitSum([\"1234\", \"567\", \"890\"]) should return 1', function() {\n  expect(findIndexWithMaxDigitSum([\"1234\", \"567\", \"890\"])).to.equal(1);\n});\n\nit('findIndexWithMaxDigitSum([\"101\", \"202\", \"303\"]) should return 2', function() {\n  expect(findIndexWithMaxDigitSum([\"101\", \"202\", \"303\"])).to.equal(2);\n});\n\nit('findIndexWithMaxDigitSum([\"0\", \"00\", \"000\"]) should return 0', function() {\n  expect(findIndexWithMaxDigitSum([\"0\", \"00\", \"000\"])).to.equal(0);\n});\n\nit('findIndexWithMaxDigitSum([\"9\", \"99\", \"999\"]) should return 2', function() {\n  expect(findIndexWithMaxDigitSum([\"9\", \"99\", \"999\"])).to.equal(2);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}