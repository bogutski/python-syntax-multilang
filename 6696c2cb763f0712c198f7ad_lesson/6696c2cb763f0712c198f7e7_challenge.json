{
  "_id": "6696c2cb763f0712c198f7e7",
  "name": {
    "en": "/*",
    "ru": "Найти индекс элемента с наибольшим количеством гласных"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `findIndexWithMostVowels`, которая принимает массив строк.\n\nФункция должна вернуть индекс элемента, который содержит наибольшее количество гласных (a, e, i, o, u).\n\nЕсли массив пуст или если элементы массива не содержат гласных, функция должна вернуть строку `No vowels found`.\n\n\nПримеры запуска функции:\n```javascript\nconsole.log(findIndexWithMostVowels(['apple', 'banana', 'cherry']));// 1\nconsole.log(findIndexWithMostVowels(['sky', 'dry', 'fly'])); // \"No vowels found\"\nconsole.log(findIndexWithMostVowels(['education', 'information', 'communication'])); // 2\nconsole.log(findIndexWithMostVowels([])); // \"No vowels found\"\n```"
  },
  "initialSolution": "function findIndexWithMostVowels(){\n\n}",
  "completedSolution": "function findIndexWithMostVowels(arr) {\n  if(!arr.length) return 'No vowels found'\n\n  const vowelsCount = str => {\n    const vowels = 'euioa'\n    let count = 0\n    for(let char of str){\n      if(vowels.includes(char)) count++\n    }\n    return count\n  }\n\n  const modified = arr.map(vowelsCount)\n  const maxNum = Math.max(...modified)\n\n  return maxNum ? modified.indexOf(maxNum) : 'No vowels found';\n}",
  "openTest": "it('Created function findIndexWithMostVowels', () => {\n  expect(findIndexWithMostVowels).to.be.a('function');\n});\n\nit('findIndexWithMostVowels([\"apple\", \"banana\", \"cherry\"]) should return 1', function() {\n  expect(findIndexWithMostVowels([\"apple\", \"banana\", \"cherry\"])).to.equal(1);\n});\n\nit('findIndexWithMostVowels([\"sky\", \"dry\", \"fly\"]) should return \"No vowels found\"', function() {\n  expect(findIndexWithMostVowels([\"sky\", \"dry\", \"fly\"])).to.equal(\"No vowels found\");\n});\n\nit('findIndexWithMostVowels([\"education\", \"information\", \"communication\"]) should return 2', function() {\n  expect(findIndexWithMostVowels([\"education\", \"information\", \"communication\"])).to.equal(2);\n});\n\nit('findIndexWithMostVowels([\"hello\", \"world\", \"javascript\"]) should return 2', function() {\n  expect(findIndexWithMostVowels([\"hello\", \"world\", \"javascript\"])).to.equal(2);\n});\n\nit('findIndexWithMostVowels([\"\", \"a\", \"e\", \"i\", \"o\", \"u\"]) should return 1', function() {\n  expect(findIndexWithMostVowels([\"\", \"a\", \"e\", \"i\", \"o\", \"u\"])).to.equal(1);\n});\n\nit('findIndexWithMostVowels([\"bcdfg\", \"hjkl\", \"mnpqr\"]) should return \"No vowels found\"', function() {\n  expect(findIndexWithMostVowels([\"bcdfg\", \"hjkl\", \"mnpqr\"])).to.equal(\"No vowels found\");\n});\n\nit('findIndexWithMostVowels([\"apple\", \"orange\", \"grape\"]) should return 1', function() {\n  expect(findIndexWithMostVowels([\"apple\", \"orange\", \"grape\"])).to.equal(1);\n});\n\nit('findIndexWithMostVowels([]) should return \"No vowels found\"', function() {\n  expect(findIndexWithMostVowels([])).to.equal(\"No vowels found\");\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}