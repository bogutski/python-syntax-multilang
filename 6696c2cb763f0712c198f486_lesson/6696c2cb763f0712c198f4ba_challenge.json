{
  "_id": "6696c2cb763f0712c198f4ba",
  "name": {
    "en": "/*",
    "ru": "Возвести числа в квадрат"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `squareNumbers`, которая принимает массив чисел и возвращает новый массив, где каждое число было возведено в квадрат.\n\nИспользуйте метод `Array.prototype.forEach()` для этого преобразования.\n\n\nПример запуска функции:\n```javascript\nsquareNumbers([1, 2, 3, 4]); // [1, 4, 9, 16]\nsquareNumbers([-4, -10, 0, 100]); // [ 16, 100, 0, 10000 ]\nsquareNumbers([]); // []\n```"
  },
  "initialSolution": "function squareNumbers(){\n\n}",
  "completedSolution": "function squareNumbers(arr) {\n  let res = []\n\n  arr.forEach(n => res.push(n * n))\n\n  return res;\n}",
  "openTest": "it('Created function squareNumbers', () => {\n  expect(squareNumbers).to.be.a('function');\n});\n\nit('Function squareNumbers should include method forEach()', () => {\n  const res = squareNumbers.toString()\n  expect(res).to.include('.forEach(')\n});\n\nit(\"squareNumbers([1, 2, 3, 4]) should return [1, 4, 9, 16]\", () => {\n  expect(squareNumbers([1, 2, 3, 4])).to.deep.equal([1, 4, 9, 16]);\n});\n\nit(\"squareNumbers([-1, -2, -3, -4]) should return [1, 4, 9, 16]\", () => {\n  expect(squareNumbers([-1, -2, -3, -4])).to.deep.equal([1, 4, 9, 16]);\n});\n\nit(\"squareNumbers([0]) should return [0]\", () => {\n  expect(squareNumbers([0])).to.deep.equal([0]);\n});\n\nit(\"squareNumbers([]) should return []\", () => {\n  expect(squareNumbers([])).to.deep.equal([]);\n});\n\nit(\"squareNumbers([10, 100, 1000]) should return [100, 10000, 1000000]\", () => {\n  expect(squareNumbers([10, 100, 1000])).to.deep.equal([100, 10000, 1000000]);\n});\n\nit(\"squareNumbers([5, 6, 7, 8]) should return [25, 36, 49, 64]\", () => {\n  expect(squareNumbers([5, 6, 7, 8])).to.deep.equal([25, 36, 49, 64]);\n});\n\nit(\"squareNumbers([2, 4, 6, 8, 10]) should return [4, 16, 36, 64, 100]\", () => {\n  expect(squareNumbers([2, 4, 6, 8, 10])).to.deep.equal([4, 16, 36, 64, 100]);\n});\n\nit(\"squareNumbers([1.5, 2.5, 3.5]) should return [2.25, 6.25, 12.25]\", () => {\n  expect(squareNumbers([1.5, 2.5, 3.5])).to.deep.equal([2.25, 6.25, 12.25]);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}