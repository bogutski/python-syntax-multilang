{
  "_id": "6696c2cb763f0712c198f4bb",
  "name": {
    "en": "/*",
    "ru": "Перевести текст массива в верхний регистр"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `uppercaseArray`, которая принимает массив строк и использует метод `forEach` для перевода каждой строки массива в верхний регистр.\n\nФункция должна возвращать новый массив с изменёнными строками.\n\n\nПример запуска функции:\n```javascript\nuppercaseArray([\"a\", \"b\", \"c\"]); // [ 'A', 'B', 'C' ]\nuppercaseArray([\"hello\", \"world\", \"javascript\"]); // [ 'HELLO', 'WORLD', 'JAVASCRIPT' ]\nuppercaseArray([]); // []\n```"
  },
  "initialSolution": "function uppercaseArray(){\n\n}",
  "completedSolution": "function uppercaseArray(arr) {\n  let res = [];\n  arr.forEach(str => res.push(str.toUpperCase()))\n\n  return res;\n}",
  "openTest": "it('Created function uppercaseArray', () => {\n  expect(uppercaseArray).to.be.a('function');\n});\n\nit('Function uppercaseArray should include method forEach()', () => {\n  const res = uppercaseArray.toString()\n  expect(res).to.include('.forEach(')\n});\n\nit(\"uppercaseArray(['hello', 'world', 'javascript']) should return ['HELLO', 'WORLD', 'JAVASCRIPT']\", () => {\n  expect(uppercaseArray([\"hello\", \"world\", \"javascript\"])).to.deep.equal([\"HELLO\", \"WORLD\", \"JAVASCRIPT\"]);\n});\n\nit(\"uppercaseArray(['']) should return ['']\", () => {\n  expect(uppercaseArray([''])).to.deep.equal(['']);\n});\n\nit(\"uppercaseArray(['apple', 'banana']) should return ['APPLE', 'BANANA']\", () => {\n  expect(uppercaseArray([\"apple\", \"banana\"])).to.deep.equal([\"APPLE\", \"BANANA\"]);\n});\n\nit(\"uppercaseArray(['Test', 'tESt', 'test']) should return ['TEST', 'TEST', 'TEST']\", () => {\n  expect(uppercaseArray([\"Test\", \"tESt\", \"test\"])).to.deep.equal([\"TEST\", \"TEST\", \"TEST\"]);\n});\n\nit(\"uppercaseArray([]) should return []\", () => {\n  expect(uppercaseArray([])).to.deep.equal([]);\n});\n\nit(\"uppercaseArray(['Mixed', 'CaSe', 'WoRds']) should return ['MIXED', 'CASE', 'WORDS']\", () => {\n  expect(uppercaseArray([\"Mixed\", \"CaSe\", \"WoRds\"])).to.deep.equal([\"MIXED\", \"CASE\", \"WORDS\"]);\n});\n\nit(\"uppercaseArray(['one', 'two', 'three', 'four']) should return ['ONE', 'TWO', 'THREE', 'FOUR']\", () => {\n  expect(uppercaseArray([\"one\", \"two\", \"three\", \"four\"])).to.deep.equal([\"ONE\", \"TWO\", \"THREE\", \"FOUR\"]);\n});\n\nit(\"uppercaseArray(['', ' ', '   ']) should return ['', ' ', '   ']\", () => {\n  expect(uppercaseArray(['', ' ', '   '])).to.deep.equal(['', ' ', '   ']);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}