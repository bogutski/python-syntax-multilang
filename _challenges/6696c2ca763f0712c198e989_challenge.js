// NAMEEN:
// NAMERU:Прервать заполненеие массива на цифре 20

/*
INSTRUCTIONENSTART

INSTRUCTIONENEND
*/

/*
INSTRUCTIONRUSTART
Напишите функцию `stopAtTwenty`, которая принимает 3 параметра: пустой массив, начальное значение и конечное значение.

Массив будет заполняться числами от начального значения до конечного значения включительно.

Начальное значение - это число, с которого начинается заполнение массива.

Конечное значение - это число, которым заканчивается заполнение массива.

Начальное значение всегда будет меньше конечного значения.

Если в массиве появляется число 20, то заполнение массива должно прекратиться.

Функция должна вернуть заполненный массив.

Пример запуска функции:
```javascript
stopAtTwenty([], 1, 30); // [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
stopAtTwenty([], -3, 25); // [-3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
stopAtTwenty([], 5, 19); // [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
stopAtTwenty([], 20, 30); // [20]
```
INSTRUCTIONRUEND
*/

/*
INITIALSOLUTIONSTART
fun
INITIALSOLUTIONEND
*/

// SOLUTIONSTART
function stopAtTwenty(arr, n, n1) {
  for (let i = n; i <= n1; i++) {
    arr.push(i);
    if (i === 20) break;
  }
  return arr
}
// SOLUTIONEND


// OPENTESTSSTART
it('Created function stopAtTwenty', () => {
  expect(stopAtTwenty).to.be.a('function');
});

it('stopAtTwenty([], 1, 30) should return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]', () => {
  expect(stopAtTwenty([], 1, 30)).to.eql([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]);
});

it('stopAtTwenty([], -3, 25) should return [-3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]', () => {
  expect(stopAtTwenty([], -3, 25)).to.eql([-3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]);
});

it('stopAtTwenty([], 5, 19) should return [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]', () => {
  expect(stopAtTwenty([], 5, 19)).to.eql([5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]);
});

it('stopAtTwenty([], 20, 30) should return [20]', () => {
  expect(stopAtTwenty([], 20, 30)).to.eql([20]);
});

it('stopAtTwenty([], -10, 13) should return [-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]', () => {
  expect(stopAtTwenty([], -10, 13)).to.eql([-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]);
});

it('stopAtTwenty([], 0, 21) should return [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]', () => {
  expect(stopAtTwenty([], 0, 21)).to.eql([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]);
});

// OPENTESTSEND

// HIDDENTESTSSTART

// HIDDENTESTSEND
