{
  "_id": "6696c2ca763f0712c198e25a",
  "name": {
    "en": "Determine the length of the segment by coordinates",
    "ru": "Определить длину отрезка по координатам"
  },
  "instruction": {
    "en": "In this problem, you need to determine the length of a segment from its coordinates.\n\nThe length of the segment is calculated using the formula: `the square root of ((x2 - x1)^2 + (y2 - y1)^2)`, where `x1`, `y1` are the coordinates of the first point, `x2`, `y2` are the coordinates of the second point.\n\n`^2` is the squaring.\n\nFor squaring, use the `** 2` operator, for example: `2 ** 2 = 4`.\n\nTo extract the square root, use the `** 0.5` operator, for example: `4 ** 0.5 = 2`.\n\nWrite a function `distance` that takes as input the coordinates of two points and returns the length of the segment between them.\n\nThe parameters of the function are:\n* `x1` - x coordinate of the first point\n* `y1` - y coordinate of the first point\n* `x2` - x coordinate of the second point\n* `y2` - y coordinate of the second point\n\n\nExample run:\n```javascript\ndistance(0, 0, 0, 0); // 0\ndistance(0, 0, 1, 0); // 1\ndistance(0, 0, 0, 1); // 1\ndistance(0, 0, 1, 1); // 1.4142135623730951\ndistance(0, 0, 2, 2); // 2.8284271247461903\ndistance(0, 0, 3, 4); // 5\ndistance(0, 0, 4, 3); // 5\ndistance(0, 0, 5, 12); // 13\n```\n\nFormula for calculating the length of a segment:\n```javascript\n((x2 - x1) ** 2 + (y2 - y1) ** 2) ** 0.5\n```",
    "ru": "В этой задаче вам нужно определить длину отрезка по его координатам.\n\nДлина отрезка вычисляется по формуле: `квадратный корень из ((x2 - x1)^2 + (y2 - y1)^2)`, где `x1`, `y1` – координаты первой точки, `x2`, `y2` – координаты второй точки.\n\n`^2` – это возведение в квадрат.\n\nДля возведения в квадрат используйте оператор `** 2`, например: `2 ** 2 = 4`.\n\nДля извлечения квадратного корня используйте оператор `** 0.5`, например: `4 ** 0.5 = 2`.\n\nНапишите функцию `distance`, которая принимает на вход координаты двух точек и возвращает длину отрезка между ними.\n\nПараметры функции:\n* `x1` – координата x первой точки\n* `y1` – координата y первой точки\n* `x2` – координата x второй точки\n* `y2` – координата y второй точки\n\n\nПример запуска:\n```javascript\ndistance(0, 0, 0, 0); // 0\ndistance(0, 0, 1, 0); // 1\ndistance(0, 0, 0, 1); // 1\ndistance(0, 0, 1, 1); // 1.4142135623730951\ndistance(0, 0, 2, 2); // 2.8284271247461903\ndistance(0, 0, 3, 4); // 5\ndistance(0, 0, 4, 3); // 5\ndistance(0, 0, 5, 12); // 13\n```\n\nФормула вычисления длины отрезка:\n```javascript\n((x2 - x1) ** 2 + (y2 - y1) ** 2) ** 0.5\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function distance(x1, y1, x2, y2) {\n  return ((x2 - x1) ** 2 + (y2 - y1) ** 2) ** 0.5;\n}",
  "openTest": "it('Created function distance', () => {\n  expect(distance).to.be.a('function');\n});\n\nit('distance(0, 0, 0, 0) = 0', () => {\n  expect(distance(0, 0, 0, 0)).to.equal(0);\n});\n\nit('distance(0, 0, 1, 0) = 1', () => {\n  expect(distance(0, 0, 1, 0)).to.equal(1);\n});\n\nit('distance(0, 0, 0, 1) = 1', () => {\n  expect(distance(0, 0, 0, 1)).to.equal(1);\n});\n\nit('distance(0, 0, 1, 1) = 1.4142135623730951', () => {\n  expect(distance(0, 0, 1, 1)).to.equal(1.4142135623730951);\n});\n\nit('distance(0, 0, 2, 2) = 2.8284271247461903', () => {\n  expect(distance(0, 0, 2, 2)).to.equal(2.8284271247461903);\n});\n\nit('distance(0, 0, 3, 4) = 5', () => {\n  expect(distance(0, 0, 3, 4)).to.equal(5);\n});\n\nit('distance(0, 0, 4, 3) = 5', () => {\n  expect(distance(0, 0, 4, 3)).to.equal(5);\n});\n\nit('distance(0, 0, 5, 12) = 13', () => {\n  expect(distance(0, 0, 5, 12)).to.equal(13);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}