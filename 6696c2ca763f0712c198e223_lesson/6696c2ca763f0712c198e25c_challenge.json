{
  "_id": "6696c2ca763f0712c198e25c",
  "name": {
    "en": "Among the three numbers there is one even number",
    "ru": "Среди трех чисел есть одно четное"
  },
  "instruction": {
    "en": "Write a function `isEvenFromThree` that takes three numbers `n1`, `n2`, `n3` and returns `true` if there is at least one even number among them, and `false` if not.\n\nAn even number is a number that is divisible by 2 without a remainder.\n\nExamples of triggers:\n``javascript\nisEvenFromThree(1, 2, 3); // true\nisEvenFromThree(1, 3, 5); // false\nisEvenFromThree(2, 4, 6); // true\nisEvenFromThree(1, 3, 7); // false\n```",
    "ru": "Напиши функцию `isEvenFromThree`, которая принимает три числа `n1`, `n2`, `n3` и возвращает `true`, если среди них есть хотя бы одно четное, и `false` - если нет.\n\nЧетное число - это число, которое делится на 2 без остатка.\n\nПримеры запуска:\n```javascript\nisEvenFromThree(1, 2, 3); // true\nisEvenFromThree(1, 3, 5); // false\nisEvenFromThree(2, 4, 6); // true\nisEvenFromThree(1, 3, 7); // false\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function isEvenFromThree(n1, n2, n3) {\n  if (n1 % 2 === 0 || n2 % 2 === 0 || n3 % 2 === 0) {\n    return true;\n  }\n  return false;\n}",
  "openTest": "it('Created function isEvenFromThree', () => {\n  expect(isEvenFromThree).to.be.a('function');\n});\n\nit('isEvenFromThree(1, 2, 3) should return true', () => {\n  expect(isEvenFromThree(1, 2, 3)).to.be.equal(true);\n});\n\nit('isEvenFromThree(1, 3, 5) should return false', () => {\n  expect(isEvenFromThree(1, 3, 5)).to.be.equal(false);\n});\n\nit('isEvenFromThree(2, 4, 6) should return true', () => {\n  expect(isEvenFromThree(2, 4, 6)).to.be.equal(true);\n});\n\nit('isEvenFromThree(1, 3, 7) should return false', () => {\n  expect(isEvenFromThree(1, 3, 7)).to.be.equal(false);\n});\n\nit('isEvenFromThree(1, 2, 4) should return true', () => {\n  expect(isEvenFromThree(1, 2, 4)).to.be.equal(true);\n});\n\nit('isEvenFromThree(1, 2, 3) should return true', () => {\n  expect(isEvenFromThree(1, 2, 3)).to.be.equal(true);\n});\n\nit('isEvenFromThree(1, 3, 5) should return false', () => {\n  expect(isEvenFromThree(1, 3, 5)).to.be.equal(false);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}