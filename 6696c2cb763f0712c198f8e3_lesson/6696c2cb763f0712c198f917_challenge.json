{
  "_id": "6696c2cb763f0712c198f917",
  "name": {
    "en": "/*",
    "ru": "Проверка на наличие отрицательных чисел"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `hasNegativeNumbers`, которая принимает массив чисел и возвращает `true`, если в массиве есть хотя бы одно отрицательное число, и `false` в противном случае.\n\n\nПримеры запуска функции:\n```javascript\nhasNegativeNumbers([1, 2, 3, 4, 5]); // false\nhasNegativeNumbers([0, 1, 2, 3, 4]); // false\nhasNegativeNumbers([1, 2, 3, -4, 5]); // true\nhasNegativeNumbers([-1, -2, -3, -4, -5]); // true\n```"
  },
  "initialSolution": "function hasNegativeNumbers(){\n\n}",
  "completedSolution": "function hasNegativeNumbers(arr) {\n  return arr.some(n => n < 0);\n}",
  "openTest": "it('Created function hasNegativeNumbers', () => {\n  expect(hasNegativeNumbers).to.be.a('function');\n});\n\nit(\"Function hasNegativeNumbers should include some method\", () => {\n  const result = hasNegativeNumbers.toString();\n  expect(result).to.include('.some(');\n});\n\nit('hasNegativeNumbers([1, 2, 3, -4, 5]) should return true', function() {\n  expect(hasNegativeNumbers([1, 2, 3, -4, 5])).to.equal(true);\n});\n\nit('hasNegativeNumbers([1, 2, 3, 4, 5]) should return false', function() {\n  expect(hasNegativeNumbers([1, 2, 3, 4, 5])).to.equal(false);\n});\n\nit('hasNegativeNumbers([-1, -2, -3, -4, -5]) should return true', function() {\n  expect(hasNegativeNumbers([-1, -2, -3, -4, -5])).to.equal(true);\n});\n\nit('hasNegativeNumbers([0, 1, 2, 3, 4]) should return false', function() {\n  expect(hasNegativeNumbers([0, 1, 2, 3, 4])).to.equal(false);\n});\n\nit('hasNegativeNumbers([10, 20, 30, 40, 50]) should return false', function() {\n  expect(hasNegativeNumbers([10, 20, 30, 40, 50])).to.equal(false);\n});\n\nit('hasNegativeNumbers([-10, 20, -30, 40, -50]) should return true', function() {\n  expect(hasNegativeNumbers([-10, 20, -30, 40, -50])).to.equal(true);\n});\n\nit('hasNegativeNumbers([0]) should return false', function() {\n  expect(hasNegativeNumbers([0])).to.equal(false);\n});\n\nit('hasNegativeNumbers([-1]) should return true', function() {\n  expect(hasNegativeNumbers([-1])).to.equal(true);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}