{
  "_id": "6696c2cb763f0712c198f91a",
  "name": {
    "en": "/*",
    "ru": "Проверка, что хотя бы один объект содержит указанное значение в любом из своих свойств"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `hasObjectWithValue`, которая принимает массив объектов и значение.\n\nФункция должна возвращать `true`, если в массиве есть хотя бы один объект, который содержит указанное значение в любом из своих свойств, и `false` в противном случае.\n\n\nПримеры запуска функции:\n```javascript\nhasObjectWithValue([{a: 1, b: 2}, {c: 3, d: 4}, {e: 5}], 3); // true\nhasObjectWithValue([{a: 1, b: 2}, {c: 3, d: 4}, {e: 5}], 6); // false\nhasObjectWithValue([{name: 'Alice', age: 25}, {name: 'Bob', age: 30}], 'Bob'); // true\nhasObjectWithValue([{name: 'Alice', age: 25}, {name: 'Bob', age: 30}], 'Charlie'); // false\n```"
  },
  "initialSolution": "function hasObjectWithValue(){\n\n}",
  "completedSolution": "function hasObjectWithValue(arr, value) {\n  return arr.some(obj => Object.values(obj).includes(value));\n}",
  "openTest": "it('Created function hasObjectWithValue', () => {\n  expect(hasObjectWithValue).to.be.a('function');\n});\n\nit('hasObjectWithValue([{a: 1, b: 2}, {c: 3, d: 4}, {e: 5}], 3) should return true', function() {\n  expect(hasObjectWithValue([{a: 1, b: 2}, {c: 3, d: 4}, {e: 5}], 3)).to.equal(true);\n});\n\nit('hasObjectWithValue([{a: 1, b: 2}, {c: 3, d: 4}, {e: 5}], 6) should return false', function() {\n  expect(hasObjectWithValue([{a: 1, b: 2}, {c: 3, d: 4}, {e: 5}], 6)).to.equal(false);\n});\n\nit('hasObjectWithValue([{name: \"Alice\", age: 25}, {name: \"Bob\", age: 30}], \"Bob\") should return true', function() {\n  expect(hasObjectWithValue([{name: \"Alice\", age: 25}, {name: \"Bob\", age: 30}], \"Bob\")).to.equal(true);\n});\n\nit('hasObjectWithValue([{name: \"Alice\", age: 25}, {name: \"Bob\", age: 30}], \"Charlie\") should return false', function() {\n  expect(hasObjectWithValue([{name: \"Alice\", age: 25}, {name: \"Bob\", age: 30}], \"Charlie\")).to.equal(false);\n});\n\nit('hasObjectWithValue([{x: 10, y: 20}, {z: 30, w: 40}], 20) should return true', function() {\n  expect(hasObjectWithValue([{x: 10, y: 20}, {z: 30, w: 40}], 20)).to.equal(true);\n});\n\nit('hasObjectWithValue([{x: 10, y: 20}, {z: 30, w: 40}], 50) should return false', function() {\n  expect(hasObjectWithValue([{x: 10, y: 20}, {z: 30, w: 40}], 50)).to.equal(false);\n});\n\nit('hasObjectWithValue([{a: \"apple\", b: \"banana\"}, {c: \"cherry\", d: \"date\"}], \"banana\") should return true', function() {\n  expect(hasObjectWithValue([{a: \"apple\", b: \"banana\"}, {c: \"cherry\", d: \"date\"}], \"banana\")).to.equal(true);\n});\n\nit('hasObjectWithValue([{a: \"apple\", b: \"banana\"}, {c: \"cherry\", d: \"date\"}], \"fig\") should return false', function() {\n  expect(hasObjectWithValue([{a: \"apple\", b: \"banana\"}, {c: \"cherry\", d: \"date\"}], \"fig\")).to.equal(false);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}