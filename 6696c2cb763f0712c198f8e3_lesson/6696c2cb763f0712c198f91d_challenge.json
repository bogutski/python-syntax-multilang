{
  "_id": "6696c2cb763f0712c198f91d",
  "name": {
    "en": "/*",
    "ru": "Проверка наличия числа с определенными свойствами после обработки массива"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `hasNumberWithProperties`, которая принимает массив чисел и объект с условиями.\n\nУсловия включают два свойства:\n * `positive` (число, на которое должно делиться положительное значение).\n * `negative` (число, на которое должно делиться отрицательное значение).\n\nФункция должна вернуть `true`, если хотя бы одно число после округления удовлетворяет указанным условиям, и `false` в противном случае.\n\n\nПримеры запуска функции:\n```javascript\nhasNumberWithProperties([1.4, 2.6, -3.7, -5.8], {positive: 2, negative: 3}); // true\nhasNumberWithProperties([-7.2, 14.5, 21.7, -28.6], {positive: 7, negative: 5}); // false\nhasNumberWithProperties([5.35, -10.5, 15.77, -20.1], {positive: 5, negative: 4}); // true\nhasNumberWithProperties([7.35, -10.5, 15.77, -20.6], {positive: 3, negative: 4}); // false\n```"
  },
  "initialSolution": "function hasNumberWithProperties(){\n\n}",
  "completedSolution": "function hasNumberWithProperties(arr, target) {\n  return arr.some(num => {\n    num = Math.round(num)\n    if(num < 0) return num % target.negative === 0\n    else return num % target.positive === 0\n  });\n}",
  "openTest": "it('Created function hasNumberWithProperties', () => {\n  expect(hasNumberWithProperties).to.be.a('function');\n});\n\nit('hasNumberWithProperties([5.35, -10.5, 15.77, -20.1], {positive: 5, negative: 4}) should return true', function() {\n  expect(hasNumberWithProperties([5.35, -10.5, 15.77, -20.1], {positive: 5, negative: 4})).to.equal(true);\n});\n\nit('hasNumberWithProperties([5.35, -10.5, 15.77, -20.1], {positive: 3, negative: 4}) should return true', function() {\n  expect(hasNumberWithProperties([5.35, -10.5, 15.77, -20.1], {positive: 3, negative: 4})).to.equal(true);\n});\n\nit('hasNumberWithProperties([1.4, 2.6, -3.7, -4.8], {positive: 2, negative: 3}) should return false', function() {\n  expect(hasNumberWithProperties([1.4, 2.6, -3.7, -4.8], {positive: 2, negative: 3})).to.equal(false);\n});\n\nit('hasNumberWithProperties([-7.2, 14.5, 21.3, -28.6], {positive: 7, negative: 5}) should return true', function() {\n  expect(hasNumberWithProperties([-7.2, 14.5, 21.3, -28.6], {positive: 7, negative: 5})).to.equal(true);\n});\n\nit('hasNumberWithProperties([0.5, -0.5, 0.5, -0.5], {positive: 1, negative: 1}) should return true', function() {\n  expect(hasNumberWithProperties([0.5, -0.5, 0.5, -0.5], {positive: 1, negative: 1})).to.equal(true);\n});\n\nit('hasNumberWithProperties([0.4, -0.4, 0.4, -0.4], {positive: 1, negative: 1}) should return true', function() {\n  expect(hasNumberWithProperties([0.4, -0.4, 0.4, -0.4], {positive: 1, negative: 1})).to.equal(true);\n});\n\nit('hasNumberWithProperties([25.3, 50.6, -75.8], {positive: 25, negative: 50}) should return true', function() {\n  expect(hasNumberWithProperties([25.3, 50.6, -75.8], {positive: 25, negative: 50})).to.equal(true);\n});\n\nit('hasNumberWithProperties([1.2, 2.3, 3.4, 4.5, 5.6], {positive: 5, negative: 5}) should return true', function() {\n  expect(hasNumberWithProperties([1.2, 2.3, 3.4, 4.5, 5.6], {positive: 5, negative: 5})).to.equal(true);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}