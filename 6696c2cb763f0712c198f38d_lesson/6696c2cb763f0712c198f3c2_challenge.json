{
  "_id": "6696c2cb763f0712c198f3c2",
  "name": {
    "en": "/*",
    "ru": "Удаление и возврат первого элемента"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `removeAndReturnFirst`, которая принимает массив и возвращает первый элемент этого массива, одновременно удаляя его из массива.\n\nЕсли массив изначально пуст, функция должна возвращать undefined.\n\nДля выполнения задачи используйте метод `shift()`.\n\n\nПример запуска функции:\n```javascript\nremoveAndReturnFirst(['a', 'b', 'c']); // Должен вернуть 'а', массив станет ['b', 'c']\nremoveAndReturnFirst([1, 2, 3]); // Должен вернуть 1, массив станет [2, 3]\nremoveAndReturnFirst([]); // Должен вернуть undefined, массив остается []\n```"
  },
  "initialSolution": "function removeAndReturnFirst(){\n\n}",
  "completedSolution": "function removeAndReturnFirst(arr) {\n  return arr.shift();\n}",
  "openTest": "it('Created function removeAndReturnFirst', () => {\n  expect(removeAndReturnFirst).to.be.a('function');\n});\n\nit('Function removeAndReturnFirst should include method shift()', () => {\n  const res = removeAndReturnFirst.toString()\n  expect(res).to.include('.shift()')\n});\n\nit(\"removeAndReturnFirst([1, 2, 3]) should return 1\", () => {\n  expect(removeAndReturnFirst([1, 2, 3])).to.equal(1);\n});\n\nit(\"removeAndReturnFirst(['a', 'b', 'c']) should return 'a'\", () => {\n  expect(removeAndReturnFirst(['a', 'b', 'c'])).to.equal('a');\n});\n\nit(\"removeAndReturnFirst([]) should return undefined\", () => {\n  expect(removeAndReturnFirst([])).to.equal(undefined);\n});\n\nit(\"removeAndReturnFirst([true, false, true]) should return true\", () => {\n  expect(removeAndReturnFirst([true, false, true])).to.equal(true);\n});\n\nit(\"removeAndReturnFirst(['single']) should return 'single'\", () => {\n  expect(removeAndReturnFirst(['single'])).to.equal('single');\n});\n\nit(\"should modify the original array by removing the first element\", () => {\n  let originalArray = [1, 2, 3];\n  removeAndReturnFirst(originalArray);\n  expect(originalArray).to.deep.equal([2, 3]);\n});\n\nit(\"removeAndReturnFirst([[1, 2], [3, 4], [5, 6]]) should return [1, 2]\", () => {\n  expect(removeAndReturnFirst([[1, 2], [3, 4], [5, 6]])).to.deep.equal([1, 2]);\n});\n\nit(\"removeAndReturnFirst(['long', 'string', 'array']) should return 'long'\", () => {\n  expect(removeAndReturnFirst(['long', 'string', 'array'])).to.equal('long');\n});\n\nit(\"removeAndReturnFirst([undefined, null, '']) should return undefined\", () => {\n  expect(removeAndReturnFirst([undefined, null, ''])).to.equal(undefined);\n});\n\nit(\"removeAndReturnFirst([-1, 0, 1, 2]) should return -1\", () => {\n  expect(removeAndReturnFirst([-1, 0, 1, 2])).to.equal(-1);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}