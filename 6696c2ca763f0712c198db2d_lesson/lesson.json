{
  "_id": "6696c2ca763f0712c198db2d",
  "video": {
    "ru": "https://youtu.be/Qyfs_FlGo_4",
    "en": "https://youtu.be/Qyfs_FlGo_4",
    "es": ""
  },
  "content": {
    "ru": "Переменная – это ячейка памяти, в которой хранятся данные.\n\nПеременная похожа на коробку с ярлыком. В коробке хранятся данные. На ярлыке написано, что хранится в коробке.\n\nУ переменной всегда есть имя. С его помощью мы обращаемся к этой переменной.\n\nПримеры того, что можно хранить в переменных:\n\n- имена\n- числа\n- даты\n- адреса\n- ценники\n- уникальные идентификаторы (id)\n- и много чего другого, что можно представить в виде данных\n\n## Способы создания переменной\n\nЧтобы переменную использовать, её сначала нужно создать.\n\nВ современном JavaScript используют два способа создания переменных: `const` и `let`.\n\n#### Ключевое слово `const`. После создания значение переменной изменить нельзя\n\n`const` означает – `константа`.\nЗначение не меняется после создания и присвоения значения. Только для чтения.\n\nИспользуется для хранения значений, которые не будут меняться в процессе выполнения программы.\n\nЗначение переменной нужно установить при создании.\n\n```javascript\nconst name = 'Alice'; // создана переменная 'name', со значением 'Alice'\nconsole.log(name); // в консоль выведено 'Alice'\n\nconst age = 45; // создана переменная 'возраст', присвоено значение 45\nconsole.log(age); // в консоль выведено 45\n```\n\nПри использовании `const` нельзя создать переменную без значения.\n\n```javascript\nconst name; // Так делать нельзя. Ошибка: Missing initializer in const declaration\n```\n\nЕсли попытаться изменить значение переменной, будет ошибка.\n\n```javascript\nconst name = 'Alice';\nname = 'Bob'; // Так делать нельзя. Ошибка: Assignment to constant variable.\n```\n\nЕсли вы не планируете изменять значение переменной, используйте `const`.\n\n#### Ключевое слово `let`. Значение переменной можно изменить\n\nКлючевое слово `let` – для переменных, у которых может измениться значение.\n\n```javascript\nlet name = 'Alice';\nconsole.log(name); // в консоль выведено 'Alice'\n\nname = 'Bob'; // Переменной 'name' присвоено новое значение 'Bob'\nconsole.log(name); // в консоль выведено 'Bob'\n```\n\nКлючевое слово `let` можно использовать для создания переменной без значения.\n\n```javascript\nlet name; // создана переменная 'name', без значения\nconsole.log(name); // в консоль выведено 'undefined'\n\nname = 'Alice'; // присвоено значение 'Alice'\nconsole.log(name); // в консоль выведено 'Alice'\n```\n\nЕсли вы планируете изменять значение переменной, используйте `let`.\n\n### Устаревший способ создания переменной – ключевое слово `var`\n\nЕсть устаревший способ создания переменных – `var`.\n\nОн не рекомендуется к использованию, поскольку он не обладает некоторыми свойствами, которые есть у `const` и `let`.\n\n### Переменная без ключевого слова\n\nЕсли вы не используете ключевое слово `const`, `let` или `var` при создании переменной, то она будет создана как глобальная переменная.\n\n```javascript\nname = 'Alice';\nconsole.log(name); // в консоль выведено 'Alice'\n```\n\nЭто не рекомендуется к использованию, поскольку глобальные переменные могут быть доступны в любой части кода, что может привести к ошибкам.\n\nИспользуйте только ключевые слова `const` или `let` для создания переменных.\n\n## Оператор присваивания\n\nВ переменную можно поместить значение с помощью оператора присваивания `=`.\n\nФормат команды:\n\n```\nlet <имя переменной> = значение;\n```\n\nили\n\n```\nconst <имя переменной> = значение;\n```\n\n![welcome](https://course-js-syntax.s3-us-west-1.amazonaws.com/sozdaem-peremennuyu.jpg)\n\nПри выполнении этой команды вычисляется значение, и затем это значение присваивается переменной.\n\nНапример:\n\n```\nlet a = 1; // переменной a присвоено значение 1\nlet b = 3.25;  // переменной b присвоено значение 3.25\nconst user = 'Alice'; // переменной user присвоено значение 'Alice'\nlet age = 25; // переменной age присвоено значение 25\nconst isAdult = true; // переменной isAdult присвоено значение true\nlet line = ''; // переменной line присвоено значение пустой строки\nlet numberOfCertificates = null; // переменной numberOfCertificates присвоено значение null\nlet temperature = -25; // переменной temperature присвоено значение отрицательного числа -25\n```\n\nПеременную можно создать, не присваивая ей значение.\n\nНапример:\n\n```\nlet telNumber;\nlet a;\nlet b;\nlet user;\nlet age;\nlet isAdult;\nlet line;\nlet numberOfCertificates;\n\n```\n\nДля вывода значения переменной в консоль используется команда `console.log();`.\n\nНапример:\n\n```\nlet count = 34;     // переменной count присвоено значение 34\nconsole.log(count); // в консоль будет выведено 34\n\nlet a = 1;          // переменной a присвоено значение 1\nconsole.log(a);     // в консоль будет выведено 1\n\nlet b = a + 3.25;    // переменной b присвоено значение a + 3.25\nconsole.log(b);     // в консоль будет выведено 4.25\n\nlet user = 'Alice'; // переменной user присвоено значение 'Alice'\nconsole.log(user);  // в консоль будет выведено \"Alice\"\n\nlet isAdult = true;   // переменной isAdult присвоено значение true\nconsole.log(isAdult); //в консоль будет выведено true\n```\n\nПеременные, созданные с помощью ключевого слова `let`, можно переопределить, т.е. присвоить переменной новое значение. При присваивании переменной нового значения ключевое слово `let` использовать не надо.\n\nНапример:\n\n```\nlet num = 5;                   // переменной num присвоено значение 5\nconsole.log(num);              // в консоль будет выведено 5\nnum = num + 4;                 // значение переменной num увеличено на 4\nconsole.log(num);              // в консоль будет выведено 9\n\nlet str = 'Have a nice day!';  // переменной str присвоено значение 'Have a nice day!'\nstr = 'Have a great day!';     // значение переменной str изменено\nconsole.log(str);              // в консоль будет выведено \"Have a great day!\"\n\nlet areTesters = true;         // переменной areTesters присвоено значение true\nareTesters = false;            // значение переменной areTesters изменено\nconsole.log(areTesters);       // в консоль будет выведено false\n\nlet multi = 20;                // переменной multi присвоено значение 20\nmulti = multi * 5;             // значение переменной multi увеличено в пять раз\nconsole.log(multi);            // в консоль будет выведено 100\n```\n",
    "en": "A variable is a memory cell in which data is stored.\n\nThe variable looks like a box with a label. The box holds the data. The label says what is stored in the box.\n\nA variable always has a name. We use it to refer to this variable.\n\nExamples of what can be stored in variables:\n\n- names\n- numbers\n- dates\n- addresses\n- price tags\n- unique identifiers (id)\n- and many other things that can be represented as data\n\n## Ways to create a variable\n\nTo use a variable, it must first be created.\n\nModern JavaScript uses two ways to create variables: `const` and `let`.\n\n#### The keyword is `const`. Once created, the value of the variable cannot be changed\n\n`const` means `constant`\nThe value does not change after creating and assigning a value. It is read-only.\n\nIt is used to store values that will not change during program execution.\n\nThe value of the variable must be set at creation.\n\n```javascript\nconst name = 'Alice'; // the 'name' variable is created, with the value 'Alice'\nconsole.log(name); // the console displays 'Alice'\n\nconst age = 45; // the 'age' variable was created and assigned value 45\nconsole.log(age); // console outputted 45\n```\n\nWhen using `const` it is not possible to create a variable without a value.\n\n```javascript\nconst name; // You can't do that. Error: Missing initializer in const declaration\n```\n\nWe recommend that you read\n\n```javascript\nconst name = 'Alice';\nname = 'Bob'; // You can't do that. Error: Assignment to constant variable.\n```\n\nIf you do not plan to change the value of a variable, use `const`.\n\n#### The keyword is `let`. The value of the variable can be changed\n\nThe keyword `let` is for variables that can change their value.\n\n```javascript\nlet name = 'Alice';\nconsole.log(name); // the console displays 'Alice'\n\nname = 'Bob'; // the 'name' variable is now set to 'Bob'.\nconsole.log(name); // the console displays 'Bob'\n```\n\nThe `let` keyword can be used to create a variable with no value.\n\n```javascript\nlet name; // the 'name' variable is created, no value\nconsole.log(name); // the console displays 'undefined'\n\nname = 'Alice'; // value 'Alice' was output\nconsole.log(name); // the console displays 'Alice'\n```\n\nIf you plan to change the value of a variable, use `let`.\n\n### The obsolete way to create a variable is with the `var` keyword\n\nThere is an obsolete way to create variables - `var`.\n\nIt is not recommended for use because it does not have some of the properties that `const` and `let` have.\n\n### Variable without a keyword\n\nIf you do not use the `const`, `let` or `var` keyword when creating a variable, it will be created as a global variable.\n\n```javascript\nname = 'Alice';\nconsole.log(name); // в консоль выведено 'Alice'\n```\n\nThis is not recommended because global variables can be accessed in any part of the code, which can lead to errors.\n\nUse only the `const` or `let` keywords to create variables.\n\n## Assignment operator\n\nYou can place a value in a variable using the assignment operator `=`.\n\nCommand format:\n\n```\nlet <variable name> = value;\n```\n\nor\n\n```\nconst <variable name> = value;\n```\n\n![welcome](https://course-js-syntax.s3-us-west-1.amazonaws.com/sozdaem-peremennuyu.jpg)\n\nThis command calculates a value and then assigns that value to a variable.\n\nFor example:\n\n```\nlet a = 1; // the a variable is assigned value 1\nlet b = 3.25; // the value of 3.25 is assigned to the b variable\nconst user = 'Alice'; // value 'Alice' is assigned to the user variable\nlet age = 25; // the variable age is assigned the value 25\nconst isAdult = true; // the isAdult variable is assigned the value true\nlet line = ''; // the value of an empty string is assigned to the variable line\nlet numberOfCertificates = null; // the numberOfCertificates variable has been assigned null value\nlet temperature = -25; // the variable temperature is assigned the value of -25\n```\n\nA variable can be created without assigning a value to it.\n\nFor example:\n\n```\nlet telNumber;\nlet a;\nlet b;\nlet user;\nlet age;\nlet isAdult;\nlet line;\nlet numberOfCertificates;\n\n```\n\nThe command `console.log();` is used to output the variable value to the console.\n\nFor example:\n\n```\nlet count = 34; // the variable count is assigned the value 34\nconsole.log(count); // the console will display 34\n\nlet a = 1; // the a variable is assigned the value 1\nconsole.log(a); // the console will print 1\n\nlet b = a + 3.25; // the a value of a + 3.25 is assigned to the b variable\nconsole.log(b); // the console will print 4.25\n\nlet user = 'Alice'; // the 'Alice' value is assigned to the user variable\nconsole.log(user); // \"Alice\" will be output to the console\n\nlet isAdult = true; // the isAdult variable is assigned the value true\nconsole.log(isAdult); // the console will print \"true\n```\n\nVariables created with the `let` keyword can be overridden, i.e. a new value can be assigned to the variable. When assigning a new value to a variable, the `let` keyword need not be used.\n\nFor example:\n\n```\nlet num = 5; // the num variable is assigned the value 5\nconsole.log(num); // 5 will be displayed in the console\nnum = num + 4; // the num variable is incremented by 4\nconsole.log(num); // console will print 9\n\nlet str = 'Have a nice day!'; // value 'Have a nice day!\nstr = 'Have a great day!'; // the str variable value was changed\nconsole.log(str); // the console will print \"Have a great day!\"\n\nlet areTesters = true; // the areTesters variable is assigned the value true\nareTesters = false; // the value of the areTesters variable has been changed\nconsole.log(areTesters); // false will be displayed in the console\n\nlet multi = 20; // the value of 20 is assigned to the multi variable\nmulti = multi * 5; // the multi variable has been incremented by a factor of five\nconsole.log(multi); // console will print 100\n```\n",
    "es": "\n"
  }
}