{
  "name": "The sum of the powers of a number",
  "instruction": "The function `powerOfNum` takes two parameters: the number `num` and the degree `power`.\n\nYou need to find the sum of all degrees of the number `num` from `num ** power` to `num ** num`.\n\nFor example, if you pass a number 2 and a power of 4 into the `powerOfNum` function, the function should get the sum of 28, since:\n * 2 to the power of 4 equals 16,\n * 2 to the power of 3 equals 8,\n * 2 to the power of 2 equals 4.\n * The sum of these numbers is 28.\n\nIf `power` is less than `num`, the function should return a string like: `Sum is \"num ** power\"`.\n\nThe function must return a string of the form: `Sum is \"sum\"`.\n\nTo do this, create a loop from `power` to `num` inclusive and sum up the results of the power expansion sum = sum + num ** i.\n\nFix the code to make it work correctly.\n\nExamples of running the function:\n```javascript\npowerOfNum(2, 3) // 'Sum of 2 to the power of 3 is 12' (2 ** 3 + 2 ** 2 = 12)\n\npowerOfNum(2, 4) // 'Sum of 2 to the power of 4 is 28' (2 ** 4 + 2 ** 3 + 2 ** 2 = 28)\n\npowerOfNum(4, 1) // 'Sum of 4 to the power of 1 is 4' (4 ** 1 = 4)\n\n```"
}