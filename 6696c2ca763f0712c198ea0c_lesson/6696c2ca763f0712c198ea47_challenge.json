{
  "_id": "6696c2ca763f0712c198ea47",
  "name": {
    "en": "Translate a string consisting of numbers into an array",
    "ru": "Перевести строку, состоящей из цифр в массив"
  },
  "instruction": {
    "en": "The `StrToArray` function takes a string consisting of numbers. The string does not contain spaces.\n\nThe function should return an array consisting of the digits of that string written in reverse order.\n\nTo convert numbers from `string` type to `number` type, use unary plus `+`.\n\nExamples of running the function:\n```javascript\nstrToArray(\"123\") // [3, 2, 1]\nstrToArray(\"1234\") // [4, 3, 2, 1]\n```",
    "ru": "Функция `strToArray`  принимает строку состоящей из цифр. Строка не содержит пробелов.\n\nФункция должна возвращать массив, состоящий из цифр этой строки, записанных в обратном порядке.\n\nДля перевода чисел из типа `string` в тип `number` используйте унарный плюс `+`.\n\nПримеры запуска функции:\n```javascript\nstrToArray(\"123\") // [3, 2, 1]\nstrToArray(\"1234\") // [4, 3, 2, 1]\n```"
  },
  "initialSolution": "function",
  "completedSolution": "function strToArray(str) {\n  let arr = [];\n  for (let i = str.length - 1; i >= 0; i--) {\n    arr.push(+str[i]);\n  }\n  return arr;\n}",
  "openTest": "it('Created function strToArray', () => {\n  expect(strToArray).to.be.a('function');\n});\n\nit('strToArray(\"123\") should return [3, 2, 1]', () => {\n  expect(strToArray(\"123\")).to.deep.equal([3, 2, 1]);\n});\n\nit('strToArray(\"1234\") should return [4, 3, 2, 1]', () => {\n  expect(strToArray(\"1234\")).to.deep.equal([4, 3, 2, 1]);\n});\n\nit('strToArray(\"555\") should return [5, 5, 5]', () => {\n  expect(strToArray(\"555\")).to.deep.equal([5, 5, 5]);\n});\n\nit('strToArray(\"123456789\") should return [9, 8, 7, 6, 5, 4, 3, 2, 1]', () => {\n  expect(strToArray(\"123456789\")).to.deep.equal([9, 8, 7, 6, 5, 4, 3, 2, 1]);\n});\n\nit('strToArray(\"\") should return []', () => {\n    expect(strToArray(\"\")).to.deep.equal([]);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}