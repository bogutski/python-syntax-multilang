{
  "_id": "6696c2ca763f0712c198ea41",
  "name": {
    "en": "An array of odd numbers from higher to lower",
    "ru": "Массив из нечетных чисел от большего к меньшему"
  },
  "instruction": {
    "en": "The `arrayOdd` function takes two numbers `num1` and `num2`.\n\nThe function should return an array of all odd numbers between `num1` and `num2` inclusive in descending order.\n\nInitially, you should check which number is larger and which is smaller and apply the `for` loop to try the numbers in the desired range.\n\nCorrect the errors in the code to make it work correctly.\n\nAn example of running a function:\n```javascript\narrayOdd(1, 4) // [3, 1]\narrayOdd(7, 1) // [7, 5, 3, 1]\n```",
    "ru": "Функция `arrayOdd` принимает два числа `num1` и `num2`.\n\nФункция должна возвращать массив всех нечетных чисел между `num1` и `num2` включительно в порядке убывания.\n\nПервоначально необходимо проверить, какое из чисел больше, а какое меньше и применить цикл `for` для перебора чисел в нужном диапазоне.\n\nИсправьте ошибки в коде, чтобы он работал правильно.\n\nПример запуска функции:\n```javascript\narrayOdd(1, 4) // [3, 1]\narrayOdd(7, 1) // [7, 5, 3, 1]\n```"
  },
  "initialSolution": "function arrayOdd(num1; num2){\n  let arr=[];\n  if(num1 > num2){\n    for(let i=num2, i<=num1; i++){\n      if(i%2 !== 0){arr.push(i)}\n    }\n  } else {\n    for(let i=num2, i>=num1, i--){\n      if(i%2 === 0){arr.push(i)}\n  }\n  return arr.push(i)\n}",
  "completedSolution": "function arrayOdd(num1, num2) {\n  let arr = []\n  if (num1 > num2) {\n    for (let i = num1; i >= num2; i--) {\n      if (i % 2 !== 0) {\n        arr.push(i)\n      }\n    }\n  } else {\n    for (let i = num2; i >= num1; i--) {\n      if (i % 2 !== 0) {\n        arr.push(i)\n      }\n    }\n  }\n  return arr\n}",
  "openTest": "it('Created function arrayOdd', () => {\n  expect(arrayOdd).to.be.a('function');\n});\n\nit('arrayOdd(1, 4) should return [3, 1]', () => {\n  expect(arrayOdd(1, 4)).to.eql([3, 1]);\n});\n\nit('arrayOdd(7, 1) should return [7, 5, 3, 1]', () => {\n  expect(arrayOdd(7, 1)).to.eql([7, 5, 3, 1]);\n});\n\nit('arrayOdd(1, 1) should return [1]', () => {\n  expect(arrayOdd(1, 1)).to.eql([1]);\n});\n\nit('arrayOdd(1, 2) should return [1]', () => {\n  expect(arrayOdd(1, 2)).to.eql([1]);\n});\n\nit('arrayOdd(-5, 1) should return [1, -1, -3, -5]', () => {\n  expect(arrayOdd(-5, 1)).to.eql([1, -1, -3, -5])\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}