{
  "_id": "6696c2ca763f0712c198ea44",
  "name": {
    "en": "Array of number squares",
    "ru": "Массив квадратов чисел"
  },
  "instruction": {
    "en": "The `arrayOfSquares` function takes one parameter `n1` - a number.\n\nThe function must return an array consisting of the squares of numbers from `n1` to `1` inclusive in descending order.\n\nIf `n1` is less than `1`, the function should return an empty array.\n\nExamples of running the function:\n```javascript\narrayOfSquares(5) // [ 25, 16, 9, 4, 1 ]\narrayOfSquares(-5) // []\n```",
    "ru": "Функция `arrayOfSquares` принимает один параметр `n1` - число.\n\nФункция должна возвращать массив, состоящий из квадратов чисел от `n1` до `1` включительно в порядке убывания.\n\nЕсли `n1` меньше `1`, то функция должна возвращать пустой массив.\n\nПримеры запуска функции:\n```javascript\narrayOfSquares(5) // [ 25, 16, 9, 4, 1 ]\narrayOfSquares(-5) // []\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function arrayOfSquares(n1) {\n  let arr = [];\n  for (let i = n1; i >= 1; i--) {\n    arr.push(i ** 2);\n  }\n  return arr;\n}",
  "openTest": "it('Created function arrayOfSquares', () => {\n  expect(arrayOfSquares).to.be.a('function');\n});\n\nit('arrayOfSquares(5) should return [ 25, 16, 9, 4, 1 ]', () => {\n  expect(arrayOfSquares(5)).to.deep.equal([25, 16, 9, 4, 1]);\n});\n\nit('arrayOfSquares(10) should return [ 100, 81, 64, 49, 36, 25, 16, 9, 4, 1 ]', () => {\n  expect(arrayOfSquares(10)).to.deep.equal([100, 81, 64, 49, 36, 25, 16, 9, 4, 1]);\n});\n\nit('arrayOfSquares(1) should return [ 1 ]', () => {\n  expect(arrayOfSquares(1)).to.deep.equal([1]);\n});\n\nit('arrayOfSquares(0) should return []', () => {\n  expect(arrayOfSquares(0)).to.deep.equal([]);\n});\n\nit('arrayOfSquares(-5) should return []', () => {\n  expect(arrayOfSquares(-5)).to.deep.equal([]);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}