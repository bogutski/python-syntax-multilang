{
  "_id": "6696c2cb763f0712c198f12a",
  "name": {
    "en": "Remove duplicate by id",
    "ru": "Удалить дубликат по id"
  },
  "instruction": {
    "en": "The `onlyUnique` function takes an array of objects.\n\nThe objects in the array have the following format:\n*id,\n*title,\n*class,\n\nIf the objects have the same `id`, they are considered the same even if the other properties of the object are different, and the duplicate needs to be removed.\n\nThe first occurrence of the object (id) is considered unique.\n\nThe function should return an array of objects without duplicates.\n\nExamples of function execution:\n```javascript\nonlyUnique([{id: 2342, title: 'Sherlock Holmes', class: 'detective'}, {id: 2342, title: 'The lost Word', class: 'fantastic'}, {id: 3453, title: 'The lost Word', class: 'fantastic'}])\n//[{id: 2342, title: 'Sherlock Holmes', class: 'detective'}, {id: 3453, title: 'The lost Word', class: 'fantastic'}]\n```",
    "ru": "Функция `onlyUnique` принимает массив объектов.\n\nОбъекты в массиве имеют вид:\n*id,\n*title,\n*class,\n\nЕсли объекты имеют одинаковый `id`, то они считаются одинаковыми даже если остальные свойства объекта отличаются и дубликат необходимо удалить.\n\nПервое вхождение объекта (id) считается уникальным.\n\nФункция должна вернуть массив объектов, в котором не будет дубликатов.\n\nПримеры запуска функции:\n```javascript\nonlyUnique([{id: 2342, title: 'Sherlock Holmes', class: 'detective'}, {id: 2342, title: 'The lost Word', class: 'fantastic'}, {id: 3453, title: 'The lost Word', class: 'fantastic'}])\n//[{id: 2342, title: 'Sherlock Holmes', class: 'detective'}, {id: 3453, title: 'The lost Word', class: 'fantastic'}]\n```"
  },
  "initialSolution": "function",
  "completedSolution": "function onlyUnique(arr) {\n  for(let i = 0; i < arr.length; i++){\n    for(let j = i + 1; j < arr.length; j++){\n      if(arr[i].id === arr[j].id){\n        arr.splice(j, 1);\n        j--;\n      }\n    }\n  }\n  return arr\n}",
  "openTest": "it('Created function onlyUnique', () => {\n  expect(onlyUnique).to.be.a('function');\n});\n\nit(\"onlyUnique([{id: 2342, title: 'Sherlock Holmes', class: 'detective'}, {id: 2342, title: 'The lost Word', class: 'fantastic'}, {id: 3453, title: 'The lost Word', class: 'fantastic'}]) should return [{id: 2342, title: 'Sherlock Holmes', class: 'detective'}, {id: 3453, title: 'The lost Word', class: 'fantastic'}]\", () => {\n  expect(onlyUnique([{id: 2342, title: 'Sherlock Holmes', class: 'detective'}, {id: 2342, title: 'The lost Word', class: 'fantastic'}, {id: 3453, title: 'The lost Word', class: 'fantastic'}])).to.deep.equal([{id: 2342, title: 'Sherlock Holmes', class: 'detective'}, {id: 3453, title: 'The lost Word', class: 'fantastic'}]);\n});\n\nit(\"onlyUnique([{id: 2342, title: 'Sherlock Holmes', class: 'detective'}, {id: 4564, title: 'The lost Word', class: 'fantastic'}, {id: 3453, title: 'The lost Word', class: 'fantastic'}, {id: 3453, title: 'The lost Word', class: 'fantastic'}]) should return [{id: 2342, title: 'Sherlock Holmes', class: 'detective'}, {id: 3453, title: 'The lost Word', class: 'fantastic'}]\", () => {\n  expect(onlyUnique([{id:2342, title: 'Sherlock Holmes', class: 'detective'}, {id: 4564, title: 'The lost Word', class: 'fantastic'}, {id: 3453, title: 'The lost Word', class: 'fantastic'}, {id: 3453, title: 'The lost Word', class: 'fantastic'}])).to.deep.equal([{id: 2342, title: 'Sherlock Holmes', class: 'detective'}, {id: 4564, title: 'The lost Word', class: 'fantastic'}, {id: 3453, title: 'The lost Word', class: 'fantastic'}]);\n});\n\nit(\"onlyUnique([]) should return []\", () => {\n  expect(onlyUnique([])).to.deep.equal([]);\n});\n\nit(\"onlyUnique([{id: 2342, title: 'Sherlock Holmes', class: 'detective'}]) should return [{id: 2342, title: 'Sherlock Holmes', class: 'detective'}]\", () => {\n  expect(onlyUnique([{id: 2342, title: 'Sherlock Holmes', class: 'detective'}])).to.deep.equal([{id: 2342, title: 'Sherlock Holmes', class: 'detective'}]);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}