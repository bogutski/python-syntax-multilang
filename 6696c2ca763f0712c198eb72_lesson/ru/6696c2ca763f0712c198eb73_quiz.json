{
  "name": "Проверить, является ли строка палиндромом",
  "questions": {
    "0": {
      "name": "Выберите верное определение что такое палиндром",
      "variants": {
        "0": {
          "name": "Слово или фраза, в которых четное количество букв"
        },
        "1": {
          "name": "Слово или фраза, которые одинаково читаются слева направо и справа налево."
        },
        "2": {
          "name": "Слово или фраза, в которых нечетное количество букв"
        },
        "3": {
          "name": "Слово или фраза, которая в отражении зеркала не меняется"
        }
      }
    },
    "1": {
      "name": "Почему результатом запуска кода ниже будет false?",
      "description": "```javascript\nconst str = 'Level';\nconst isPalindrome = str.split('').reverse().join('') === str;\nconsole.log(isPalindrome);\n```",
      "variants": {
        "0": {
          "name": "Потому что слово 'Level' не является палиндром"
        },
        "1": {
          "name": "Потому что код написан с ошибками"
        },
        "2": {
          "name": "Потому что код чувствителен к регистру, а первая и последняя буквы написаны в разном регистре"
        },
        "3": {
          "name": "Потому что слова палиндромы должны иметь четное количество букв"
        }
      }
    },
    "2": {
      "name": "Что надо написать вместо ???, чтобы результатом запуска кода ниже было true?",
      "description": "```javascript\nconst str = 'Level';\nconst isPalindrome = str.???.split('').reverse().join('') === str.???;\nconsole.log(isPalindrome);\n```",
      "variants": {
        "0": {
          "name": "toUpperCase() в обоих случаях"
        },
        "1": {
          "name": "toLowerCase() в первом случае и toUpperCase() во втором случае"
        },
        "2": {
          "name": "toUpperCase() в первом случае и toLowerCase() во втором случае"
        },
        "3": {
          "name": "toLowerCase() в обоих случаях"
        }
      }
    },
    "3": {
      "name": "Верно ли, что результатом запуска кода ниже будет false?",
      "description": "```javascript\nconst str = '13531';\nconst isPalindrome = str.split('').reverse().join('') === str;\nconsole.log(isPalindrome);\n```",
      "variants": {
        "0": {
          "name": "Нет, строка с числом 13531 является палиндромом"
        },
        "1": {
          "name": "Да, потому что обе части сравнения не приведены к одному регистру"
        },
        "2": {
          "name": "Да, результатом будет false"
        },
        "3": {
          "name": "Да, числа не могут быть палиндромами"
        }
      }
    },
    "4": {
      "name": "Выберите верный результат запуска кода ниже",
      "description": "```javascript\nconst str = '133';\nconst isPalindrome = +str.split('').reverse().join('') === +str;\nconsole.log(isPalindrome);\n```",
      "variants": {
        "0": {
          "name": "false"
        },
        "1": {
          "name": "true"
        },
        "2": {
          "name": "NaN"
        },
        "3": {
          "name": "error"
        }
      }
    },
    "5": {
      "name": "Что надо написать место ???, чтобы результатом запуска кода ниже было true",
      "description": "```javascript\nconst str = ???;\nconst isPalindrome = str.split('').reverse().join('') === str;\nconsole.log(isPalindrome);\n```",
      "variants": {
        "0": {
          "name": "'!?3 3?!'"
        },
        "1": {
          "name": "'did bib'"
        },
        "2": {
          "name": "'1s797s1"
        },
        "3": {
          "name": "'13 K 31'"
        }
      }
    },
    "6": {
      "name": "Какие данные надо передать в параметр функции, чтобы результатом запуска кода ниже было true?",
      "description": "```javascript\nfunction isPalindrome(str){\n  for(let i = 0; i < str.length / 2; i++){\n    if(str[i] !== str[str.length - 1 - i]) return false\n      }\n  return true\n}\n```",
      "variants": {
        "0": {
          "name": "console.log(isPalindrome('Abba'));"
        },
        "1": {
          "name": "console.log(isPalindrome('abba'));"
        },
        "2": {
          "name": "console.log(isPalindrome('AbbA'));"
        },
        "3": {
          "name": "console.log(isPalindrome('aBBa'));"
        }
      }
    },
    "7": {
      "name": "Что надо написать вместо ???, чтобы код не был чувствителен к регистру",
      "description": "```javascript\nfunction isPalindrome(str){\n  str = ???;\n  for(let i = 0; i < str.length / 2; i++){\n    if(str[i] !== str[str.length - 1 - i]) return false\n      }\n  return true\n}\n```",
      "variants": {
        "0": {
          "name": "str.toLowerCase()"
        },
        "1": {
          "name": "str.toUpperCase()"
        },
        "2": {
          "name": "str.split('')"
        },
        "3": {
          "name": "Ничего писать не надо, это лишняя часть кода"
        }
      }
    },
    "8": {
      "name": "Что надо написать вместо ???, чтобы число преобразовать в строку для корректной работы кода?",
      "description": "```javascript\nfunction isPalindrome(num){\n  let str = ???;\n  for(let i = 0; i < str.length / 2; i++){\n    if(str[i] !== str[str.length - 1 - i]) return false\n      };\n  return true\n};\n```",
      "variants": {
        "0": {
          "name": "'num' + ''"
        },
        "1": {
          "name": "toString(num)"
        },
        "2": {
          "name": "num.toString()"
        },
        "3": {
          "name": "num + ''"
        }
      }
    },
    "9": {
      "name": "Что выведется в консоль в результате выполнения кода ниже?",
      "description": "```javascript\nlet str = 'Zerimar Ramirez';\nstr = str.toLowerCase();\nlet isPalindrome = '';\nfor(let i = 0; i < str.length / 2; i++){\n    if(str[i] !== str[str.length - 1 - i]){\n      isPalindrome = false;\n    }else{ \n      isPalindrome = true;\n    };\n};\nconsole.log(isPalindrome);\n```",
      "variants": {
        "0": {
          "name": "true"
        },
        "1": {
          "name": "false"
        },
        "2": {
          "name": "undefined"
        },
        "3": {
          "name": "null"
        }
      }
    }
  }
}