{
  "name": "Check if the string is a palindrome",
  "questions": {
    "0": {
      "name": "Choose the correct definition of what a palindrome is",
      "variants": {
        "0": {
          "name": "A word or phrase with an even number of letters in it"
        },
        "1": {
          "name": "A word or phrase that reads the same from left to right and right to left."
        },
        "2": {
          "name": "A word or phrase with an odd number of letters in it"
        },
        "3": {
          "name": "A word or phrase that, in the reflection of a mirror, does not change"
        }
      }
    },
    "1": {
      "name": "Why would the result of running the code below be false?",
      "description": "```javascript\nconst str = 'Level';\nconst isPalindrome = str.split('').reverse().join('') === str;\nconsole.log(isPalindrome);\n```",
      "variants": {
        "0": {
          "name": "Because the word 'Level' is not a palindrome"
        },
        "1": {
          "name": "Because the code is misspelled"
        },
        "2": {
          "name": "Because the code is case sensitive, and the first and last letters are in different case"
        },
        "3": {
          "name": "Because palindrome words must have an even number of letters"
        }
      }
    },
    "2": {
      "name": "What should I write instead of ??? so that the result of running the code below is true?",
      "description": "```javascript\nconst str = 'Level';\nconst isPalindrome = str.???.split('').reverse().join('') === str.???;\nconsole.log(isPalindrome);\n```",
      "variants": {
        "0": {
          "name": "toUpperCase() in both cases"
        },
        "1": {
          "name": "toLowerCase() in the first case and toUpperCase() in the second case"
        },
        "2": {
          "name": "toUpperCase() in the first case and toLowerCase() in the second case"
        },
        "3": {
          "name": "toLowerCase() in both cases"
        }
      }
    },
    "3": {
      "name": "Is it correct that the result of running the code below will be false?",
      "description": "```javascript\nconst str = '13531';\nconst isPalindrome = str.split('').reverse().join('') === str;\nconsole.log(isPalindrome);\n```",
      "variants": {
        "0": {
          "name": "No, the string with the number 13531 is a palindrome"
        },
        "1": {
          "name": "Yes, because both parts of the comparison are not cast to the same case"
        },
        "2": {
          "name": "Yes, the result will be false"
        },
        "3": {
          "name": "Yes, numbers can't be palindromes"
        }
      }
    },
    "4": {
      "name": "Select the correct result of running the code below",
      "description": "```javascript\nconst str = '133';\nconst isPalindrome = +str.split('').reverse().join('') === +str;\nconsole.log(isPalindrome);\n```",
      "variants": {
        "0": {
          "name": "false"
        },
        "1": {
          "name": "true"
        },
        "2": {
          "name": "NaN"
        },
        "3": {
          "name": "error"
        }
      }
    },
    "5": {
      "name": "What should be written in the ??? place so that the result of running the code below is true",
      "description": "```javascript\nconst str = ???;\nconst isPalindrome = str.split('').reverse().join('') === str;\nconsole.log(isPalindrome);\n```",
      "variants": {
        "0": {
          "name": "'!?3 3?!'"
        },
        "1": {
          "name": "'did bib'"
        },
        "2": {
          "name": "'1s797s1"
        },
        "3": {
          "name": "'13 K 31'"
        }
      }
    },
    "6": {
      "name": "What data should be passed to the function parameter so that the result of running the code below is true?",
      "description": "```javascript\nfunction isPalindrome(str){\n  for(let i = 0; i < str.length / 2; i++){\n    if(str[i] !== str[str.length - 1 - i]) return false\n      }\n  return true\n}\n```",
      "variants": {
        "0": {
          "name": "console.log(isPalindrome('Abba'));"
        },
        "1": {
          "name": "console.log(isPalindrome('abba'));"
        },
        "2": {
          "name": "console.log(isPalindrome('AbbA'));"
        },
        "3": {
          "name": "console.log(isPalindrome('aBBa'));"
        }
      }
    },
    "7": {
      "name": "What should I write instead of ??? to make the code case-insensitive?",
      "description": "```javascript\nfunction isPalindrome(str){\n  str = ???;\n  for(let i = 0; i < str.length / 2; i++){\n    if(str[i] !== str[str.length - 1 - i]) return false\n      }\n  return true\n}\n```",
      "variants": {
        "0": {
          "name": "str.toLowerCase()"
        },
        "1": {
          "name": "str.toUpperCase()"
        },
        "2": {
          "name": "str.split('')"
        },
        "3": {
          "name": "You don't need to write anything, it's an unnecessary piece of code"
        }
      }
    },
    "8": {
      "name": "What should I write instead of ??? to convert a number into a string for the code to work correctly?",
      "description": "```javascript\nfunction isPalindrome(num){\n  let str = ???;\n  for(let i = 0; i < str.length / 2; i++){\n    if(str[i] !== str[str.length - 1 - i]) return false\n      };\n  return true\n};\n```",
      "variants": {
        "0": {
          "name": "'num' + ''"
        },
        "1": {
          "name": "toString(num)"
        },
        "2": {
          "name": "num.toString()"
        },
        "3": {
          "name": "num + ''"
        }
      }
    },
    "9": {
      "name": "What will be output to the console as a result of executing the code below?",
      "description": "```javascript\nlet str = 'Zerimar Ramirez';\nstr = str.toLowerCase();\nlet isPalindrome = '';\nfor(let i = 0; i < str.length / 2; i++){\n    if(str[i] !== str[str.length - 1 - i]){\n      isPalindrome = false;\n    }else{ \n      isPalindrome = true;\n    };\n};\nconsole.log(isPalindrome);\n```",
      "variants": {
        "0": {
          "name": "true"
        },
        "1": {
          "name": "false"
        },
        "2": {
          "name": "undefined"
        },
        "3": {
          "name": "null"
        }
      }
    }
  }
}