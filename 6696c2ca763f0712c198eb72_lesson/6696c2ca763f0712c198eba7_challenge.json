{
  "_id": "6696c2ca763f0712c198eba7",
  "name": {
    "en": "Is a string a palindrome without case",
    "ru": "Является ли строка палиндромом без учета регистра"
  },
  "instruction": {
    "en": "The `isPalindrome` function must accept the string and return `true` if the string is a palindrome and `false` if not.\n\nThe string may contain uppercase and lowercase letters, and must be compared case insensitive.\n\nExamples of running the function:\n\n```javascript\nisPalindrome(\"Eye\") // true\nisPalindrome(\"Hello\") // false\n```",
    "ru": "Функция `isPalindrome` должна принимать строку и возвращать `true`, если строка является палиндромом, и `false`, если нет.\n\nСтрока может содержать заглавные и строчные буквы, необходимо сравнивать без учета регистра.\n\nПримеры запуска функции:\n\n```javascript\nisPalindrome(\"Eye\") // true\nisPalindrome(\"Hello\") // false\n```"
  },
  "initialSolution": "function",
  "completedSolution": "function isPalindrome(str) {\n  str = str.toLowerCase();\n  let newStr = '';\n  for (i = 0; i < str.length; i++) {\n    newStr = str[i] + newStr;\n  }\n  return newStr === str;\n}",
  "openTest": "it('Created function isPalindrome', () => {\n  expect(isPalindrome).to.be.a('function');\n});\n\nit('isPalindrome(\"eye\") should return true', () => {\n  expect(isPalindrome(\"eye\")).to.be.true;\n});\n\nit('isPalindrome(\"Hello\") should return false', () => {\n  expect(isPalindrome(\"Hello\")).to.be.false;\n});\n\nit('isPalindrome(\"Racecar\") should return true', () => {\n  expect(isPalindrome(\"Racecar\")).to.be.true;\n});\n\nit('isPalindrome(\"\") should return true', () => {\n  expect(isPalindrome(\"\")).to.be.true;\n});\n\nit('isPalindrome(\"Palindrome\") should return false', () => {\n  expect(isPalindrome(\"Palindrome\")).to.be.false;\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}