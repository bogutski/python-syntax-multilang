{
  "_id": "6696c2ca763f0712c198ebab",
  "name": {
    "en": "Is an array a palindrome",
    "ru": "Является ли массив палиндромом"
  },
  "instruction": {
    "en": "The `isArrayPalindrome` function takes an array `arr` as a parameter. The array cannot be empty.\n\nThe function must return `true` if the array is a palindrome, and `false` otherwise.\n\nExamples of running the function:\n```javascript\nisArrayPalindrome([1, 2, 3, 2, 1]) // true\nisArrayPalindrome([1, 2, 3, 4, 5]) // false\nisArrayPalindrome([\"m\", \"a\", \"d\", \"a\", \"m\"]) // true\n```",
    "ru": "Функция `isArrayPalindrome` принимает массив `arr` в качестве параметра. Массив не может быть пустым.\n\nФункция должна вернуть `true`, если массив является палиндромом, и `false` в противном случае.\n\nПримеры запуска функции:\n```javascript\nisArrayPalindrome([1, 2, 3, 2, 1]) // true\nisArrayPalindrome([1, 2, 3, 4, 5]) // false\nisArrayPalindrome([\"m\", \"a\", \"d\", \"a\", \"m\"]) // true\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function isArrayPalindrome(arr){\n  for(let i = 0; i < arr.length / 2; i++){\n    if(arr[i] !== arr[arr.length - 1 - i]) return false;\n  }\n  return true;\n}",
  "openTest": "it('Created function isArrayPalindrome', () => {\n  expect(isArrayPalindrome).to.be.a('function');\n});\n\nit('isArrayPalindrome([1, 2, 3, 2, 1]) should return true', () => {\n  expect(isArrayPalindrome([1, 2, 3, 2, 1])).to.be.true;\n});\n\nit('isArrayPalindrome([1, 2, 3, 4, 5]) should return false', () => {\n  expect(isArrayPalindrome([1, 2, 3, 4, 5])).to.be.false;\n});\n\nit('isArrayPalindrome([\"m\", \"a\", \"d\", \"a\", \"m\"]) should return true', () => {\n  expect(isArrayPalindrome([\"m\", \"a\", \"d\", \"a\", \"m\"])).to.be.true;\n});\n\nit('isArrayPalindrome([\"m\", \"a\", \"d\", \"a\", \"m\", \"m\"]) should return false', () => {\n  expect(isArrayPalindrome([\"m\", \"a\", \"d\", \"a\", \"m\", \"m\"])).to.be.false;\n});\n\nit(`isArrayPalindrome([\"r\", \"a\", \"c\", \"e\", \"c\", \"a\", \"r\"]) should return true`, () => {\n  expect(isArrayPalindrome([\"r\", \"a\", \"c\", \"e\", \"c\", \"a\", \"r\"])).to.be.true;\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}