{
  "_id": "6696c2ca763f0712c198e89a",
  "name": {
    "en": "Combining arrays",
    "ru": "Объединение массивов"
  },
  "instruction": {
    "en": "`concat()` is a method that can be used to concatenate (join) two or more arrays.\n\nAn example of concatenation of two arrays:\n```javascript\nconst array1 = [1, 2, 3];\nconst array2 = [4, 5, 6];\nconst arrayJoined = array1.concat(array2); // [1, 2, 3, 4, 5, 6]\n```\n\nAn example of combining three arrays:\n```javascript\nconst array1 = [1, 2, 3];\nconst array2 = [4, 5, 6];\nconst array3 = [7, 8, 9];\nconst arrayJoined = array1.concat(array2, array3); // [1, 2, 3, 4, 5, 6, 7, 8, 9]\n```\n\nThe `concat()` method does not change the original arrays, but returns a new array consisting of elements of the original arrays.\n\nWrite a function `arrayJoiner` which takes four parameters:\n* `array1` - array;\n* `array2` - array;\n* `array3` - array;\n* `array4` - array.\n\nThe function should return a new array made by combining all four arrays in the specified order.\n\nExamples of running the function:\n```javascript\narrayJoiner([1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12]); // [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n```",
    "ru": "`concat()` – метод, с помощью которого можно выполнить конкатенацию (объединение) двух или более массивов.\n\nПример объединения двух массивов:\n```javascript\nconst array1 = [1, 2, 3];\nconst array2 = [4, 5, 6];\nconst arrayJoined = array1.concat(array2);  // [1, 2, 3, 4, 5, 6]\n```\n\nПример объединения трех массивов:\n```javascript\nconst array1 = [1, 2, 3];\nconst array2 = [4, 5, 6];\nconst array3 = [7, 8, 9];\nconst arrayJoined = array1.concat(array2, array3);  // [1, 2, 3, 4, 5, 6, 7, 8, 9]\n```\n\nМетод `concat()` не изменяет исходные массивы, а возвращает новый массив, состоящий из элементов исходных массивов.\n\nНапишите функцию `arrayJoiner`, которая принимает четыре параметра:\n* `array1` – массив;\n* `array2` – массив;\n* `array3` – массив;\n* `array4` – массив.\n\nФункция должна вернуть новый массив, составленный путем объединения всех четырех массивов в указанном порядке.\n\nПримеры запуска функции:\n```javascript\narrayJoiner([1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12]);  // [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function arrayJoiner(array1, array2, array3, array4) {\n  return array1.concat(array2, array3, array4);\n}",
  "openTest": "it('Created function `arrayJoiner`', () => {\n  expect(typeof arrayJoiner).eq('function');\n});\n\nit('arrayJoiner([1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12]);  // [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]', () => {\n  expect(arrayJoiner([1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12])).deep.eq([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]);\n});\n\nit('arrayJoiner([\"\"], [\"\", \"\", \"\"], [\"\", \"\", \"\", \"\"], [\"\", \"\", \"\", \"\", \"\"]);  // [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]', () => {\n  expect(arrayJoiner([\"\"], [\"\", \"\", \"\"], [\"\", \"\", \"\", \"\"], [\"\", \"\", \"\", \"\", \"\"])).deep.eq([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\n});\n\nit('arrayJoiner([\"First\", \"Second\"], [\"A\", \"B\", \"C\"], [\"!\", \"?\", \".\", \",\"], [\"1\", \"2\", \"3\", \"4\", \"5\"]);  // [\"First\", \"Second\", \"A\", \"B\", \"C\", \"!\", \"?\", \".\", \",\", \"1\", \"2\", \"3\", \"4\", \"5\"]', () => {\n  expect(arrayJoiner([\"First\", \"Second\"], [\"A\", \"B\", \"C\"], [\"!\", \"?\", \".\", \",\"], [\"1\", \"2\", \"3\", \"4\", \"5\"])).deep.eq([\"First\", \"Second\", \"A\", \"B\", \"C\", \"!\", \"?\", \".\", \",\", \"1\", \"2\", \"3\", \"4\", \"5\"]);\n});\n\nit('arrayJoiner([\"H\", \"e\"], [\"l\", \"l\", \"o\"], [\" \", \"W\", \"o\", \"r\"], [\"l\", \"d\", \"!\", \"!\", \"!\"]);  // [\"H\", \"e\", \"l\", \"l\", \"o\", \" \", \"W\", \"o\", \"r\", \"l\", \"d\", \"!\", \"!\", \"!\"]', () => {\n  expect(arrayJoiner([\"H\", \"e\"], [\"l\", \"l\", \"o\"], [\" \", \"W\", \"o\", \"r\"], [\"l\", \"d\", \"!\", \"!\", \"!\"])).deep.eq([\"H\", \"e\", \"l\", \"l\", \"o\", \" \", \"W\", \"o\", \"r\", \"l\", \"d\", \"!\", \"!\", \"!\"]);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}