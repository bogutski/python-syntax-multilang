{
  "_id": "6696c2ca763f0712c198e437",
  "name": {
    "en": "Invert letter case",
    "ru": "Инвертировать регистр буквы"
  },
  "instruction": {
    "en": "Write a function `invertCase` that takes 1 parameter - a string of 4 letters.\n\nThe function should return a string in which each letter is reversed.\n\nExamples of running the function:\n```javascript\ninvertCase('ABCD') // 'abcd'\ninvertCase('AbCd') // 'aBcD'\ninvertCase('aBcD') // 'AbCd'\n\ninvertCase('aBcDq') // 'Long string'\n```\n\nAs you can see from the examples, the function should only work with strings of 4 letters.\n\nIf the string is larger than 4 letters, the function should return a 'Long string'.\n\nUse string concatenation to solve the problem. Example:\n```javascript\nlet str = 'abc';\nstr = str + '123';\nconsole.log(str); // 'abc123'\nstr = str + '456';\nconsole.log(str); // 'abc123456'\n```\n\nOr shorter version:\n```javascript\nlet str = 'abc';\nstr += '123';\nconsole.log(str); // 'abc123'\nstr += '456';\nconsole.log(str); // 'abc123456'\n```",
    "ru": "Напишите функцию `invertCase`, которая принимает 1 параметр – строку из 4-х букв.\n\nФункция должна возвращать строку, в которой каждая буква заменена на противоположный регистр.\n\nПримеры запуска функции:\n```javascript\ninvertCase('ABCD') // 'abcd'\ninvertCase('AbCd') // 'aBcD'\ninvertCase('aBcD') // 'AbCd'\n\ninvertCase('aBcDq') // 'Long string'\n```\n\nКак вы поняли из примеров, функция должна работать со строками только из 4-х букв.\n\nЕсли строка больше 4-х букв, то функция должна возвращать строку 'Long string'.\n\nИспользуйте конкатенацию строк для решения задачи. Пример:\n```javascript\nlet str = 'abc';\nstr = str + '123';\nconsole.log(str); // 'abc123'\nstr = str + '456';\nconsole.log(str); // 'abc123456'\n```\n\nили более короткий вариант:\n```javascript\nlet str = 'abc';\nstr += '123';\nconsole.log(str); // 'abc123'\nstr += '456';\nconsole.log(str); // 'abc123456'\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function invertCase(str) {\n  if (str.length > 4) {\n    return 'Long string';\n  }\n\n  let result = '';\n\n  if (str[0] === str[0].toUpperCase()) result += str[0].toLowerCase();\n  else result += str[0].toUpperCase();\n\n  if (str[1] === str[1].toUpperCase()) result += str[1].toLowerCase();\n  else result += str[1].toUpperCase();\n\n  if (str[2] === str[2].toUpperCase()) result += str[2].toLowerCase();\n  else result += str[2].toUpperCase();\n\n  if (str[3] === str[3].toUpperCase()) result += str[3].toLowerCase();\n  else result += str[3].toUpperCase();\n\n  return result;\n}",
  "openTest": "it('Created function invertCase', () => {\n  expect(invertCase).to.be.a('function');\n});\n\nit('invertCase(\"ABCD\") should return \"abcd\"', () => {\n  expect(invertCase('ABCD')).to.be.equal('abcd');\n});\n\nit('invertCase(\"aaBb\") should return \"AAbB\"', () => {\n  expect(invertCase('aaBb')).to.be.equal('AAbB');\n});\n\nit('invertCase(\"AbCd\") should return \"aBcD\"', () => {\n  expect(invertCase('AbCd')).to.be.equal('aBcD');\n});\n\nit('invertCase(\"aBcD\") should return \"AbCd\"', () => {\n  expect(invertCase('aBcD')).to.be.equal('AbCd');\n});\n\nit('invertCase(\"aBcDq\") should return \"Long string\"', () => {\n  expect(invertCase('aBcDq')).to.be.equal('Long string');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}