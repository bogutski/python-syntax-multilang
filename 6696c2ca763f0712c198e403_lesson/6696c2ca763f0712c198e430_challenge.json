{
  "_id": "6696c2ca763f0712c198e430",
  "name": {
    "en": "Modify the string depending on its length",
    "ru": "Модифицировать строку в зависимости от ее длины"
  },
  "instruction": {
    "en": "Write a function `modifyString` that takes a string as a parameter.\n\nIf the length of the string is even, that is, divisible by 2 without a remainder, then the function should return a string in which every character is uppercase.\n\nIf the string length is odd, the function should return a string in which each character is in lowercase.\n\nExamples of running the function:\n```javascript\nmodifyString('Hello') // 'hello'\nmodifyString('Aa') // 'AA'\nmodifyString('aAa') // 'aaa'\n```",
    "ru": "Напишите функцию `modifyString`, которая принимает строку в качестве параметра.\n\nЕсли длина строки четная, то есть делится на 2 без остатка, то функция должна вернуть строку, в которой каждый символ будет в верхнем регистре.\n\nЕсли длина строки нечетная, то функция должна вернуть строку, в которой каждый символ будет в нижнем регистре.\n\nПримеры запуска функции:\n```javascript\nmodifyString('Hello') // 'hello'\nmodifyString('Aa') // 'AA'\nmodifyString('aAa') // 'aaa'\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function modifyString(str) {\n  if (str.length % 2 === 0) {\n    return str.toUpperCase();\n  }\n  return str.toLowerCase();\n}",
  "openTest": "it('Created function modifyString', () => {\n  expect(modifyString).to.be.a('function');\n});\n\nit('modifyString(\"Hello\") should return \"hello\"', () => {\n  expect(modifyString('Hello')).to.equal('hello');\n});\n\nit('modifyString(\"Aa\") should return \"AA\"', () => {\n  expect(modifyString('Aa')).to.equal('AA');\n});\n\nit('modifyString(\"aAa\") should return \"aaa\"', () => {\n  expect(modifyString('aAa')).to.equal('aaa');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}