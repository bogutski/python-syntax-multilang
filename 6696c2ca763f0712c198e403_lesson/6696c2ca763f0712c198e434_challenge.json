{
  "_id": "6696c2ca763f0712c198e434",
  "name": {
    "en": "A string of 5 characters. Count the occurrence of a specific letter",
    "ru": "Строка из 5-ти символов. Считаем вхождение определенной буквы"
  },
  "instruction": {
    "en": "Write a function `letterCount` that takes 2 parameters:\n* `str` - string. It will always consist of 5 letters\n* `letter` - the letter you are looking for\n\nThe function should return the number of occurrences of the letter `letter` in the string `str`, case insensitive.\n\nIf the second argument is not passed, the function should return the string `Wrong letter`.\n\nExamples of running the function:\n```javascript\nletterCount('Hello', 'l') // 2\nletterCount('Hello', 'L') // 2\nletterCount('HeLlo', 'l') // 2\nletterCount('HeLlo', 'L') // 2\nletterCount('Hello', 'h') // 1\nletterCount('Hello', 'H') // 1\nletterCount('Hello', 'e') // 1\nletterCount('Hello', 'E') // 1\nletterCount('Hello', 'b') // 0\n```\n\nA similar example:\n```javascript\nfunction isLetter(str) {\nconst l = 'a'\nif (!str) {\nreturn 'Wrong string';\n}\nreturn str.toLowerCase() === l.toLowerCase();\n}\n```\n\nBring everything to the same case and compare.",
    "ru": "Напишите функцию `letterCount`, которая принимает 2 параметра:\n* `str` - строка. Всегда будет состоять из 5-ти букв\n* `letter` - искомая буква\n\nФункция должна возвращать количество вхождений буквы `letter` в строку `str` без учета регистра.\n\nЕсли второй аргумент не передан, то функция должна возвращать строку `Wrong letter`.\n\nПримеры запуска функции:\n```javascript\nletterCount('Hello', 'l') // 2\nletterCount('Hello', 'L') // 2\nletterCount('HeLlo', 'l') // 2\nletterCount('HeLlo', 'L') // 2\nletterCount('Hello', 'h') // 1\nletterCount('Hello', 'H') // 1\nletterCount('Hello', 'e') // 1\nletterCount('Hello', 'E') // 1\nletterCount('Hello', 'b') // 0\n```\n\nПохожий пример:\n```javascript\nfunction isLetter(str) {\n  const l = 'a'\n  if (!str) {\n    return 'Wrong string';\n  }\n  return str.toLowerCase() === l.toLowerCase();\n}\n```\n\nПриведите все к одному регистру и сравнивайте."
  },
  "initialSolution": "fun",
  "completedSolution": "function letterCount(str, letter) {\n  if (letter === undefined) {\n    return 'Wrong letter';\n  }\n\n  let count = 0;\n  for (let i = 0; i < str.length; i++) {\n    if (str[i].toLowerCase() === letter.toLowerCase()) {\n      count++;\n    }\n  }\n  return count;\n}",
  "openTest": "it('Created function letterCount', () => {\n  expect(letterCount).to.be.a('function');\n});\n\nit('letterCount(\"Hello\", \"l\") should return 2', () => {\n  expect(letterCount('Hello', 'l')).to.equal(2);\n});\n\nit('letterCount(\"Hello\", \"L\") should return 2', () => {\n  expect(letterCount('Hello', 'L')).to.equal(2);\n});\n\nit('letterCount(\"HeLlo\", \"l\") should return 2', () => {\n  expect(letterCount('HeLlo', 'l')).to.equal(2);\n});\n\nit('letterCount(\"HeLlo\", \"L\") should return 2', () => {\n  expect(letterCount('HeLlo', 'L')).to.equal(2);\n});\n\nit('letterCount(\"Hello\", \"h\") should return 1', () => {\n  expect(letterCount('Hello', 'h')).to.equal(1);\n});\n\nit('letterCount(\"Hello\", \"H\") should return 1', () => {\n  expect(letterCount('Hello', 'H')).to.equal(1);\n});\n\nit('letterCount(\"Hello\", \"e\") should return 1', () => {\n  expect(letterCount('Hello', 'e')).to.equal(1);\n});\n\nit('letterCount(\"Hello\", \"E\") should return 1', () => {\n  expect(letterCount('Hello', 'E')).to.equal(1);\n});\n\nit('letterCount(\"Hello\", \"o\") should return 1', () => {\n  expect(letterCount('Hello', 'o')).to.equal(1);\n});\n\nit('letterCount(\"Hello\", \"O\") should return 1', () => {\n  expect(letterCount('Hello', 'O')).to.equal(1);\n});\n\nit('letterCount(\"Hello\", \"a\") should return 0', () => {\n  expect(letterCount('Hello', 'a')).to.equal(0);\n});\n\nit('letterCount(\"Hello\", \"A\") should return 0', () => {\n  expect(letterCount('Hello', 'A')).to.equal(0);\n});\n\nit('letterCount(\"Hello\", \"b\") should return 0', () => {\n  expect(letterCount('Hello', 'b')).to.equal(0);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}