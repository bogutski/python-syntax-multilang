{
  "_id": "6696c2ca763f0712c198e189",
  "name": {
    "en": "True if the numbers are equal",
    "ru": "True если числа равны"
  },
  "instruction": {
    "en": "Write a function `isEqual` that takes two parameters `num1` and `num2`.\n\nIt returns `true` if `num1` equals `num2` and false if `num1` is not equal to `num2`.\n\n\nExamples:\n```javascript\nisEqual(1, 1); // true\nisEqual(1, 2); // false\nisEqual(1, -1); // false\n```",
    "ru": "Напишите функцию `isEqual`, которая принимает два параметра `num1` и `num2`.\n\nВозвращает `true`, если `num1` равно `num2`, и false, если `num1` не равно `num2`.\n\n\nПримеры:\n```javascript\nisEqual(1, 1); // true\nisEqual(1, 2); // false\nisEqual(1, -1); // false\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function isEqual(num1, num2) {\n  return num1 === num2;\n}",
  "openTest": "it('Created function isEqual', () => {\n  expect(isEqual).to.be.a('function');\n});\n\nit('isEqual(1, 1) should return true', () => {\n  expect(isEqual(1, 1)).to.equal(true);\n});\n\nit('isEqual(1, 2) should return false', () => {\n  expect(isEqual(1, 2)).to.equal(false);\n});\n\nit('isEqual(1, -1) should return false', () => {\n  expect(isEqual(1, -1)).to.equal(false);\n});\n\nit('isEqual(0, 0) should return true', () => {\n  expect(isEqual(0, 0)).to.equal(true);\n});\n\nit('isEqual(100, -100) should return false', () => {\n  expect(isEqual(100, -100)).to.equal(false);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}