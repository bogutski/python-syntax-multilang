{
  "_id": "6696c2ca763f0712c198e184",
  "name": {
    "en": "Determine that the number is even or odd. Version 2",
    "ru": "Определим, что число четное или нечетное. Версия 2"
  },
  "instruction": {
    "en": "Note a few examples:\n\n```javascript\nconsole.log(2 % 2 <= 0); // true\nconsole.log(3 % 2 <= 0); // false\nconsole.log(4 % 2 <= 0); // true\nconsole.log(5 % 2 <= 0); // false\nconsole.log(6 % 2 <= 0); // true\nconsole.log(7 % 2 <= 0); // false\n````\n\nDo you see the alternation of true and false? That means if the number is divisible by 2 without a remainder, then it's even, otherwise it's odd.\n\n\nIf you do this:\n\n```javascript\nconsole.log(!(2 % 2 <= 0)); // false\nconsole.log(!(3 % 2 <= 0)); // true\nconsole.log(!(4 % 2 <= 0)); // false\nconsole.log(!(5 % 2 <= 0)); // true\nconsole.log(!(6 % 2 <= 0)); // false\nconsole.log(!(7 % 2 <= 0)); // true\n```\n\nWe will get exactly the same thing, but each comparison will be reversed. So we can use `!` to get exactly the same, but with the opposite result.\n\nWrite a function `isNotEven` that takes a number and returns `false` if the number is even, and `true` if it is odd.",
    "ru": "Обратите внимание на несколько примеров:\n\n```javascript\nconsole.log(2 % 2 === 0); // true\nconsole.log(3 % 2 === 0); // false\nconsole.log(4 % 2 === 0); // true\nconsole.log(5 % 2 === 0); // false\nconsole.log(6 % 2 === 0); // true\nconsole.log(7 % 2 === 0); // false\n```\n\nВидите чередование true и false? Это значит, что если число делится на 2 без остатка, то оно четное, иначе нечетное.\n\n\nЕсли сделать так:\n\n```javascript\nconsole.log(!(2 % 2 === 0)); // false\nconsole.log(!(3 % 2 === 0)); // true\nconsole.log(!(4 % 2 === 0)); // false\nconsole.log(!(5 % 2 === 0)); // true\nconsole.log(!(6 % 2 === 0)); // false\nconsole.log(!(7 % 2 === 0)); // true\n```\n\nМы получим ровно то же самое, но каждое сравнение будет обратным. Таким образом, мы можем использовать `!` для того, чтобы получить ровно то же самое, но с обратным результатом.\n\nНапишите функцию `isNotEven`, которая принимает число и возвращает `false`, если число четное, и `true` если нечетное."
  },
  "initialSolution": "fun",
  "completedSolution": "function isNotEven(num) {\n  return !(num % 2 === 0)\n}",
  "openTest": "it('Created function isNotEven', () => {\n  expect(isNotEven).to.be.a('function');\n});\n\nit('isNotEven(1) should return true', () => {\n  expect(isNotEven(1)).to.equal(true);\n});\n\nit('isNotEven(2) should return false', () => {\n  expect(isNotEven(2)).to.equal(false);\n});\n\nit('isNotEven(3) should return true', () => {\n  expect(isNotEven(3)).to.equal(true);\n});\n\nit('isNotEven(4) should return false', () => {\n  expect(isNotEven(4)).to.equal(false);\n});\n\nit('isNotEven(5) should return true', () => {\n  expect(isNotEven(5)).to.equal(true);\n});\n\nit('isNotEven(-6) should return false', () => {\n  expect(isNotEven(-6)).to.equal(false);\n});\n\nit('isNotEven(-7) should return true', () => {\n  expect(isNotEven(-7)).to.equal(true);\n});\n\nit('isNotEven(-11) should return true', () => {\n  expect(isNotEven(-11)).to.equal(true);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}