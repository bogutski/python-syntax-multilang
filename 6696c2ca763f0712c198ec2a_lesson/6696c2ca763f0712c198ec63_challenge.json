{
  "_id": "6696c2ca763f0712c198ec63",
  "name": {
    "en": "",
    "ru": "Количество вхождений первого и второго символов в строку"
  },
  "instruction": {
    "en": "",
    "ru": "Эта задача перекликается с предыдущей темой.\n\nНапишите функцию `countFirstAndSecondEl`, которая принимает один параметр - строку.\n\nСтрока произвольной длины и может содержать в себе символы, знаки препинания и буквы в верхнем или нижнем регистре.\n\nФункция производит подсчет количества вхождений первого и второго символов в строку и возвращает строку в формате:\n\n`<первый символ> - <количество вхождений>, <второй символ> - <количество вхождений>`\n\n* Если строка пустая, функция возвращает строку `Empty string`\n\n* Если первый и второй символы совпадают, функция возвращает строку `The first and second symbols are the same`\n\nПоиск символов в строке не должен быть чувствителен к регистру.\n\nПример запуска функции:\n```javascript\ncountFirstAndSecondEl('Every cloud has a silver lining'); // 'e - 3, v - 2'\ncountFirstAndSecondEl(''); // 'Empty string'\ncountFirstAndSecondEl('Ooh, come out as something different!'); // 'The first and second symbols are the same'\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function countFirstAndSecondEl(str) {\n  str = str.toLowerCase();\n  if (str === '') return `Empty string`\n  if (str[0] === str[1]) return `The first and second symbols are the same`\n  let count1 = 0;\n  let count2 = 0;\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] === str[0]) count1++\n    if (str[i] === str[1]) count2++\n  }\n  return `${str[0]} - ${count1}, ${str[1]} - ${count2}`\n}",
  "openTest": "it('Created function countFirstAndSecondEl', () => {\n  expect(countFirstAndSecondEl).to.be.a('function');\n});\n\nit(\"countFirstAndSecondEl('Every cloud has a silver lining') should return 'e - 3, v - 2'\", () => {\n  expect(countFirstAndSecondEl('Every cloud has a silver lining')).to.be.equal('e - 3, v - 2');\n});\n\nit(\"countFirstAndSecondEl('') should return 'Empty string'\", () => {\n  expect(countFirstAndSecondEl('')).to.be.equal('Empty string');\n});\n\nit(\"countFirstAndSecondEl('Ooh, come out as something different!') should return 'The first and second symbols are the same'\", () => {\n  expect(countFirstAndSecondEl('Ooh, come out as something different!')).to.be.equal('The first and second symbols are the same');\n});\n\nit(\"countFirstAndSecondEl('Elephant in the Room') should return 'e - 3, l - 1'\", () => {\n  expect(countFirstAndSecondEl('Elephant in the Room')).to.be.equal('e - 3, l - 1');\n});\n\nit(\"countFirstAndSecondEl('A Little Bird Told Me') should return 'a - 1,   - 4'\", () => {\n  expect(countFirstAndSecondEl('A Little Bird Told Me')).to.be.equal('a - 1,   - 4');\n});\n\nit(\"countFirstAndSecondEl('Greased Lightning') should return 'g - 3, r - 1'\", () => {\n  expect(countFirstAndSecondEl('Greased Lightning')).to.be.equal('g - 3, r - 1');\n});\n\nit(\"countFirstAndSecondEl('UNDER YOUR NOSE') should return 'u - 2, n - 2'\", () => {\n  expect(countFirstAndSecondEl('UNDER YOUR NOSE')).to.be.equal('u - 2, n - 2');\n});\n\nit(\"countFirstAndSecondEl('I, you, we') should return 'i - 1, , - 2'\", () => {\n  expect(countFirstAndSecondEl('I, you, we')).to.be.equal('i - 1, , - 2');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}