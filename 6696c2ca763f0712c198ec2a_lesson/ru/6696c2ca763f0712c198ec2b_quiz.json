{
  "name": "Посчитать количество вхождений каждого символа в строку",
  "questions": {
    "0": {
      "name": "Что выведется в консоль после запуска кода ниже?",
      "description": "```javascript\nlet str = 'PASV';\nconst obj = {};\nfor (let i = 0; i < str.length; i++) {\n  obj[str[i]] = true;  \n}\nconsole.log(obj)\n```",
      "variants": {
        "0": {
          "name": "{A: true, P: true, S: true, V: true}"
        },
        "1": {
          "name": "[A: true, P: true, S: true, V: true]"
        },
        "2": {
          "name": "[A=true, P=true, S=true, V=true]"
        },
        "3": {
          "name": "{A: 1, P: 1, S: 1, V: 1}"
        }
      }
    },
    "1": {
      "name": "Что получится в результате выполнения кода ниже?",
      "description": "```javascript\nconst str = 'minimum';\nconst obj = {}        \nfor (let i = 0; i < str.length; i++) {\n  if (obj[str[i]]) obj[str[i]]++\n  else obj[str[i]] = 1;\n}\nconsole.log(obj)\n```",
      "variants": {
        "0": {
          "name": "{i = 2, m = 3, n = 1, u = 1}"
        },
        "1": {
          "name": "{i: true, m: true, n: true, u: true}"
        },
        "2": {
          "name": "{i: 1, m: 1, n: 1, u: 1}"
        },
        "3": {
          "name": "{i: 2, m: 3, n: 1, u: 1}"
        }
      }
    },
    "2": {
      "name": "Чувствителен ли к регистру код ниже и что получится в результате выполнения кода?",
      "description": "```javascript\nconst str = 'MAXImUM';\nconst obj = {}        \nfor (let i = 0; i < str.length; i++) {\n  if (obj[str[i]]) obj[str[i]]++\n  else obj[str[i]] = 1;\n}\nconsole.log(obj)\n```",
      "variants": {
        "0": {
          "name": "Поиск чувствителен к регистру, результатом будет {a: 0, i: 0, m: 0, u: 0, x: 0}"
        },
        "1": {
          "name": "Поиск не чувствителен к регистру, результатом будет {a: 1, i: 1, m: 3, u: 1, x: 1}"
        },
        "2": {
          "name": "Поиск чувствителен к регистру, результатом будет {A: 1, I: 1, M: 2, m: 1, U: 1, X: 1}"
        },
        "3": {
          "name": "Поиск не чувствителен к регистру, результатом будет {a: 1, i: 1, m: 1, u: 1, x: 1}"
        }
      }
    },
    "3": {
      "name": "Будут ли учитываться пробелы и вопросительный знак в коде ниже и что выведется в консоль?",
      "description": "```javascript\nconst str = 'Who are you?';\nconst obj = {}        \nfor (let i = 0; i < str.length; i++) {\n  if (obj[str[i]]) obj[str[i]]++\n  else obj[str[i]] = 1;\n}\nconsole.log(obj)\n```",
      "variants": {
        "0": {
          "name": "Учитываются только буквы, результатом будет {a: 1, e: 1, h: 1, o: 2, r: 1, u: 1, W: 1, y: 1}"
        },
        "1": {
          "name": "Учитываются все символы, результатом будет {\" \": 2, ?: 1, a: 1, e: 1, h: 1, o: 2, r: 1, u: 1, W: 1, y: 1}"
        },
        "2": {
          "name": "Учитываются только буквы и символы, результатом будет {?: 1, a: 1, e: 1, h: 1, o: 2, r: 1, u: 1, W: 1, y: 1}"
        },
        "3": {
          "name": "Учитываются только буквы и пробелы, результатом будет {\" \": 2, a: 1, e: 1, h: 1, o: 2, r: 1, u: 1, W: 1, y: 1}"
        }
      }
    },
    "4": {
      "name": "Что делает метод Object.keys()?",
      "variants": {
        "0": {
          "name": "Переводит в массив ключи объекта"
        },
        "1": {
          "name": "Переводит в массив значения объекта"
        },
        "2": {
          "name": "Переводит в массив ключи и значения объекта"
        },
        "3": {
          "name": "Переводит в массив ключи объекта, в том числе и ключи вложенных объектов"
        }
      }
    },
    "5": {
      "name": "Что получится в результате выполнения кода ниже?",
      "description": "```javascript\nconst str = 'level';\nconst obj = {};\nfor (let i = 0; i < str.length; i++) {\n  if (obj[str[i]]) obj[str[i]]++\n  else obj[str[i]] = 1;\n}\nconsole.log(obj, Object.keys(obj))\n```",
      "variants": {
        "0": {
          "name": "{e: 2, l: 2, v: 1}\n{'l', 'e', 'v'}"
        },
        "1": {
          "name": "{e: 2, l: 2, v: 1}\n[2, 2, 1]"
        },
        "2": {
          "name": "[e: 2, l: 2, v: 1]\n{'l', 'e', 'v'}"
        },
        "3": {
          "name": "{e: 2, l: 2, v: 1}\n['l', 'e', 'v']"
        }
      }
    },
    "6": {
      "name": "Что возвращает метод Object.values()?",
      "variants": {
        "0": {
          "name": "Метод возвращает массив значений объекта, включая значения вложенных объектов"
        },
        "1": {
          "name": "Метод возвращает массив ключей и значений объекта"
        },
        "2": {
          "name": "Метод возвращает массив значений объекта"
        },
        "3": {
          "name": "Метод возвращает массив ключей объекта"
        }
      }
    },
    "7": {
      "name": "Выберите верный вариант результата работы кода ниже",
      "description": "```javascript\nconst str = 'racecar';\nconst obj = {};\nfor (let i = 0; i < str.length; i++) {\n  if (obj[str[i]]) obj[str[i]]++\n  else obj[str[i]] = 1;\n}\nconsole.log(obj, Object.values(obj))\n```",
      "variants": {
        "0": {
          "name": "[a: 2, c: 2, e: 1, r: 2]\n{2, 2, 2, 1}"
        },
        "1": {
          "name": "{a: 2, c: 2, e: 1, r: 2}\n[2, 2, 2, 1]"
        },
        "2": {
          "name": "{a: 2, c: 2, e: 1, r: 2}\n['a', 'c', 'e', 'r']"
        },
        "3": {
          "name": "{a: 2, c: 2, e: 1, r: 2}\n[a: 2, c: 2, e: 1, r: 2]"
        }
      }
    },
    "8": {
      "name": "Что возвращает метод Object.entries()?",
      "variants": {
        "0": {
          "name": "Массив свойств объекта, в формате [key, value]"
        },
        "1": {
          "name": "Массив свойств объекта, в формате [value, key]"
        },
        "2": {
          "name": "Массив ключей объекта, в формате [key, key, key, key]"
        },
        "3": {
          "name": "Массив значений объекта, в формате [value, value, value, value]"
        }
      }
    },
    "9": {
      "name": "Выберите верный вариант результата запуска кода ниже",
      "description": "```javascript\nconst str = 'Anna';\nconst obj = {};\nfor (let i = 0; i < str.length; i++) {\n  if (obj[str[i]]) obj[str[i]]++\n  else obj[str[i]] = 1;\n}\nconsole.log(obj, Object.entries(obj))\n```",
      "variants": {
        "0": {
          "name": "{A: 1, a: 1, n: 2}\n{{'A', 1}, {'n', 2}, {'a', 1}}"
        },
        "1": {
          "name": "{A: 1, a: 1, n: 2}\n[['A', 1], ['n', 2], ['a', 1]]"
        },
        "2": {
          "name": "{A: 1, a: 1, n: 2}\n['A', 1, 'n', 2, 'a', 1]"
        },
        "3": {
          "name": "[A: 1, a: 1, n: 2]\n[['A': 1], ['n': 2], ['a': 1]]"
        }
      }
    }
  }
}