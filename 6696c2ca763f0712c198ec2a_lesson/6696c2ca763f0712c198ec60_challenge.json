{
  "_id": "6696c2ca763f0712c198ec60",
  "name": {
    "en": "Count the number of occurrences of elements in the string from the 4th index of the string to the end of the string",
    "ru": "Посчитать количество вхождений элементов в строку с 4-го индекса строки до конца"
  },
  "instruction": {
    "en": "The `countElFrom4Ind` function takes 1 parameter - the string `str`.\n\nThe string is of arbitrary length and consists of words in upper or lower case, separated by spaces.\n\nThe function returns an object in which the keys are letters and the values are the number of occurrences of these letters.\n\nThe counting starts from the 4th index of the string to the end.\n\nCorrect the errors in the code to make the function work correctly.\n\nExample of running the function:\n```javascript\ncountElFrom4Ind('REPAPER'); // {E: 1, P: 1, R: 1}\ncountElFrom4Ind('Love Birds'); // {\" \": 1, B: 1, d: 1, i: 1, r: 1, s: 1}\ncountElFrom4Ind('4 you'); // {u: 1}\ncountElFrom4Ind('Anna'); // 'The string is not long enough'\ncountElFrom4Ind('Up'); // 'The string is not long enough'\n```",
    "ru": "Функция `countElFrom4Ind` принимает 1 параметр - строку `str`.\n\nСтрока произвольной длины и состоит из слов в верхнем или нижнем регистре, разделенных пробелами.\n\nФункция возвращает объект, в котором ключами будут буквы, а значениями - количество вхождений этих букв.\n\nПодсчет начинается с 4-го индекса строки и до конца.\n\nИсправьте ошибки в коде, чтобы функция работала правильно.\n\nПример запуска функции:\n```javascript\ncountElFrom4Ind('REPAPER'); // {E: 1, P: 1, R: 1}\ncountElFrom4Ind('Love Birds'); // {\" \": 1, B: 1, d: 1, i: 1, r: 1, s: 1}\ncountElFrom4Ind('4 you'); // {u: 1}\ncountElFrom4Ind('Anna'); // 'The string is not long enough'\ncountElFrom4Ind('Up'); // 'The string is not long enough'\n```"
  },
  "initialSolution": "function СountElFrom4Ind(str){\n  if(str.length <= 5) return 'The string is not long enough';\n  const obj = {};\n  for (let i = str[4]; i < str.length; i++) {\n    if (obj[str[i]]) obj[str[i]]++\n    else obj[str[i]] = 1;\n  }\n  return obj;\n}",
  "completedSolution": "function countElFrom4Ind(str) {\n  if (str.length < 5) return 'The string is not long enough';\n  const obj = {};\n  for (let i = 4; i < str.length; i++) {\n    if (obj[str[i]]) obj[str[i]]++\n    else obj[str[i]] = 1;\n  }\n  return obj;\n}",
  "openTest": "it('Created function countElFrom4Ind', () => {\n  expect(countElFrom4Ind).to.be.a('function');\n});\n\nit(\"countElFrom4Ind('REPAPER') should return {E: 1, P: 1, R: 1}\", () => {\n  expect(countElFrom4Ind('REPAPER')).to.deep.equal({E: 1, P: 1, R: 1});\n});\n\nit(\"countElFrom4Ind('Love Birds') should return {' ': 1, B: 1, d: 1, i: 1, r: 1, s: 1}\", () => {\n  expect(countElFrom4Ind('Love Birds')).to.deep.equal({' ': 1, B: 1, d: 1, i: 1, r: 1, s: 1});\n});\n\nit(\"countElFrom4Ind('Yada Yada') should return {' ': 1, a: 2, d: 1, Y: 1}\", () => {\n  expect(countElFrom4Ind('Yada Yada')).to.deep.equal({' ': 1, a: 2, d: 1, Y: 1});\n});\n\nit(\"countElFrom4Ind('Madam') should return {m: 1}\", () => {\n  expect(countElFrom4Ind('Madam')).to.deep.equal({m: 1});\n});\n\nit(\"countElFrom4Ind('Two Down, One to Go') should return {' ': 3, ',': 1, D: 1, e: 1, G: 1, n: 2, o: 3, O: 1, t: 1, w: 1}\", () => {\n  expect(countElFrom4Ind('Two Down, One to Go')).to.deep.equal({\n    ' ': 3,\n    ',': 1,\n    D: 1,\n    e: 1,\n    G: 1,\n    n: 2,\n    o: 3,\n    O: 1,\n    t: 1,\n    w: 1\n  });\n});\n\nit(\"countElFrom4Ind('4 you') should return {u: 1}\", () => {\n  expect(countElFrom4Ind('4 you')).to.deep.equal({u: 1});\n});\n\nit(\"countElFrom4Ind('Anna') should return 'The string is not long enough'\", () => {\n  expect(countElFrom4Ind('Anna')).to.equal('The string is not long enough');\n});\n\nit(\"countElFrom4Ind('') should return 'The string is not long enough'\", () => {\n  expect(countElFrom4Ind('')).to.equal('The string is not long enough');\n});\n\nit(\"countElFrom4Ind('Age') should return 'The string is not long enough'\", () => {\n  expect(countElFrom4Ind('Age')).to.equal('The string is not long enough');\n});\n\nit(\"countElFrom4Ind('Up') should return 'The string is not long enough'\", () => {\n  expect(countElFrom4Ind('Up')).to.equal('The string is not long enough');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}