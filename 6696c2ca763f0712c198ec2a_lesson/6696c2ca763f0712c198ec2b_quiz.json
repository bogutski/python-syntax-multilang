{
  "_id": "6696c2ca763f0712c198ec2b",
  "name": {
    "ru": "Посчитать количество вхождений каждого символа в строку",
    "en": "Count the number of occurrences of each character in the string",
    "es": ""
  },
  "acceptableMistakes": 1,
  "active": true,
  "questions": [
    {
      "_id": "6696c2ca763f0712c198ec2c",
      "name": {
        "ru": "Что выведется в консоль после запуска кода ниже?",
        "en": "What will be output to the console after running the code below?",
        "es": ""
      },
      "description": {
        "ru": "```javascript\nlet str = 'PASV';\nconst obj = {};\nfor (let i = 0; i < str.length; i++) {\n  obj[str[i]] = true;  \n}\nconsole.log(obj)\n```",
        "en": "```javascript\nlet str = 'PASV';\nconst obj = {};\nfor (let i = 0; i < str.length; i++) {\n  obj[str[i]] = true;  \n}\nconsole.log(obj)\n```",
        "es": ""
      },
      "answerType": "single",
      "variants": [
        {
          "_id": "6696c2ca763f0712c198ec2d",
          "name": {
            "ru": "{A: true, P: true, S: true, V: true}",
            "en": "{A: true, P: true, S: true, V: true}",
            "es": ""
          },
          "correct": true
        },
        {
          "_id": "6696c2ca763f0712c198ec2e",
          "name": {
            "ru": "[A: true, P: true, S: true, V: true]",
            "en": "[A: true, P: true, S: true, V: true].",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2ca763f0712c198ec2f",
          "name": {
            "ru": "[A=true, P=true, S=true, V=true]",
            "en": "[A=true, P=true, S=true, V=true]",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2ca763f0712c198ec30",
          "name": {
            "ru": "{A: 1, P: 1, S: 1, V: 1}",
            "en": "{A: 1, P: 1, S: 1, V: 1}",
            "es": ""
          },
          "correct": false
        }
      ]
    },
    {
      "_id": "6696c2ca763f0712c198ec31",
      "name": {
        "ru": "Что получится в результате выполнения кода ниже?",
        "en": "What will be the result of executing the code below?",
        "es": ""
      },
      "description": {
        "ru": "```javascript\nconst str = 'minimum';\nconst obj = {}        \nfor (let i = 0; i < str.length; i++) {\n  if (obj[str[i]]) obj[str[i]]++\n  else obj[str[i]] = 1;\n}\nconsole.log(obj)\n```",
        "en": "```javascript\nconst str = 'minimum';\nconst obj = {}        \nfor (let i = 0; i < str.length; i++) {\n  if (obj[str[i]]) obj[str[i]]++\n  else obj[str[i]] = 1;\n}\nconsole.log(obj)\n```",
        "es": ""
      },
      "answerType": "single",
      "variants": [
        {
          "_id": "6696c2ca763f0712c198ec32",
          "name": {
            "ru": "{i = 2, m = 3, n = 1, u = 1}",
            "en": "{i = 2, m = 3, n = 1, u = 1}",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2ca763f0712c198ec33",
          "name": {
            "ru": "{i: true, m: true, n: true, u: true}",
            "en": "{i: true, m: true, n: true, u: true}",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2ca763f0712c198ec34",
          "name": {
            "ru": "{i: 1, m: 1, n: 1, u: 1}",
            "en": "{i: 1, m: 1, n: 1, u: 1}",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2ca763f0712c198ec35",
          "name": {
            "ru": "{i: 2, m: 3, n: 1, u: 1}",
            "en": "{i: 2, m: 3, n: 1, u: 1}",
            "es": ""
          },
          "correct": true
        }
      ]
    },
    {
      "_id": "6696c2ca763f0712c198ec36",
      "name": {
        "ru": "Чувствителен ли к регистру код ниже и что получится в результате выполнения кода?",
        "en": "Is the code below case sensitive and what is the result of executing the code?",
        "es": ""
      },
      "description": {
        "ru": "```javascript\nconst str = 'MAXImUM';\nconst obj = {}        \nfor (let i = 0; i < str.length; i++) {\n  if (obj[str[i]]) obj[str[i]]++\n  else obj[str[i]] = 1;\n}\nconsole.log(obj)\n```",
        "en": "```javascript\nconst str = 'MAXImUM';\nconst obj = {}        \nfor (let i = 0; i < str.length; i++) {\n  if (obj[str[i]]) obj[str[i]]++\n  else obj[str[i]] = 1;\n}\nconsole.log(obj)\n```",
        "es": ""
      },
      "answerType": "single",
      "variants": [
        {
          "_id": "6696c2ca763f0712c198ec37",
          "name": {
            "ru": "Поиск чувствителен к регистру, результатом будет {a: 0, i: 0, m: 0, u: 0, x: 0}",
            "en": "The search is case sensitive, the result will be {a: 0, i: 0, m: 0, u: 0, x: 0}",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2ca763f0712c198ec38",
          "name": {
            "ru": "Поиск не чувствителен к регистру, результатом будет {a: 1, i: 1, m: 3, u: 1, x: 1}",
            "en": "The search is case insensitive, the result will be {a: 1, i: 1, m: 3, u: 1, x: 1}",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2ca763f0712c198ec39",
          "name": {
            "ru": "Поиск чувствителен к регистру, результатом будет {A: 1, I: 1, M: 2, m: 1, U: 1, X: 1}",
            "en": "The search is case sensitive, the result will be {A: 1, I: 1, M: 2, m: 1, U: 1, X: 1}",
            "es": ""
          },
          "correct": true
        },
        {
          "_id": "6696c2ca763f0712c198ec3a",
          "name": {
            "ru": "Поиск не чувствителен к регистру, результатом будет {a: 1, i: 1, m: 1, u: 1, x: 1}",
            "en": "The search is case insensitive, the result will be {a: 1, i: 1, m: 1, u: 1, x: 1}",
            "es": ""
          },
          "correct": false
        }
      ]
    },
    {
      "_id": "6696c2ca763f0712c198ec3b",
      "name": {
        "ru": "Будут ли учитываться пробелы и вопросительный знак в коде ниже и что выведется в консоль?",
        "en": "Will the spaces and question mark in the code below be taken into account and what will be output to the console?",
        "es": ""
      },
      "description": {
        "ru": "```javascript\nconst str = 'Who are you?';\nconst obj = {}        \nfor (let i = 0; i < str.length; i++) {\n  if (obj[str[i]]) obj[str[i]]++\n  else obj[str[i]] = 1;\n}\nconsole.log(obj)\n```",
        "en": "```javascript\nconst str = 'Who are you?';\nconst obj = {}        \nfor (let i = 0; i < str.length; i++) {\n  if (obj[str[i]]) obj[str[i]]++\n  else obj[str[i]] = 1;\n}\nconsole.log(obj)\n```",
        "es": ""
      },
      "answerType": "single",
      "variants": [
        {
          "_id": "6696c2ca763f0712c198ec3c",
          "name": {
            "ru": "Учитываются только буквы, результатом будет {a: 1, e: 1, h: 1, o: 2, r: 1, u: 1, W: 1, y: 1}",
            "en": "Only letters are considered, the result will be {a: 1, e: 1, h: 1, o: 2, r: 1, u: 1, w: 1, y: 1}",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2ca763f0712c198ec3d",
          "name": {
            "ru": "Учитываются все символы, результатом будет {\" \": 2, ?: 1, a: 1, e: 1, h: 1, o: 2, r: 1, u: 1, W: 1, y: 1}",
            "en": "All characters are considered, the result will be {\" \": 2, ?: 1, a: 1, e: 1, h: 1, o: 2, r: 1, u: 1, w: 1, y: 1}",
            "es": ""
          },
          "correct": true
        },
        {
          "_id": "6696c2ca763f0712c198ec3e",
          "name": {
            "ru": "Учитываются только буквы и символы, результатом будет {?: 1, a: 1, e: 1, h: 1, o: 2, r: 1, u: 1, W: 1, y: 1}",
            "en": "Only letters and characters are considered, the result will be {?: 1, a: 1, e: 1, h: 1, o: 2, r: 1, u: 1, w: 1, y: 1}",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2ca763f0712c198ec3f",
          "name": {
            "ru": "Учитываются только буквы и пробелы, результатом будет {\" \": 2, a: 1, e: 1, h: 1, o: 2, r: 1, u: 1, W: 1, y: 1}",
            "en": "Only letters and spaces are considered, the result will be {\" \": 2, a: 1, e: 1, h: 1, o: 2, r: 1, u: 1, w: 1, y: 1}",
            "es": ""
          },
          "correct": false
        }
      ]
    },
    {
      "_id": "6696c2ca763f0712c198ec40",
      "name": {
        "ru": "Что делает метод Object.keys()?",
        "en": "What does the Object.keys() method do?",
        "es": ""
      },
      "description": {
        "ru": "",
        "en": "",
        "es": ""
      },
      "answerType": "single",
      "variants": [
        {
          "_id": "6696c2ca763f0712c198ec41",
          "name": {
            "ru": "Переводит в массив ключи объекта",
            "en": "Translates the keys of an object into an array",
            "es": ""
          },
          "correct": true
        },
        {
          "_id": "6696c2ca763f0712c198ec42",
          "name": {
            "ru": "Переводит в массив значения объекта",
            "en": "Translates object values into an array",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2ca763f0712c198ec43",
          "name": {
            "ru": "Переводит в массив ключи и значения объекта",
            "en": "Translates the keys and values of an object into an array",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2ca763f0712c198ec44",
          "name": {
            "ru": "Переводит в массив ключи объекта, в том числе и ключи вложенных объектов",
            "en": "Translates object keys, including the keys of nested objects, into an array",
            "es": ""
          },
          "correct": false
        }
      ]
    },
    {
      "_id": "6696c2ca763f0712c198ec45",
      "name": {
        "ru": "Что получится в результате выполнения кода ниже?",
        "en": "What will be the result of executing the code below?",
        "es": ""
      },
      "description": {
        "ru": "```javascript\nconst str = 'level';\nconst obj = {};\nfor (let i = 0; i < str.length; i++) {\n  if (obj[str[i]]) obj[str[i]]++\n  else obj[str[i]] = 1;\n}\nconsole.log(obj, Object.keys(obj))\n```",
        "en": "```javascript\nconst str = 'level';\nconst obj = {};\nfor (let i = 0; i < str.length; i++) {\n  if (obj[str[i]]) obj[str[i]]++\n  else obj[str[i]] = 1;\n}\nconsole.log(obj, Object.keys(obj))\n```",
        "es": ""
      },
      "answerType": "single",
      "variants": [
        {
          "_id": "6696c2ca763f0712c198ec46",
          "name": {
            "ru": "{e: 2, l: 2, v: 1}\n{'l', 'e', 'v'}",
            "en": "{e: 2, l: 2, v: 1}\n{'l', 'e', 'v'}",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2ca763f0712c198ec47",
          "name": {
            "ru": "{e: 2, l: 2, v: 1}\n[2, 2, 1]",
            "en": "{e: 2, l: 2, v: 1}\n[2, 2, 1]",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2ca763f0712c198ec48",
          "name": {
            "ru": "[e: 2, l: 2, v: 1]\n{'l', 'e', 'v'}",
            "en": "[e: 2, l: 2, v: 1].\n{'l', 'e', 'v'}",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2ca763f0712c198ec49",
          "name": {
            "ru": "{e: 2, l: 2, v: 1}\n['l', 'e', 'v']",
            "en": "{e: 2, l: 2, v: 1}\n['l', 'e', 'v'].",
            "es": ""
          },
          "correct": true
        }
      ]
    },
    {
      "_id": "6696c2ca763f0712c198ec4a",
      "name": {
        "ru": "Что возвращает метод Object.values()?",
        "en": "What does the Object.values() method return?",
        "es": ""
      },
      "description": {
        "ru": "",
        "en": "",
        "es": ""
      },
      "answerType": "single",
      "variants": [
        {
          "_id": "6696c2ca763f0712c198ec4b",
          "name": {
            "ru": "Метод возвращает массив значений объекта, включая значения вложенных объектов",
            "en": "The method returns an array of object values, including the values of nested objects",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2ca763f0712c198ec4c",
          "name": {
            "ru": "Метод возвращает массив ключей и значений объекта",
            "en": "The method returns an array of keys and values of the object",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2ca763f0712c198ec4d",
          "name": {
            "ru": "Метод возвращает массив значений объекта",
            "en": "The method returns an array of values of the object",
            "es": ""
          },
          "correct": true
        },
        {
          "_id": "6696c2ca763f0712c198ec4e",
          "name": {
            "ru": "Метод возвращает массив ключей объекта",
            "en": "The method returns an array of keys of the object",
            "es": ""
          },
          "correct": false
        }
      ]
    },
    {
      "_id": "6696c2ca763f0712c198ec4f",
      "name": {
        "ru": "Выберите верный вариант результата работы кода ниже",
        "en": "Select the correct version of the code result below",
        "es": ""
      },
      "description": {
        "ru": "```javascript\nconst str = 'racecar';\nconst obj = {};\nfor (let i = 0; i < str.length; i++) {\n  if (obj[str[i]]) obj[str[i]]++\n  else obj[str[i]] = 1;\n}\nconsole.log(obj, Object.values(obj))\n```",
        "en": "```javascript\nconst str = 'racecar';\nconst obj = {};\nfor (let i = 0; i < str.length; i++) {\n  if (obj[str[i]]) obj[str[i]]++\n  else obj[str[i]] = 1;\n}\nconsole.log(obj, Object.values(obj))\n```",
        "es": ""
      },
      "answerType": "single",
      "variants": [
        {
          "_id": "6696c2ca763f0712c198ec50",
          "name": {
            "ru": "[a: 2, c: 2, e: 1, r: 2]\n{2, 2, 2, 1}",
            "en": "[a: 2, c: 2, e: 1, r: 2]\n{2, 2, 2, 1}",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2ca763f0712c198ec51",
          "name": {
            "ru": "{a: 2, c: 2, e: 1, r: 2}\n[2, 2, 2, 1]",
            "en": "{a: 2, c: 2, e: 1, r: 2}\n[2, 2, 2, 1]",
            "es": ""
          },
          "correct": true
        },
        {
          "_id": "6696c2ca763f0712c198ec52",
          "name": {
            "ru": "{a: 2, c: 2, e: 1, r: 2}\n['a', 'c', 'e', 'r']",
            "en": "{a: 2, c: 2, e: 1, r: 2}\n['a', 'c', 'e', 'r'].",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2ca763f0712c198ec53",
          "name": {
            "ru": "{a: 2, c: 2, e: 1, r: 2}\n[a: 2, c: 2, e: 1, r: 2]",
            "en": "{a: 2, c: 2, e: 1, r: 2}\n[a: 2, c: 2, e: 1, r: 2]",
            "es": ""
          },
          "correct": false
        }
      ]
    },
    {
      "_id": "6696c2ca763f0712c198ec54",
      "name": {
        "ru": "Что возвращает метод Object.entries()?",
        "en": "What does the Object.entries() method return?",
        "es": ""
      },
      "description": {
        "ru": "",
        "en": "",
        "es": ""
      },
      "answerType": "single",
      "variants": [
        {
          "_id": "6696c2ca763f0712c198ec55",
          "name": {
            "ru": "Массив свойств объекта, в формате [key, value]",
            "en": "Array of object properties, in the format [key, value]",
            "es": ""
          },
          "correct": true
        },
        {
          "_id": "6696c2ca763f0712c198ec56",
          "name": {
            "ru": "Массив свойств объекта, в формате [value, key]",
            "en": "Array of object properties, in the format [value, key]",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2ca763f0712c198ec57",
          "name": {
            "ru": "Массив ключей объекта, в формате [key, key, key, key]",
            "en": "An array of object keys, in the format [key, key, key, key, key]",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2ca763f0712c198ec58",
          "name": {
            "ru": "Массив значений объекта, в формате [value, value, value, value]",
            "en": "Array of object values, in the format [value, value, value, value, value]",
            "es": ""
          },
          "correct": false
        }
      ]
    },
    {
      "_id": "6696c2ca763f0712c198ec59",
      "name": {
        "ru": "Выберите верный вариант результата запуска кода ниже",
        "en": "Select the correct version of the result of the code run below",
        "es": ""
      },
      "description": {
        "ru": "```javascript\nconst str = 'Anna';\nconst obj = {};\nfor (let i = 0; i < str.length; i++) {\n  if (obj[str[i]]) obj[str[i]]++\n  else obj[str[i]] = 1;\n}\nconsole.log(obj, Object.entries(obj))\n```",
        "en": "```javascript\nconst str = 'Anna';\nconst obj = {};\nfor (let i = 0; i < str.length; i++) {\n  if (obj[str[i]]) obj[str[i]]++\n  else obj[str[i]] = 1;\n}\nconsole.log(obj, Object.entries(obj))\n```",
        "es": ""
      },
      "answerType": "single",
      "variants": [
        {
          "_id": "6696c2ca763f0712c198ec5a",
          "name": {
            "ru": "{A: 1, a: 1, n: 2}\n{{'A', 1}, {'n', 2}, {'a', 1}}",
            "en": "{A: 1, a: 1, n: 2}\n{{'A', 1}, {'n', 2}, {'a', 1}}",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2ca763f0712c198ec5b",
          "name": {
            "ru": "{A: 1, a: 1, n: 2}\n[['A', 1], ['n', 2], ['a', 1]]",
            "en": "{A: 1, a: 1, n: 2}\n[['A', 1], ['n', 2], ['a', 1]]",
            "es": ""
          },
          "correct": true
        },
        {
          "_id": "6696c2ca763f0712c198ec5c",
          "name": {
            "ru": "{A: 1, a: 1, n: 2}\n['A', 1, 'n', 2, 'a', 1]",
            "en": "{A: 1, a: 1, n: 2}\n['A', 1, 'n', 2, 'a', 1]",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2ca763f0712c198ec5d",
          "name": {
            "ru": "[A: 1, a: 1, n: 2]\n[['A': 1], ['n': 2], ['a': 1]]",
            "en": "[A: 1, a: 1, n: 2]\n[['A': 1], ['n': 2], ['a': 1]]",
            "es": ""
          },
          "correct": false
        }
      ]
    }
  ]
}