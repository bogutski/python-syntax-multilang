{
  "_id": "6696c2cb763f0712c198f995",
  "name": {
    "en": "/*",
    "ru": "Проверка строки на палиндром"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `isPalindrome`, которая проверяет, является ли строка палиндромом.\n\nСтрока может содержать пробелы и знаки препинания, которые нужно игнорировать.\n\n\nПримеры запуска функции:\n```javascript\nisPalindrome(\"A man, a plan, a canal: Panama\"); // true\nisPalindrome(\"race a car\"); // false\nisPalindrome(\"12321\"); // true\n```"
  },
  "initialSolution": "function isPalindrome(){\n\n}",
  "completedSolution": "function isPalindrome(string) {\n  const modified = string.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n  for(let i = 0; i < modified.length / 2; i++) {\n    if(modified[i] !== modified[modified.length - 1 - i]) return false\n  }\n\n  return true;\n}",
  "openTest": "it('Created function isPalindrome', () => {\n  expect(isPalindrome).to.be.a('function');\n});\n\nit('isPalindrome(\"A man, a plan, a canal: Panama\") should return true', function() {\n  expect(isPalindrome(\"A man, a plan, a canal: Panama\")).to.equal(true);\n});\n\nit('isPalindrome(\"race a car\") should return false', function() {\n  expect(isPalindrome(\"race a car\")).to.equal(false);\n});\n\nit('isPalindrome(\" \") should return true', function() {\n  expect(isPalindrome(\" \")).to.equal(true);\n});\n\nit('isPalindrome(\"No lemon, no melon\") should return true', function() {\n  expect(isPalindrome(\"No lemon, no melon\")).to.equal(true);\n});\n\nit('isPalindrome(\"Was it a car or a cat I saw?\") should return true', function() {\n  expect(isPalindrome(\"Was it a car or a cat I saw?\")).to.equal(true);\n});\n\nit('isPalindrome(\"12321\") should return true', function() {\n  expect(isPalindrome(\"12321\")).to.equal(true);\n});\n\nit('isPalindrome(\"123456\") should return false', function() {\n  expect(isPalindrome(\"123456\")).to.equal(false);\n});\n\nit('isPalindrome(\"Able , was I saw eLba\") should return true', function() {\n  expect(isPalindrome(\"Able , was I saw eLba\")).to.equal(true);\n});\n\nit('isPalindrome(\"Hello, World!\") should return false', function() {\n  expect(isPalindrome(\"Hello, World!\")).to.equal(false);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}