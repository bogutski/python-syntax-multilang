{
  "_id": "6696c2cb763f0712c198f99a",
  "name": {
    "en": "/*",
    "ru": "Замена буквы в строке"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `replaceLetter`, которая принимает строку и заменяет все буквы `i` (без учета регистра) на буквы латинского алфавита, начиная с `а`.\n\nКаждая следующая замена буквы `i` должна заменяться следующей буквой алфавита.\n\n\nПримеры запуска функции:\n```javascript\nconsole.log(replaceLetter('Mississippi')); // \"Massbsscppd\"\nconsole.log(replaceLetter('Impossibility')); // \"ampossbbcldty\"\nconsole.log(replaceLetter('Illinois')); // \"allbnocs\"\n```"
  },
  "initialSolution": "function replaceLetter(){\n\n}",
  "completedSolution": "function replaceLetter(str){\n    let asc = 97\n    let newStr = ''\n\n    for(let i = 0; i < str.length; i++){\n        if(str[i].toLowerCase() === 'i'){\n            newStr += String.fromCharCode(asc)\n            asc++\n        } else newStr += str[i]\n    }\n    return newStr\n}",
  "openTest": "it('Created function replaceLetter', () => {\n  expect(replaceLetter).to.be.a('function');\n});\n\nit('replaceLetter(\"Mississippi\") should return \"Massbsscppd\"', function() {\n  expect(replaceLetter(\"Mississippi\")).to.equal(\"Massbsscppd\");\n});\n\nit('replaceLetter(\"Impossibility\") should return \"ampossbbcldty\"', function() {\n  expect(replaceLetter(\"Impossibility\")).to.equal(\"ampossbbcldty\");\n});\n\nit('replaceLetter(\"Illinois\") should return \"allbnocs\"', function() {\n  expect(replaceLetter(\"Illinois\")).to.equal(\"allbnocs\");\n});\n\nit('replaceLetter(\"internationalization\") should return \"anternatbonalczatdon\"', function() {\n  expect(replaceLetter(\"internationalization\")).to.equal(\"anternatbonalczatdon\");\n});\n\nit('replaceLetter(\"invisibility\") should return \"anvbscbdlety\"', function() {\n  expect(replaceLetter(\"invisibility\")).to.equal(\"anvbscbdlety\");\n});\n\nit('replaceLetter(\"Ignition\") should return \"agnbtcon\"', function() {\n  expect(replaceLetter(\"Ignition\")).to.equal(\"agnbtcon\");\n});\n\nit('replaceLetter(\"Independent\") should return \"andependent\"', function() {\n  expect(replaceLetter(\"Independent\")).to.equal(\"andependent\");\n});\n\nit('replaceLetter(\"Incidence\") should return \"ancbdence\"', function() {\n  expect(replaceLetter(\"Incidence\")).to.equal(\"ancbdence\");\n});\n\nit('replaceLetter(\"Iterative\") should return \"ateratbve\"', function() {\n  expect(replaceLetter(\"Iterative\")).to.equal(\"ateratbve\");\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}