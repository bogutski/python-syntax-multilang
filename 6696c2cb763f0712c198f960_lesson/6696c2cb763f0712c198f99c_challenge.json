{
  "_id": "6696c2cb763f0712c198f99c",
  "name": {
    "en": "/*",
    "ru": "Разница между JSON-объектами"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `findJSONDifferences`, которая принимает два JSON-объекта в виде строк.\n\nФункция должна сравнить объекты и вернуть отсортированный массив ключей, значения которых отличаются в двух объектах.\n\n\nПримеры запуска функции:\n```javascript\nfindJSONDifferences('{\"c\":\"ranked\",\"a\":\"wrong\"}', '{\"a\":\"rank\",\"c\":\"wro\"}'); // [ 'a', 'c' ]\nfindJSONDifferences('{\"x\":\"1\",\"y\":\"2\"}', '{\"x\":\"1\",\"y\":\"3\"}'); // [ 'y' ]\nfindJSONDifferences('{\"name\":\"Alice\",\"age\":25}', '{\"name\":\"Alice\",\"age\":30}'); // [ 'age' ]\nfindJSONDifferences('{\"a\":\"1\",\"b\":\"2\",\"c\":\"3\"}', '{\"a\":\"1\",\"b\":\"2\",\"c\":\"4\"}'); // [ 'c' ]\nfindJSONDifferences('{\"hello\":\"world\",\"hi\":\"hello\",\"you\":\"me\"}', '{\"hello\":\"world\",\"hi\":\"helloo\",\"you\":\"me\"}'); // [ 'hi' ]\n```"
  },
  "initialSolution": "function findJSONDifferences(){\n\n}",
  "completedSolution": "function findJSONDifferences(json1, json2) {\n  const obj1 = JSON.parse(json1)\n  const obj2 = JSON.parse(json2)\n\n  const res = []\n  for(let key in obj1){\n    if(obj2.hasOwnProperty(key) && obj1[key] !== obj2[key]) res.push(key)\n  }\n\n  return res.sort()\n}",
  "openTest": "it('Created function findJSONDifferences', () => {\n  expect(findJSONDifferences).to.be.a('function');\n});\n\nit('findJSONDifferences(\\'{\"hello\":\"world\",\"hi\":\"hello\",\"you\":\"me\"}\\', \\'{\"hello\":\"world\",\"hi\":\"helloo\",\"you\":\"me\"}\\') should return [ \"hi\" ]', function() {\n  expect(findJSONDifferences('{\"hello\":\"world\",\"hi\":\"hello\",\"you\":\"me\"}', '{\"hello\":\"world\",\"hi\":\"helloo\",\"you\":\"me\"}')).to.deep.equal([ 'hi' ]);\n});\n\nit('findJSONDifferences(\\'{\"c\":\"ranked\",\"a\":\"wrong\"}\\', \\'{\"a\":\"rank\",\"c\":\"wro\"}\\') should return [ \"a\", \"c\" ]', function() {\n  expect(findJSONDifferences('{\"c\":\"ranked\",\"a\":\"wrong\"}', '{\"a\":\"rank\",\"c\":\"wro\"}')).to.deep.equal([ 'a', 'c' ]);\n});\n\nit('findJSONDifferences(\\'{\"x\":\"1\",\"y\":\"2\"}\\', \\'{\"x\":\"1\",\"y\":\"3\"}\\') should return [ \"y\" ]', function() {\n  expect(findJSONDifferences('{\"x\":\"1\",\"y\":\"2\"}', '{\"x\":\"1\",\"y\":\"3\"}')).to.deep.equal([ 'y' ]);\n});\n\nit('findJSONDifferences(\\'{\"name\":\"Alice\",\"age\":25}\\', \\'{\"name\":\"Alice\",\"age\":30}\\') should return [ \"age\" ]', function() {\n  expect(findJSONDifferences('{\"name\":\"Alice\",\"age\":25}', '{\"name\":\"Alice\",\"age\":30}')).to.deep.equal([ 'age' ]);\n});\n\nit('findJSONDifferences(\\'{\"a\":\"1\",\"b\":\"2\",\"c\":\"3\"}\\', \\'{\"a\":\"1\",\"b\":\"2\",\"c\":\"4\"}\\') should return [ \"c\" ]', function() {\n  expect(findJSONDifferences('{\"a\":\"1\",\"b\":\"2\",\"c\":\"3\"}', '{\"a\":\"1\",\"b\":\"2\",\"c\":\"4\"}')).to.deep.equal([ 'c' ]);\n});\n\nit('findJSONDifferences(\\'{\"key1\":\"value1\",\"key2\":\"value2\"}\\', \\'{\"key1\":\"value1\",\"key2\":\"value3\"}\\') should return [ \"key2\" ]', function() {\n  expect(findJSONDifferences('{\"key1\":\"value1\",\"key2\":\"value2\"}', '{\"key1\":\"value1\",\"key2\":\"value3\"}')).to.deep.equal([ 'key2' ]);\n});\n\nit('findJSONDifferences(\\'{\"a\":\"100\",\"b\":\"200\",\"c\":\"300\"}\\', \\'{\"a\":\"100\",\"b\":\"200\",\"c\":\"300\"}\\') should return []', function() {\n  expect(findJSONDifferences('{\"a\":\"100\",\"b\":\"200\",\"c\":\"300\"}', '{\"a\":\"100\",\"b\":\"200\",\"c\":\"300\"}')).to.deep.equal([]);\n});\n\nit('findJSONDifferences(\\'{\"a\":\"abc\",\"b\":\"def\"}\\', \\'{\"a\":\"xyz\",\"b\":\"def\"}\\') should return [ \"a\" ]', function() {\n  expect(findJSONDifferences('{\"a\":\"abc\",\"b\":\"def\"}', '{\"a\":\"xyz\",\"b\":\"def\"}')).to.deep.equal([ 'a' ]);\n});\n\nit('findJSONDifferences(\\'{\"a\":\"1\",\"b\":\"2\",\"c\":\"3\"}\\', \\'{\"a\":\"1\",\"b\":\"3\",\"c\":\"2\"}\\') should return [ \"b\", \"c\" ]', function() {\n  expect(findJSONDifferences('{\"a\":\"1\",\"b\":\"2\",\"c\":\"3\"}', '{\"a\":\"1\",\"b\":\"3\",\"c\":\"2\"}')).to.deep.equal([ 'b', 'c' ]);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}