{
  "questions": {
    "0": {
      "name": "Оператор ++",
      "variants": {
        "0": {
          "name": "складывает переменные два раза"
        },
        "1": {
          "name": "возводит переменную в квадрат"
        },
        "2": {
          "name": "увеличивает переменную на единицу"
        },
        "3": {
          "name": "приписывает к переменной знак плюс"
        }
      }
    },
    "1": {
      "name": "Оператор --",
      "variants": {
        "0": {
          "name": "извлекает корень"
        },
        "1": {
          "name": "уменьшает переменную на единицу"
        },
        "2": {
          "name": "не меняет переменную"
        },
        "3": {
          "name": "не существует"
        }
      }
    },
    "2": {
      "name": "Оператор ++ называется",
      "variants": {
        "0": {
          "name": "инкремент"
        },
        "1": {
          "name": "декремент"
        }
      }
    },
    "3": {
      "name": "Операторы ++ и -- можно применять только к переменным.",
      "variants": {
        "0": {
          "name": "да"
        },
        "1": {
          "name": "нет"
        }
      }
    },
    "4": {
      "name": "Укажите два действия, которые производит оператор ++ в примере ниже.",
      "description": "```javascript\nlet c = a++;\n```",
      "variants": {
        "0": {
          "name": "увеличивает значение на единицу"
        },
        "1": {
          "name": "уменьшает значение на единицу"
        },
        "2": {
          "name": "возвращает новое значение"
        },
        "3": {
          "name": "возвращает старое значение"
        }
      }
    },
    "5": {
      "name": "Укажите два действия, которые производит оператор -- в примере ниже.",
      "description": "```javascript\nlet c = --a;\n```",
      "variants": {
        "0": {
          "name": "увеличивает значение на единицу"
        },
        "1": {
          "name": "уменьшает значение на единицу"
        },
        "2": {
          "name": "возвращает новое значение"
        },
        "3": {
          "name": "возвращает старое значение"
        }
      }
    },
    "6": {
      "name": "Выберите результат примера, приведенного ниже.",
      "description": "```javascript\nlet a = 7;\nlet c = ++a;\nconsole.log(c, a);\n```",
      "variants": {
        "0": {
          "name": "c = 8; a = 8;"
        },
        "1": {
          "name": "c = 7; a = 8;"
        },
        "2": {
          "name": "c = 7; a = 7;"
        },
        "3": {
          "name": "c = 8; a = 7;"
        }
      }
    },
    "7": {
      "name": "Выберите результат примера, приведенного ниже.",
      "description": "```javascript\nlet a = 7;\nlet c = a--;\nconsole.log(c, a);\n```",
      "variants": {
        "0": {
          "name": "c = 6; a = 6;"
        },
        "1": {
          "name": "c = 7; a = 6;"
        },
        "2": {
          "name": "c = 6; a = 7;"
        },
        "3": {
          "name": "c = 7; a = 7;"
        }
      }
    },
    "8": {
      "name": "Выберите результат примера, приведенного ниже.",
      "description": "```javascript\nlet i = 1;\nconsole.log( 2 * i++ );\n```",
      "variants": {
        "0": {
          "name": "1"
        },
        "1": {
          "name": "2"
        },
        "2": {
          "name": "4"
        },
        "3": {
          "name": "6"
        }
      }
    },
    "9": {
      "name": "Выберите результат примера, приведенного ниже.",
      "description": "```javascript\nlet i = 1;\nconsole.log( 2 * ++i );\n```",
      "variants": {
        "0": {
          "name": "1"
        },
        "1": {
          "name": "2"
        },
        "2": {
          "name": "4"
        },
        "3": {
          "name": "6"
        }
      }
    }
  },
  "name": "JS Syntax. Вызов с присваиванием"
}