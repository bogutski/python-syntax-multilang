{
  "_id": "6696c2ca763f0712c198e59c",
  "content": {
    "ru": "### Обращение к свойствам объекта\n\nПовторим, как обращаться к свойствам объекта:\n\n```javascript\nconst person = {\n  name: 'Jack',\n  age: 25,\n  isAdult: true,\n  address: {\n    street: '150 Main',\n    city: 'New York',\n    state: 'NY'\n  }\n};\n\nconsole.log(person.name)                    // 'Jack'\nconsole.log(person.isAdult)                 // true\nconsole.log(person.address.city)            // 'New York'\n\nconsole.log(person['age'])                  // 25\nconsole.log(person['address']['state'])     // 'NY'\n```\n\nОбратиться к свойству объекта можно двумя способами: через `точку` или использовать `квадратные скобки`.\n\n\n\n### Изменение свойств объекта\n\nДавайте теперь создадим объект и изменим его свойства.\n\n```javascript\nconst car = {\n  brand: 'Ford',\n  color: 'white',\n  year: 2020\n}\nconsole.log(car);     // { brand: 'Ford', color: 'white', year: 2020 }\n\ncar.brand = 'Audi';\ncar.color = 'black';\ncar.year = 2021;\nconsole.log(car);     // { brand: 'Audi', color: 'black', year: 2021 }\n```\n\nТеперь создадим объект посложнее и будем использовать квадратные скобки для обращения к свойствам.\n\n```javascript\nconst student = {\n    firstName: 'Mike',\n    lastName: 'Smith',\n    address: {\n        street: '20 Atlantic',\n        city: 'Miami',\n        state: 'Florida'\n    }\n}\nconsole.log(student)   // {\n                       //   firstName: 'Mike',\n                       //   lastName: 'Smith',\n                       //   address: { street: '20 Atlantic', city: 'Miami', state: 'Florida' }\n                       // }\n\nstudent['firstName'] = 'Jack'                   // используем квадратные скобки для обращения по ключу\nstudent.address['street'] = '132 South Orange'  // используем точку и квадратные скобки для обращения по ключу\nstudent['address']['city'] = 'Orlando'          // используем только квадратные скобки для обращения по ключу\n\nconsole.log(student)   // {\n                       //   firstName: 'Jack',\n                       //   lastName: 'Smith',\n                       //   address: { street: '132 South Orange', city: 'Orlando', state: 'Florida' }\n                       // }\n```\n\n\n\n### Разница между `let` и `const`\n\nНе зависимо, какое ключевое слово было использовано при создании объекта: `let` или `const`, свойства объекта можно изменять.\n\nПотому что `объект` - это ссылочный тип данных, и при создании объекта сохраняется ссылка на него, и при изменении свойства ссылка меняться не будет.\n\nРазница только будет в том случае, когда мы будем присваивать созданной переменной новый объект.\n\nНапример:\n\n```javascript\nconst name = {\n    firstName: 'John',\n    lastName: 'Black',\n}\nname = {\n    firstName: 'Alice',\n    lastName: 'Black',\n}\n\n// в таком случае будет: `TypeError`\n```\nОшибка будет из-за того, что мы создаем новый объект и записываем новую ссылку в переменную, которая была создана при помощи ключевого слова `const`.\n\n\n\n### Функция суммирования значений объекта\n\nДавайте напишем функцию `sumObject`, которая будет суммировать значения объекта.\n\n```javascript\nfunction sumObject(object){\n    object.sum = object.num1 + object.num2;      // в свойство `sum` записываем результат суммирования\n    return object;                               // возвращаем обновленный объект\n}\n\nconsole.log(sumObject({num1: 5, num2: 10, sum: 0}))         // { num1: 5, num2: 10, sum: 15 }\nconsole.log(sumObject({num1: -123, num2: 746, sum: 0}))     // { num1: -123, num2: 746, sum: 623 }\n```\n",
    "en": "### Accessing object properties\n\nLet's repeat how to access object properties:\n\n```javascript\nconst person = {\n  name: 'Jack',\n  age: 25,\n  isAdult: true,\n  address: {\n    street: '150 Main',\n    city: 'New York',\n    state: 'NY'\n  }\n};\n\nconsole.log(person.name)                    // 'Jack'\nconsole.log(person.isAdult)                 // true\nconsole.log(person.address.city)            // 'New York'\n\nconsole.log(person['age'])                  // 25\nconsole.log(person['address']['state'])     // 'NY'\n```\n\nThere are two ways to refer to an object property: via `dot` or using `square brackets`.\n\n\n\n### Changing object properties\n\nLet's now create an object and change its properties.\n\n```javascript\nconst car = {\n  brand: 'Ford',\n  color: 'white',\n  year: 2020\n}\nconsole.log(car);     // { brand: 'Ford', color: 'white', year: 2020 }\n\ncar.brand = 'Audi';\ncar.color = 'black';\ncar.year = 2021;\nconsole.log(car);     // { brand: 'Audi', color: 'black', year: 2021 }\n```\n\nNow create a more complex object and use square brackets to refer to properties.\n\n```javascript\nconst student = {\n    firstName: 'Mike',\n    lastName: 'Smith',\n    address: {\n        street: '20 Atlantic',\n        city: 'Miami',\n        state: 'Florida'\n    }\n}\nconsole.log(student) // {\n                       // firstName: 'Mike',\n                       // lastName: 'Smith',\n                       // address: { street: '20 Atlantic', city: 'Miami', state: 'Florida' }\n                       // }\n\nstudent['firstName'] = 'Jack' // use square brackets to refer to the key\nstudent.address['street'] = '132 South Orange' // use a period and square brackets to address the key\nstudent['address']['city'] = 'Orlando' // use only square brackets for key reference\n\nconsole.log(student) // {\n                       // firstName: 'Jack',\n                       // lastName: 'Smith',\n                       // address: { street: '132 South Orange', city: 'Orlando', state: 'Florida' }\n                       // }\n```\n\n\n\n### The difference between `let` and `const`\n\nNo matter which keyword was used to create the object: `let` or `const`, the object properties can be changed.\n\nBecause `object` is a reference data type, and when you create an object, a reference to it is saved, and when you change the property, the reference will not change.\n\nThe only difference will be when we assign a new object to the created variable.\n\nFor example:\n\n```javascript\nconst name = {\n    firstName: 'John',\n    lastName: 'Black',\n}\nname = {\n    firstName: 'Alice',\n    lastName: 'Black',\n}\n\n// in this case it will be: `TypeError`\n```\nThe error will be because we create a new object and write a new reference to a variable that was created with the `const` keyword.\n\n\n\n### The function of summing up the values of the object\n\nLet's write a function called `sumObject` that will summarize the values of an object.\n\n```javascript\nfunction sumObject(object){\n    object.sum = object.num1 + object.num2; // write the result of summation to the `sum` property\n    return object; // return the updated object\n}\n\nconsole.log(sumObject({num1: 5, num2: 10, sum: 0})) // // { num1: 5, num2: 10, sum: 15 }\nconsole.log(sumObject({num1: -123, num2: 746, sum: 0})) // // { num1: -123, num2: 746, sum: 623 }\n```\n",
    "es": "# Изменение свойств объекта language: es"
  },
  "video": {
    "ru": "https://youtu.be/CwVa_5TVN9U",
    "en": "",
    "es": ""
  }
}