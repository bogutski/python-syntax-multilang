{
  "_id": "6696c2ca763f0712c198dbbc",
  "name": {
    "en": "\"Stylish\" variables",
    "ru": "\"Стильные\" переменные"
  },
  "instruction": {
    "en": "![](https://course-qa-basics.s3.us-west-1.amazonaws.com/section-2-course-4-task-2.png)\n\n`Camel case` is the practice of writing phrases in such a way that each word or abbreviation in the middle of a phrase\n begins with a capital letter, with no intervening spaces or punctuation. For example, `camelCase`.\nThe `camelCase` style is used for variable names in programming.\n\nFor the assignment, select variables from the list whose names are written in the camelCase style,\ncreate variables with these names, and assign values to the variables in the form of a string corresponding to the name.\n\nThe list of names:\n`eBay`; `dayReport`; `number_of_tasks`; `dayOfWeek`; `redbook`; `userLogin`.\n\nHere is an example that is fundamentally similar to what you need to do,\nbut adapt it to the requirements of the task:\n```javascript\nconst iPhone = 'iPhone';\n```",
    "ru": "![](https://course-qa-basics.s3.us-west-1.amazonaws.com/section-2-course-4-task-2.png)\n\n`Camel case` - это практика написания фраз таким образом, что каждое слово или аббревиатура в середине фразы\n начинается с заглавной буквы, без промежуточных пробелов или знаков препинания. Например, `camelCase`.\nСтиль `camelCase` используется для имен переменных в программировании.\n\nДля выполнения задания выберите из списка переменные, имена которых записаны в стиле camelCase,\nсоздайте переменные с этими именами и присвойте переменным значения в виде строки, соответствующей имени.\n\nСписок имен:\n`eBay`;  `dayReport`; `number_of_tasks`; `dayOfWeek`; `redbook`; `userLogin`.\n\nПриведем пример, который принципиально похож на то что нужно сделать,\nно адаптируйте его к требованиям задачи:\n```javascript\nconst iPhone  = 'iPhone';\n```"
  },
  "initialSolution": "",
  "completedSolution": "const eBay = 'eBay';\nconst dayReport = 'dayReport';\nconst dayOfWeek = 'dayOfWeek';\nconst userLogin = 'userLogin';",
  "openTest": "it('the variable `eBay` exists and has a value', () => {\n  expect(eBay).not.undefined;\n});\n\nit('the variable `eBay` is of type string', () => {\n  expect(eBay).a('string');\n});\n\nit('the variable `eBay` has the correct value', () => {\n  expect(eBay).equal('eBay');\n});\n\nit('the variable `dayReport` exists and has a value', () => {\n  expect(dayReport).not.undefined;\n});\n\nit('the variable `dayReport` is of type string', () => {\n  expect(dayReport).a('string');\n});\n\nit('the `dayReport` variable has the correct value', () => {\n  expect(dayReport).equal('dayReport');\n});\n\nit('the `dayOfWeek` variable exists and has a value', () => {\n  expect(dayOfWeek).not.undefined;\n});\n\nit('the `dayOfWeek` variable is of type string', () => {\n  expect(dayOfWeek).a('string');\n});\n\nit('the `dayOfWeek` variable has the correct value', () => {\n  expect(dayOfWeek).equal('dayOfWeek');\n});\n\nit('the variable `userLogin` exists and has a value', () => {\n  expect(userLogin).not.undefined;\n});\n\nit('the variable `userLogin` is of type string', () => {\n  expect(userLogin).a('string');\n});\n\nit('the `userLogin` variable has the correct value', () => {\n  expect(userLogin).equal('userLogin');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "```javascript\nconst eBay = 'eBay';\nconst dayReport = 'dayReport';\nconst dayOfWeek = 'dayOfWeek';\nconst userLogin = 'userLogin';\n```",
    "ru": "```javascript\nconst eBay = 'eBay';\nconst dayReport = 'dayReport';\nconst dayOfWeek = 'dayOfWeek';\nconst userLogin = 'userLogin';\n```"
  }
}