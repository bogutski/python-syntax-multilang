{
  "_id": "6696c2ca763f0712c198e955",
  "name": {
    "en": "A string of numbers",
    "ru": "Строка из чисел"
  },
  "instruction": {
    "en": "Fix a bug in the code so that the `stringOfNumbers` function returns a string consisting of numbers from min to max, including them.\n\nThe numbers must be separated by a space.\n\nExamples of running the function:\n```javascript\nstringOfNumbers(0, 0) // '0'\nstringOfNumbers(-2, 2) // '-2 -1 0 1 2'\nstringOfNumbers(10, 15) // '10 11 12 13 14 15'\n```",
    "ru": "Исправьте ошибку в коде, чтобы функция `stringOfNumbers` возвращала строку, состоящую из чисел от min до max, включая их.\n\nЧисла должны разделяться пробелом.\n\nПримеры запуска функции:\n```javascript\nstringOfNumbers(0, 0) // '0'\nstringOfNumbers(-2, 2) // '-2 -1 0 1 2'\nstringOfNumbers(10, 15) // '10 11 12 13 14 15'\n```"
  },
  "initialSolution": "function stringOfNumbers(min, max) {\n  let result = '';\n  for (let i = max i <= min; i++) {\n    result -= i + ' ';\n  }\n  return string.trim;\n}",
  "completedSolution": "function stringOfNumbers(min, max) {\n  let result = '';\n  for (let i = min; i <= max; i++) {\n    result += i + ' ';\n  }\n  return result.trim();\n}",
  "openTest": "it('Created function stringOfNumbers', () => {\n  expect(stringOfNumbers).to.be.a('function');\n});\n\nit(\"stringOfNumbers(5, 10) should return '5 6 7 8 9 10'\", () => {\n  expect(stringOfNumbers(5, 10)).to.equal('5 6 7 8 9 10');\n});\n\nit(\"stringOfNumbers(10, 15) should return '10 11 12 13 14 15'\", () => {\n  expect(stringOfNumbers(10, 15)).to.equal('10 11 12 13 14 15');\n});\n\nit(\"stringOfNumbers(-5, 5) should return '-5 -4 -3 -2 -1 0 1 2 3 4 5'\", () => {\n  expect(stringOfNumbers(-5, 5)).to.equal('-5 -4 -3 -2 -1 0 1 2 3 4 5');\n});\n\nit(\"stringOfNumbers(0, 0) should return '0'\", () => {\n  expect(stringOfNumbers(0, 0)).to.equal('0');\n});\n\nit(\"stringOfNumbers(999, 1000) should return '999 1000'\", () => {\n  expect(stringOfNumbers(999, 1000)).to.equal('999 1000');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}