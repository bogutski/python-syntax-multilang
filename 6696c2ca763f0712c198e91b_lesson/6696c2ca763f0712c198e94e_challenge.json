{
  "_id": "6696c2ca763f0712c198e94e",
  "name": {
    "en": "Separating letters into upper and lower case",
    "ru": "Разделение букв на верхний и нижний регистр"
  },
  "instruction": {
    "en": "Write a function called lettersDivider that takes a string of upper- and lower-case letters.\n\nThe function should return an array of two strings. The first line should contain all letters in lowercase and the second line should contain all letters in uppercase.\n\nAn example of a letter case check:\n```javascript\nlet str = 'world';\nconsole.log(str[0] === str[0].toLowerCase()); // true\n```\n\nAn example of running the function:\n```javascript\nlettersDivider('HeLLOwoRLD'); // [ 'ewo', 'HLLORLD' ]\nlettersDivider('www'); // [ 'www', '' ]\nlettersDivider(''); // [ '', '' ]\n```",
    "ru": "Напиши функцию `lettersDivider`, которая принимает строку с верхним и нижним регистром букв.\n\nФункция должна вернуть массив из двух строк. Первая строка должна содержать все буквы в нижнем регистре, а вторая - в верхнем.\n\nПример проверки на регистр буквы:\n```javascript\nlet str = 'world';\nconsole.log(str[0] === str[0].toLowerCase()); // true\n```\n\nПример запуска функции:\n```javascript\nlettersDivider('HeLLOwoRLD'); // [ 'ewo', 'HLLORLD' ]\nlettersDivider('www'); // [ 'www', '' ]\nlettersDivider(''); // [ '', '' ]\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function lettersDivider(string){\n  let lowerCase = '';\n  let upperCase = '';\n  for (let i = 0; i < string.length; i++){\n    if (string[i] === string[i].toLowerCase()) lowerCase += string[i];\n    else upperCase += string[i];\n  }\n  return [lowerCase, upperCase];\n}",
  "openTest": "it('Created function lettersDivider', () => {\n  expect(lettersDivider).to.be.a('function');\n});\n\nit(\"lettersDivider('HelloWorld') should return ['elloorld', 'HW']\", () => {\n  expect(lettersDivider('HelloWorld')).to.deep.equal(['elloorld', 'HW']);\n});\n\nit(\"lettersDivider('hELLOwORLD') should return ['hllwrd', 'ELOWRD']\", () => {\n  expect(lettersDivider('hELLOwORLD')).to.deep.equal(['hw', 'ELLOORLD']);\n});\n\nit(\"lettersDivider('abc') should return ['abc', '']\", () => {\n  expect(lettersDivider('abc')).to.deep.equal(['abc', '']);\n});\n\nit(\"lettersDivider('QWERTYUIOP') should return ['', 'QWERTYUIOP']\", () => {\n  expect(lettersDivider('QWERTYUIOP')).to.deep.equal(['', 'QWERTYUIOP']);\n});\n\nit(\"lettersDivider('') should return ['', '']\", () => {\n  expect(lettersDivider('')).to.deep.equal(['', '']);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}