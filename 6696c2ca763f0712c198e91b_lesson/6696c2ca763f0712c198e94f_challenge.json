{
  "_id": "6696c2ca763f0712c198e94f",
  "name": {
    "en": "Checking for inverted lines",
    "ru": "Проверка на перевернутую строку"
  },
  "instruction": {
    "en": "Write a function `reversedString` that takes two arguments: `string` and `reversedString`.\n\nIn this problem you will need to check whether `string` is an inverted version of `reversedString`.\n\nReverse `string` and compare it with `reversedString`. If they match, return `true`, otherwise `false`.\n\nExamples of running a function:\n```javascript\nreversedString('hello', 'olleh'); // true\nreversedString('apple', 'apple'); // false\nreversedString('123', ''); // false\n```",
    "ru": "Напишите функцию `reversedString`, которая принимает два аргумента: `string` и `reversedString`.\n\nВ этой задаче вам нужно будет проверить, является ли `string` перевернутой версией `reversedString`.\n\nРазверните `string` задом наперед и сравните с `reversedString`. Если они совпадают, верните `true`, иначе `false`.\n\nПримеры запуска функции:\n```javascript\nreversedString('hello', 'olleh'); // true\nreversedString('apple', 'apple'); // false\nreversedString('123', ''); // false\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function reversedString(string, reversedString) {\n  let newStr = '';\n  for (let i = string.length - 1; i >= 0; i--) {\n    newStr += string[i];\n  }\n  return newStr === reversedString;\n}",
  "openTest": "it('Created function reversedString', () => {\n  expect(reversedString).to.be.a('function');\n});\n\nit('reversedString(\"hello\", \"olleh\") should return true', () => {\n  expect(reversedString('hello', 'olleh')).to.be.true;\n});\n\nit('reversedString(\"hello\", \"hello\") should return false', () => {\n  expect(reversedString('hello', 'hello')).to.be.false;\n});\n\nit('reversedString(\"1234 56789\", \"98765 4321\") should return true', () => {\n  expect(reversedString('1234 56789', '98765 4321')).to.be.true;\n});\n\nit('reversedString(\"1 2 3 4 5\", \"5 4 3 2 1\") should return true', () => {\n  expect(reversedString('1 2 3 4 5', '5 4 3 2 1')).to.be.true;\n});\n\nit('reversedString(\"true\", \"eurt\") should return true', () => {\n  expect(reversedString('true', 'eurt')).to.be.true;\n});\n\nit('reversedString(\"check\", \"\") should return false', () => {\n  expect(reversedString('check', '')).to.be.false;\n});\n\nit('reversedString(\"\", \"check\") should return false', () => {\n  expect(reversedString('', 'check')).to.be.false;\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}