{
  "questions": {
    "0": {
      "description": "```\nlet a;\n```",
      "name": "Если переменной не присвоить значение (как показано в примере ниже), то она будет равна",
      "variants": {
        "0": {
          "name": "null"
        },
        "1": {
          "name": "undefined"
        },
        "2": {
          "name": "пустая строка"
        },
        "3": {
          "name": "получим ошибку"
        }
      }
    },
    "1": {
      "name": "Переменную можно использовать до ее объявления.",
      "variants": {
        "0": {
          "name": "Да"
        },
        "1": {
          "name": "Нет"
        }
      }
    },
    "2": {
      "name": "Значение одной переменной может быть скопировано в другую переменную.",
      "variants": {
        "0": {
          "name": "Да"
        },
        "1": {
          "name": "Нет"
        }
      }
    },
    "3": {
      "description": "```\nlet a = 2;\nlet b = 2;\na = b;\nb = a;\n```",
      "name": "Сможет ли такой код работать без ошибок?",
      "variants": {
        "0": {
          "name": "Да"
        },
        "1": {
          "name": "Нет"
        }
      }
    },
    "4": {
      "name": "Выберите вариант(-ы), где создана переменная и в нее присвоена пустая строка.",
      "variants": {
        "0": {
          "name": "let name = '';   // тут две одиночные кавычки"
        },
        "1": {
          "name": "let name = ' ';  // тут две одиночные кавычки и между ними пробел"
        },
        "2": {
          "name": "const name = '';  // тут две одиночные кавычки"
        },
        "3": {
          "name": "let name;"
        },
        "4": {
          "name": "let name = null;"
        },
        "5": {
          "name": "var name = '';  // тут две одиночные кавычки"
        },
        "6": {
          "name": "let name = empty;"
        }
      }
    },
    "5": {
      "description": "```\nlet a = 2;\na = a - a;\n```",
      "name": "Сможет ли такой код работать без ошибок?",
      "variants": {
        "0": {
          "name": "Да"
        },
        "1": {
          "name": "Нет"
        }
      }
    },
    "6": {
      "description": "```\nlet a = 1; // число\na = '1'; //изменили на строку\n```",
      "name": "Можно ли изменять значение переменной и записывать в нее другой тип данных?",
      "variants": {
        "0": {
          "name": "Да"
        },
        "1": {
          "name": "Нет"
        }
      }
    },
    "7": {
      "name": "Можно ли в переменной присвоить функцию?",
      "variants": {
        "0": {
          "name": "Да"
        },
        "1": {
          "name": "Нет"
        }
      }
    },
    "8": {
      "description": "```\nlet a;\na = 2 * 5 + 3;\n```",
      "name": "Согласно таблице приоритетов действие присваивание (=) в примере ниже произойдет",
      "variants": {
        "0": {
          "name": "первым"
        },
        "1": {
          "name": "последним"
        }
      }
    },
    "9": {
      "description": "```\nlet a, b, c;\na = b = c = 2 + 2;\n```",
      "name": "Какое действие в примере ниже произойдет первым?",
      "variants": {
        "0": {
          "name": "вычислится 2 + 2"
        },
        "1": {
          "name": "2 + 2 присвоится в c"
        },
        "2": {
          "name": "c присвоится в b"
        },
        "3": {
          "name": "b присвоится в a"
        }
      }
    }
  },
  "name": "JS Syntax. Чудеса присваивания"
}