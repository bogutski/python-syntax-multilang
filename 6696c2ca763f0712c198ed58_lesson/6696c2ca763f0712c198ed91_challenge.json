{
  "_id": "6696c2ca763f0712c198ed91",
  "name": {
    "en": "Find a duplicate of the last word in the string",
    "ru": "Найти дубликат последнего слова в строке"
  },
  "instruction": {
    "en": "Write a function `lastDuplicate` that takes a string and returns `true` if there is a duplicate of the last word in the string `str`, `false` otherwise.\n\nThere is only one space between words.\n\nIf the string is empty or has one word in it (in other words, no spaces), the function should return `false`.\n\nExamples of running the function:\n```javascript\nlastDuplicate('Little A from Column A'); // true\nlastDuplicate('Fight Fire With Fire') // true\nlastDuplicate('a wolf, Lone Wolf'); // false\nlastDuplicate('Raining Cats and Dogs') // false\nlastDuplicate('Little Art from Column Ar') // false\n```",
    "ru": "Напишите функцию `lastDuplicate`, которая принимает строку и возвращает `true`, если есть дубликат последнего слова\n в строке `str`, `false` в противном случае.\n\nМежду словами есть лишь один пробел.\n\nЕсли строка пустая или в ней одно слово (иными словами нет пробелов), то функция должна вернуть `false`.\n\n\nПримеры запуска функции:\n```javascript\nlastDuplicate('Little A from Column A'); // true\nlastDuplicate('Fight Fire With Fire') // true\nlastDuplicate('a wolf, Lone Wolf'); // false\nlastDuplicate('Raining Cats and Dogs') // false\nlastDuplicate('Little Art from Column Ar') // false\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function lastDuplicate(str) {\n  let lastWord = '';\n  let lastSpace = str.lastIndexOf(' ');\n  for (let i = lastSpace + 1 ; i < str.length; i++) {\n    lastWord += str[i];\n  }\n  return str.lastIndexOf(lastWord + ' ', lastSpace) !== -1;\n}",
  "openTest": "it('Created function lastDuplicate', () => {\n  expect(lastDuplicate).to.be.a('function');\n});\n\nit(\"lastDuplicate('chery chery') should return true\", () => {\n  expect(lastDuplicate('chery chery')).true\n});\n\nit(\"lastDuplicate('red chery') should return false\", () => {\n  expect(lastDuplicate('red chery')).false\n});\n\nit(\"lastDuplicate('chery') should return false\", () => {\n  expect(lastDuplicate('chery')).false\n});\n\nit(\"lastDuplicate('Little A from Column A') should return true\", () => {\n  expect(lastDuplicate('Little A from Column A')).true\n});\n\nit(\"lastDuplicate('Fight Fire With Fire') should return true\", () => {\n  expect(lastDuplicate('Fight Fire With Fire')).true\n});\n\nit(\"lastDuplicate('a wolf, Lone Wolf') should return false\", () => {\n  expect(lastDuplicate('a wolf, Lone Wolf')).false\n});\n\nit(\"lastDuplicate('Raining Cats and Dogs') should return false\", () => {\n  expect(lastDuplicate('Raining Cats and Dogs')).false\n});\n\nit(\"lastDuplicate('Little Art from Column Li') should return false\", () => {\n  expect(lastDuplicate('Little Art from Column Li')).false\n});\n\nit(\"lastDuplicate('Little Art from Column Ar') should return false\", () => {\n  expect(lastDuplicate('Little Art from Column Ar')).false\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}