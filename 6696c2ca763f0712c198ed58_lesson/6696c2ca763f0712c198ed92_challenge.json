{
  "_id": "6696c2ca763f0712c198ed92",
  "name": {
    "en": "Delete repeated letters",
    "ru": "Удалить повторяющийся буквы"
  },
  "instruction": {
    "en": "Write a function `removeDuplicates` that takes a string.\n\nThe function should return a new string in which repeated characters have been removed.\n\nSpaces between words should remain.\n\nStart the loop from the beginning of the string, for example: the string `123 145 156` should return `123 45 6`.\n\nAn example of running a function:\n```javascript\nremoveDuplicates('hello world'); // 'helo wrd'\nremoveDuplicates('a leg up'); // 'a leg up'\nremoveDuplicates('hands down'); // 'hands ow'\n```",
    "ru": "Напишите функцию `removeDuplicates`, которая принимает строку.\n\nФункция должна вернуть новую строку, в которой удалены повторяющиеся символы.\n\nПробелы между словами должны остаться.\n\nНачинайте цикл с начала строки, например: строка `123 145 156` должна вернуть `123 45 6`.\n\n\nПример запуска функции:\n```javascript\nremoveDuplicates('hello world'); // 'helo wrd'\nremoveDuplicates('a leg up'); // 'a leg up'\nremoveDuplicates('hands down'); // 'hands ow'\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function removeDuplicates(str) {\n  let newStr = \"\";\n  for (let i = 0; i < str.length; i++) {\n    if (newStr.indexOf(str[i]) === -1 || str[i] === ' ') {\n      newStr += str[i];\n    }\n  }\n  return newStr.trim();\n}",
  "openTest": "it('Created function removeDuplicates', () => {\n  expect(removeDuplicates).to.be.a('function');\n});\n\nit(\"removeDuplicates('hello world') should return 'helo wrd'\", () => {\n  expect(removeDuplicates('hello world')).to.equal('helo wrd')\n});\n\nit(\"removeDuplicates('a leg up') should return 'a leg up'\", () => {\n  expect(removeDuplicates('a leg up')).to.equal('a leg up')\n});\n\nit(\"removeDuplicates('what am i, chopped liver?') should return 'what m i, coped lvr?'\", () => {\n  expect(removeDuplicates('what am i, chopped liver?')).to.equal('what m i, coped lvr?')\n});\n\nit(\"removeDuplicates('hands down') should return 'hands ow'\", () => {\n  expect(removeDuplicates('hands down')).to.equal('hands ow')\n});\n\nit(\"removeDuplicates('jumping the gun') should return 'jumping the'\", () => {\n  expect(removeDuplicates('jumping the gun')).to.equal('jumping the')\n});\n\nit(\"removeDuplicates('a  b a  c  daa  a ') should return 'a  b   c  d'\", () => {\n  expect(removeDuplicates('a  b a  c  daa  a ')).to.equal('a  b   c  d')\n});\n\nit(\"removeDuplicates('123 145 156 ') should return '123 45 6'\", () => {\n  expect(removeDuplicates('123 145 156 ')).to.equal('123 45 6')\n});\n\nit(\"removeDuplicates(' ') should return ''\", () => {\n  expect(removeDuplicates(' ')).to.equal('')\n});\n\nit(\"removeDuplicates('') should return ''\", () => {\n  expect(removeDuplicates('')).to.equal('')\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}