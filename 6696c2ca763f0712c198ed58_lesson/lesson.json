{
  "_id": "6696c2ca763f0712c198ed58",
  "content": {
    "ru": "### Удалить из строки все символы дубликаты\nДавайте научимся, как удалять дубликаты в строке.\n\n#### Удаление повторяющихся символов\n```javascript\nconst str = 'abc alert beep';\n```\nМы не будем удалять символы из данной строки, мы создадим копию строки, в которой не будет дубликатов.\n\nДля строки выше мы предполагаем получить результат\n`abc lertp` - все дублирующие символы удалены.\n```javascript\nconst str = 'abc alert beep';\n\nlet res = '';  //создадим результирующую строку, по умолчанию равной пустой строке\n               \nconst symbols = {} //создаем объект. который будет хранить использованные символы. Пояснение ниже\nfor (let i = 0; i < str.length; i++) {\n  if (!symbols[str[i]]) {  //если в объекте текущего символа нет \n    symbols[str[i]] = 1;   //то мы добавляем его в объект как ключ со значением 1\n    res += str[i];        //и добавляем этот символ в нашу результирующую строку\n  }                       //если символ встречается уже в объекте, то мы его пропускаем и цикл переходит к следующей итерации\n}\n\nconsole.log(res)  //'abc lertp' - мы получили то, что хотели\n```\nОбъект `symbols` будет наполняться по мере прохождения цикла.\n\nНапример, после первой итерации цикла он будет выглядеть как\n```javascript\nconst symbols = {\n  a: 1\n}\n```\nПосле второй:\n```javascript\nconst symbols = {\n  a: 1,\n  b: 1\n}\n```\n\nДавайте посмотрим, что выводится в консоль объект `symbols` после решении нашей задачи\n```javascript\nconst str = 'abc alert beep';\n\nlet res = '';  \nconst symbols = {} \nfor (let i = 0; i < str.length; i++) {\n  if (!symbols[str[i]]) {\n    symbols[str[i]] = 1;\n    res += str[i];\n  }\n}\n\nconsole.log(symbols)  \n//{' ': 1, a: 1, b: 1, c: 1, e: 1, l: 1, p: 1,  r: 1, t: 1}\n```\n\nТакже есть неправильный вариант решения, который существует, но на собеседованиях его лучше не использовать:\n\nМы берем какую-то букву, находим индекс этой буквы, а потом проверяем с помощью `indexOf` встречается ли такая буква в строке еще раз (то есть значение не равно -1)\n\nНо данное решение не всегда может работать правильно. Можете попробовать его самостоятельно",
    "en": "### Remove all duplicate characters from the string\nLet's learn how to remove duplicates in a string.\n\n#### Removing repetitive characters\n```javascript\nconst str = 'abc alert beep';\n```\nWe will not remove characters from this string, we will create a copy of the string with no duplicates.\n\nFor the line above we assume the result\n`abc lertp` - all duplicate characters removed.\n```javascript\nconst str = 'abc alert beep';\n\nlet res = ''; //create the resulting string, which defaults to an empty string\n\nconst symbols = {} //create an object to store the characters used. Explanation below\nfor (let i = 0; i < str.length; i++) {\n  if (!symbols[str[i]]) { //if there is no current symbol in the object \n    symbols[str[i]] = 1; //then we add it to the object as a key with value 1\n    res += str[i]; //and we add this symbol to our result string\n  } //if the symbol is already in the object, we skip it and the loop advances to the next iteration\n}\n\nconsole.log(res) //'abc lertp' - we got what we wanted\n```\nThe `symbols` object will be filled as the cycle progresses.\n\nFor example, after the first iteration of the loop it will look like\n```javascript\nconst symbols = {\n  a: 1\n}\n```\nAfter the second:\n```javascript\nconst symbols = {\n  a: 1,\n  b: 1\n}\n```\n\nLet's see what the `symbols` object outputs to the console after solving our problem\n```javascript\nconst str = 'abc alert beep';\n\nlet res = '';  \nconst symbols = {} \nfor (let i = 0; i < str.length; i++) {\n  if (!symbols[str[i]]) {\n    symbols[str[i]] = 1;\n    res += str[i];\n  }\n}\n\nconsole.log(symbols)  \n//{' ': 1, a: 1, b: 1, c: 1, e: 1, l: 1, p: 1,  r: 1, t: 1}\n```\n\nThere is also a wrong solution that exists, but it is better not to use it in interviews:\n\nWe take some letter, find the index of this letter, and then use `indexOf` to check if this letter occurs again in the string (that is, the value is not equal to -1)\n\nBut this solution may not always work correctly. You can try it yourself",
    "es": "# Удалить из строки все символы дубликаты language: es"
  },
  "video": {
    "ru": "https://youtu.be/YvNNWg1u3j0",
    "en": "",
    "es": ""
  }
}