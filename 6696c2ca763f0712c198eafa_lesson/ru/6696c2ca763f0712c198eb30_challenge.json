{
  "name": "Составить предложение из отдельных слов",
  "instruction": "Создайте функцию `wordsToSentence`, которая принимает массив `words`, состоящий из непустых строк, и возвращает строку, составленную из элементов массива, разделенных пробелами.\n\nПервое слово должно начинаться с заглавной буквы, а остальные слова должны быть в нижнем регистре.\n\nВ конце предложения должна быть точка.\n\nЕсли массив пустой, то функция должна вернуть пустую строку.\n\nАлгоритм решения задачи:\n\n1. Проверить, что массив не пустой. Если пустой, то вернуть пустую строку.\n\n2. Создать переменную `sentence` и присвоить ей начальное значение `''`.\n\n3. Привести ПЕРВУЮ букву первого слова к верхнему регистру, а остальные буквы к нижнему регистру и добавить их в переменную `sentence`.\n\n4. Создать цикл по всем элементам массива, начиная со второго элемента. В цикле:\n\n- добавлять к переменной `sentence` пробел и очередное слово, приведенное к нижнему регистру.\n\n5. Добавить в конец переменной `sentence` точку.\n\n6. Вернуть переменную `sentence`.\n\nПример изменения первой буквы слова на заглавную:\n\n```javascript\nconst word = 'hello';\nlet capitalizedWord = word[0].toUpperCase();\nfor (let i = 1; i < word.length; i += 1) { // начинаем с 1, чтобы не изменять первую букву\n  capitalizedWord += word[i];\n}\nconsole.log(capitalizedWord);  // \"Hello\"\n```\n\nТеперь рассмотрим пример с массивом из двух слов - нужно привести первую букву первого слова к верхнему регистру, а остальные буквы этого слова к нижнему регистру:\n\n```javascript\nconst arr = ['hELLO', 'world'];\nlet firstWord = arr[0][0].toUpperCase(); // первая буква первого слова в массиве\nfor (let i = 1; i < arr[0].length; i += 1) {\n  firstWord  = firstWord + arr[0][i].toLowerCase();\n}\nconsole.log(firstWord); // \"Hello\"\n```\n\nПримеры вызова функции:\n\n```javascript\nwordsToSentence(['hello', 'world']); // \"Hello world.\"\nwordsToSentence(['iT, 'IS', 'GoING', 'to', 'raiN']); // \"It is going to rain.\"\nwordsToSentence(['']); // \"\"\n```",
  "instructions": {}
}