{
  "name": "Выбрать из массива все слова, которые содержат заданную букву",
  "instruction": "Функция `filterByLetter` принимает 2 аргумента:\n\n* массив `words`, состоящий из строк\n* строку `letter`, которая может состоять из одной буквы или быть пустой.\n\nФункция должна вернуть строку, составленную из тех элементов массива, в которых содержится буква `letter`.\nСлова в строке должны быть разделены точками с запятой, после последнего слова точка с запятой не ставится.\n\nПоиск буквы в слове должен быть независимым от регистра - приведите букву и слово к одному регистру перед сравнением.\n(Слово должно быть добавлено в строку результата в том регистре, в котором оно было в массиве.)\n\nЕсли переданная строка `letter` пустая, то фильтрация по букве не производится, функция возвращает все слова массива.\n\nЕсли переданный массив пустой или в массиве нет слов с нужной буквой, то функция должна вернуть пустую строку.\n\nПримеры вызова функции:\n\n```javascript\nfilterByLetter(['colors', 'war', 'cast', 'worlds'], 'x'); // ''\nfilterByLetter(['colors', 'War', 'cast', 'worlds'], 'W'); // 'War;worlds'\nfilterByLetter(['colors', 'war', 'cast', 'worlds'], ''); // 'colors;war;cast;worlds' - фильтр выключен\nfilterByLetter([], 'z'); // ''\n```\n\nОбратите внимание на то, как работает метод `indexOf`: в случае, если его аргументом является пустая строка, он всегда возвращает `0`!",
  "instructions": {}
}