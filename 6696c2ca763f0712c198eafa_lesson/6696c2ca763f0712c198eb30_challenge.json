{
  "_id": "6696c2ca763f0712c198eb30",
  "name": {
    "en": "Make a sentence out of separate words",
    "ru": "Составить предложение из отдельных слов"
  },
  "instruction": {
    "en": "Create a function `wordsToSentence` that takes an array `words` consisting of non-empty strings and returns a string composed of the elements of the array separated by spaces.\n\nThe first word should start with a capital letter, and the rest of the words should be in lowercase.\n\nThere should be a period at the end of the sentence.\n\nIf the array is empty, the function should return an empty string.\n\nSolution algorithm:\n\n1. Check if the array is not empty. If it is empty, return an empty string.\n\n2. Create a variable `sentence` and assign it an initial value of `''`.\n\n3. Convert the FIRST letter of the first word to uppercase and the rest of the letters to lowercase, and add them to the variable `sentence`.\n\n4. Create a loop through all the elements of the array, starting from the second element. In the loop:\n\n- add a space and the next word, converted to lowercase, to the variable `sentence`.\n\n5. Add a period at the end of the variable `sentence`.\n\n6. Return the variable `sentence`.\n\nExample of changing the first letter of a word to uppercase:\n\n```javascript\nconst word = 'hello';\nlet capitalizedWord = word[0].toUpperCase();\nfor (let i = 1; i < word.length; i += 1) { // start from 1 to not change the first letter\n  capitalizedWord += word[i];\n}\nconsole.log(capitalizedWord);  // \"Hello\"\n```\n\nNow let's consider an example with an array of two words - we need to convert the first letter of the first word to uppercase and the rest of the letters of that word to lowercase:\n\n```javascript\nconst arr = ['hELLO', 'world'];\nlet firstWord = arr[0][0].toUpperCase(); // first letter of the first word in the array\nfor (let i = 1; i < arr[0].length; i += 1) {\n  firstWord  = firstWord + arr[0][i].toLowerCase();\n}\nconsole.log(firstWord); // \"Hello\"\n```\n\nExamples of function calls:\n\n```javascript\nwordsToSentence(['hello', 'world']); // \"Hello world.\"\nwordsToSentence(['iT', 'IS', 'GoING', 'to', 'raiN']); // \"It is going to rain.\"\nwordsToSentence(['']); // \"\"\n```",
    "ru": "Создайте функцию `wordsToSentence`, которая принимает массив `words`, состоящий из непустых строк, и возвращает строку, составленную из элементов массива, разделенных пробелами.\n\nПервое слово должно начинаться с заглавной буквы, а остальные слова должны быть в нижнем регистре.\n\nВ конце предложения должна быть точка.\n\nЕсли массив пустой, то функция должна вернуть пустую строку.\n\nАлгоритм решения задачи:\n\n1. Проверить, что массив не пустой. Если пустой, то вернуть пустую строку.\n\n2. Создать переменную `sentence` и присвоить ей начальное значение `''`.\n\n3. Привести ПЕРВУЮ букву первого слова к верхнему регистру, а остальные буквы к нижнему регистру и добавить их в переменную `sentence`.\n\n4. Создать цикл по всем элементам массива, начиная со второго элемента. В цикле:\n\n- добавлять к переменной `sentence` пробел и очередное слово, приведенное к нижнему регистру.\n\n5. Добавить в конец переменной `sentence` точку.\n\n6. Вернуть переменную `sentence`.\n\nПример изменения первой буквы слова на заглавную:\n\n```javascript\nconst word = 'hello';\nlet capitalizedWord = word[0].toUpperCase();\nfor (let i = 1; i < word.length; i += 1) { // начинаем с 1, чтобы не изменять первую букву\n  capitalizedWord += word[i];\n}\nconsole.log(capitalizedWord);  // \"Hello\"\n```\n\nТеперь рассмотрим пример с массивом из двух слов - нужно привести первую букву первого слова к верхнему регистру, а остальные буквы этого слова к нижнему регистру:\n\n```javascript\nconst arr = ['hELLO', 'world'];\nlet firstWord = arr[0][0].toUpperCase(); // первая буква первого слова в массиве\nfor (let i = 1; i < arr[0].length; i += 1) {\n  firstWord  = firstWord + arr[0][i].toLowerCase();\n}\nconsole.log(firstWord); // \"Hello\"\n```\n\nПримеры вызова функции:\n\n```javascript\nwordsToSentence(['hello', 'world']); // \"Hello world.\"\nwordsToSentence(['iT, 'IS', 'GoING', 'to', 'raiN']); // \"It is going to rain.\"\nwordsToSentence(['']); // \"\"\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function wordsToSentence(words) {\n  if (words.length === 0) {\n    return '';\n  }\n  let sentence = words[0][0].toUpperCase();\n  for (let i = 1; i < words[0].length; i += 1) {\n    sentence += words[0][i].toLowerCase();\n  }\n  for (let i = 1; i < words.length; i += 1) {\n    sentence += ' '+words[i].toLowerCase();\n  }\n  sentence += '.';\n  return sentence;\n}",
  "openTest": "it('Created function wordsToSentence', () => {\n  expect(wordsToSentence).to.be.a('function');\n});\n\nit('wordsToSentence([\"heLLo\", \"wORLd\"]) should return \"Hello world.\"', () => {\n  expect(wordsToSentence(['heLLo', 'wORLd'])).to.be.equal('Hello world.');\n});\n\nit('wordsToSentence([\"einstein\", \"excelled\", \"at\", \"math\", \"and\", \"physics\", \"from\", \"a\", \"young\", \"age\"]) should return \"Einstein excelled at math and physics from a young age.\"', () => {\n  expect(wordsToSentence(['einstein', 'excelled', 'at', 'math', 'and', 'physics', 'from', 'a', 'young', 'age'])).to.be.equal('Einstein excelled at math and physics from a young age.');\n});\n\nit('wordsToSentence([]) should return \"\"', () => {\n  expect(wordsToSentence([])).to.be.equal('');\n});\n\nit('wordsToSentence([\"yES\"]) should return \"Yes.\"', () => {\n  expect(wordsToSentence(['yES'])).to.be.equal('Yes.');\n});\n\nit('wordsToSentence([\"Let\", \"us\", \"go\", \"to\", \"the\", \"STORE\"]) should return \"Let us go to the store.\"', () => {\n  expect(wordsToSentence(['Let', 'us', 'go', 'to', 'the', 'store'])).to.be.equal('Let us go to the store.');\n});\n\nit('wordsToSentence([\"iT\", \"IS\", \"GoING\", \"to\", \"raiN\"]) should return \"It is going to rain.\"', () => {\n  expect(wordsToSentence(['iT', 'IS', 'GoING', 'to', 'raiN'])).to.be.equal('It is going to rain.');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}