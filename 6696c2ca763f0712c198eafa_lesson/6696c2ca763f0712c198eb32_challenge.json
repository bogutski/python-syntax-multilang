{
  "_id": "6696c2ca763f0712c198eb32",
  "name": {
    "en": "Select the words beginning with a given letter from the array",
    "ru": "Выбрать из массива слова, начинающиеся с заданной буквы"
  },
  "instruction": {
    "en": "The function `getWordsStartingWith`, takes an array of strings `words` and a string `letter`, and returns a string made up of words starting with the letter `letter`.\n\nThe search is done case insensitive.\n\nThe words in the returned string must be separated by spaces. There should be no spaces at the end of the string.\n\nIf there are no words beginning with `letter` in the array, the function should return an empty string.\n\nExamples of running the function:\n\n```javascript\ngetWordsStartingWith(['Ant', 'bot', 'can', 'arrow', 'Act', 'back'], 'a'); // 'Ant arrow Act'\ngetWordsStartingWith(['run', 'rack', 'role'], 'b'); // ''\ngetWordsStartingWith(['run', 'rack', 'role'], 'R'); // 'run rack role'\ngetWordsStartingWith([], 'r'); // ''\n```",
    "ru": "Функция `getWordsStartingWith`, принимает массив строк `words` и строку `letter`, и возвращает строку, составленную из слов, начинающихся с буквы `letter`.\n\nПоиск производится без учета регистра символов.\n\nСлова в возвращаемой строке должны быть разделены пробелами. В конце строки пробела быть не должно.\n\nЕсли в массиве нет слов, начинающихся с буквы `letter`, то функция должна вернуть пустую строку.\n\nПримеры запуска функции:\n\n```javascript\ngetWordsStartingWith(['Ant', 'bot', 'can', 'arrow', 'Act', 'back'], 'a'); // 'Ant arrow Act'\ngetWordsStartingWith(['run', 'rack', 'role'], 'b'); // ''\ngetWordsStartingWith(['run', 'rack', 'role'], 'R'); // 'run rack role'\ngetWordsStartingWith([], 'r'); // ''\n```"
  },
  "initialSolution": "func",
  "completedSolution": "function getWordsStartingWith(words, letter) {\n  let result = '';\n  for (let i = 0; i < words.length; i++) {\n    if (words[i].toLowerCase()[0] === letter.toLowerCase()) {\n      result += words[i] + ' ';\n    }\n  }\n  return result.trim();\n}",
  "openTest": "it('Created function getWordsStartingWith', () => {\n  expect(getWordsStartingWith).to.be.a('function');\n});\n\nit('getWordsStartingWith([\"Ant\", \"boot\", \"cannon\", \"arrow\", \"Act\", \"bark\"], \"a\") should return \"Ant arrow Act\"', () => {\n  expect(getWordsStartingWith(['Ant', 'boot', 'cannon', 'arrow', 'Act', 'bark'], 'a')).to.equal('Ant arrow Act');\n});\n\nit('getWordsStartingWith([\"run\", \"rack\", \"role\"], \"b\") should return \"\"', () => {\n  expect(getWordsStartingWith(['run', 'rack', 'role'], 'b')).to.equal('');\n});\n\nit('getWordsStartingWith([\"rabbit\", \"room\", \"root\"], \"R\") should return \"rabbit room root\"', () => {\n  expect(getWordsStartingWith(['rabbit', 'room', 'root'], 'R')).to.equal('rabbit room root');\n});\n\nit('getWordsStartingWith([], \"r\") should return \"\"', () => {\n  expect(getWordsStartingWith([], 'r')).to.equal('');\n});\n\nit('getWordsStartingWith([\"Cat\", \"bat\", \"coin\", \"art\", \"Cost\", \"cone\"], \"c\") should return \"Cat coin Cost cone\"', () => {\n  expect(getWordsStartingWith(['Cat', 'bat', 'coin', 'art', 'Cost', 'cone'], 'c')).to.equal('Cat coin Cost cone');\n});\n\nit('getWordsStartingWith([], \"\") should return \"\"', () => {\n  expect(getWordsStartingWith([], '')).to.equal('');\n});\n\nit('getWordsStartingWith([\"Cat\", \"bat\", \"coin\"], \"\") should return \"\"', () => {\n  expect(getWordsStartingWith(['Cat', 'bat', 'coin'], '')).to.equal('');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}