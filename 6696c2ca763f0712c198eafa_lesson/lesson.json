{
  "_id": "6696c2ca763f0712c198eafa",
  "content": {
    "ru": "### Разберем метод массивов `join()`\n\nМетод `join()` - это метод массивов, который используется для объединения всех элементов массива в строку.\n\nСинтаксис метода `join()` выглядит следующим образом:\n\n```javascript\narray.join(separator);\n```\n* где `array` - это массив, который нужно объединить в строку,\n* и `separator` - это строка, которая будет использоваться в качестве разделителя между элементами массива. \n\nЕсли не указывать разделитель, то по умолчанию будет использоваться запятая:\n\n```javascript\nconst array = ['Hello', 'World', '!', '!', '!'];\nconst string = array.join();        // не используем никакого разделителя\nconsole.log(string);                // \"Hello,World,!,!,!\"\n```\n\nТеперь рассмотрим пример с разделителем:\n\n```javascript\nconst array = [123, true, false, 'Hello', 'JavaScript'];\nconst string1 = array.join(' ');        // используем разделитель: \" \" - пробел\nconsole.log(string1);                   // \"123 true false Hello JavaScript\"\n\nconst string2 = array.join('-*-');      // используем разделитель: \"-*-\" - дефис, звездочка, дефис\nconsole.log(string2);                   // \"123-*-true-*-false-*-Hello-*-JavaScript\"\n```\n\n\n### Как преобразовать массив в строку с помощью цикла `for`\n\nРассмотрим самый простой способ, без разделителя:\n\n```javascript\nconst array = ['Hello', 'World', '!', '!', '!'];\nlet string = '';\n\nfor (let i = 0; i < array.length; i++) {\n  string += array[i];                     // добавляем каждый элемент массива в строку\n}\nconsole.log(string);                      // \"HelloWorld!!!\"\n```\n\nТеперь добавим разделитель:\n\n```javascript\nconst array = ['Hello', 'World', '!', '!', '!'];\nlet string = '';\n\nfor (let i = 0; i < array.length; i++) {\n  string += array[i] + ' -*- ';           // добавляем элемент плюс разделитель\n}\nconsole.log(string);                      // \"Hello -*- World -*- ! -*- ! -*- ! -*- \"\n```\n\nДавайте улучшим наш код и добавим проверку, чтобы после последнего элемента не добавлялся разделитель:\n\n```javascript\nconst arr = ['How', 'are', 'you', '?', '!'];\nlet str = '';\n\nfor (let i = 0; i < arr.length; i++) {\n  if (i !== arr.length - 1) str += arr[i] + ' - ';     // добавляем элемент плюс разделитель\n  else str += arr[i];                                  // добавляем только последний элемент\n}\nconsole.log(str);                                      // \"How - are - you - ? - !\"\n```\n\nТеперь добавим проверку по типу данных.\n\nСоздадим три переменные: `str`, `num` и `otherTypes`.\nВ переменную `str` запишем все элементы с типом данных `string`, в переменную `num` запишем все элементы с типом данных `number`, а в переменную `otherTypes` запишем все остальные типы данных.\n\n```javascript\nconst array = [true, 'just', 123, false, 'text', 456, 'here!', true, {name: 'Alice'}, '!', 789, '!'];\n\nlet str = '';\nlet num = '';\nlet otherTypes = '';\n\nfor (let i = 0; i < array.length; i++) {\n  if (typeof array[i] === 'string') str += array[i];       // добавляем элемент, если тип данных `string`\n  else if (typeof array[i] === 'number') num += array[i];  // добавляем элемент, если тип данных `number`\n  else otherTypes += array[i];                             // добавляем элемент, если тип данных не `string` и не `number`\n}\n\nconsole.log(str);         // \"justtexthere!!!\"\nconsole.log(num);         // \"123456789\"\nconsole.log(otherTypes);  // \"truefalsetrue[object Object]\"\n```\n\nПопрактикуйтесь и подумайте как можно улучшить наш код, что бы разделитель добавлялся только между элементами, а не в начале или в конце строки.\n",
    "en": "### Let's break down the array method `join()`\n\nThe `join()` method is an array method that is used to combine all the elements of an array into a string.\n\nThe syntax of the `join()` method looks like this\n\n```javascript\narray.join(separator);\n```\n* where `array` is the array you want to combine into a string,\n* and `separator` is a string that will be used as a separator between the array elements. \n\nIf you do not specify a delimiter, the comma will be used by default:\n\n```javascript\nconst array = ['Hello', 'World', '!', '!', '!'];\nconst string = array.join();        // don't use any delimiter\nconsole.log(string);                // \"Hello,World,!,!,!\"\n```\n\nNow let's look at the separator example:\n\n```javascript\nconst array = [123, true, false, 'Hello', 'JavaScript'];\nconst string1 = array.join(' '); // use delimiter: \" \" - space\nconsole.log(string1); // \"123 true false Hello JavaScript\"\n\nconst string2 = array.join('-*-'); // use delimiter: \"-*-\" - hyphen, asterisk, hyphen\nconsole.log(string2); // \"123-*-true-*-false-*-Hello-*-JavaScript\"\n```\n\n\n### How to convert an array to a string using the `for` loop\n\nConsider the simplest way, without the separator:\n\n```javascript\nconst array = ['Hello', 'World', '!', '!', '!'];\nlet string = '';\n\nfor (let i = 0; i < array.length; i++) {\n  string += array[i];                     // add each element of the array to the string\n}\nconsole.log(string);                      // \"HelloWorld!!!\"\n```\n\nNow let's add a separator:\n\n```javascript\nconst array = ['Hello', 'World', '!', '!', '!'];\nlet string = '';\n\nfor (let i = 0; i < array.length; i++) {\n  string += array[i] + ' -*- ';           // add the element plus delimiter\n}\nconsole.log(string);                      // \"Hello -*- World -*- ! -*- ! -*- ! -*- \"\n```\n\nLet's improve our code and add a check so that a separator is not added after the last element:\n\n```javascript\nconst arr = ['How', 'are', 'you', '?', '!'];\nlet str = '';\n\nfor (let i = 0; i < arr.length; i++) {\n  if (i !== arr.length - 1) str += arr[i] + ' - ';     // add an element and a delimiter\n  else str += arr[i];                                  // add only the last element\n}\nconsole.log(str);                                      // \"How - are - you - ? - !\"\n```\n\nNow let's add a check by data type.\n\nCreate three variables: `str`, `num` and `otherTypes`.\nIn the variable `str` we write all elements with data type `string`, in the variable `num` we write all elements with data type `number`, and in the variable `otherTypes` we write all other data types.\n\n```javascript\nconst array = [true, 'just', 123, false, 'text', 456, 'here!', true, {name: 'Alice'}, '!', 789, '!'];\n\nlet str = '';\nlet num = '';\nlet otherTypes = '';\n\nfor (let i = 0; i < array.length; i++) {\n  if (typeof array[i] === 'string') str += array[i];       // add an element if the data type is a `string`\n  else if (typeof array[i] === 'number') num += array[i];  // add an element if the data type is a `number`\n  else otherTypes += array[i];                             // add an element if the data type is not a `string` and not a `number`\n}\n\nconsole.log(str);         // \"justtexthere!!!\"\nconsole.log(num);         // \"123456789\"\nconsole.log(otherTypes);  // \"truefalsetrue[object Object]\"\n```\n\nPractice and think about how we can improve our code so that the separator is added only between elements and not at the beginning or end of the line.\n",
    "es": "# Преобразовать массив в строку language: es"
  },
  "video": {
    "ru": "https://youtu.be/bPTiizLvgzI",
    "en": "",
    "es": ""
  }
}