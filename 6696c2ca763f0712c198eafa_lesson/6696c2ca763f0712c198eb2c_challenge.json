{
  "_id": "6696c2ca763f0712c198eb2c",
  "name": {
    "en": "A word of single letters",
    "ru": "Слово из отдельных букв"
  },
  "instruction": {
    "en": "You need to write a function `wordFromLetters` that takes one argument, the `letters` array.\n\nEach element of the array is a string containing one letter.\n\nWe need to collect the individual letters into one string - a word.\n\nThe function should return the resulting word.\n\nExamples of running the function:\n\n```javascript\nwordFromLetters(['H', 'e', 'l', 'l', 'o']); // 'Hello'\nwordFromLetters(['c', 'a', 't']); // 'cat'\nwordFromLetters([]); // ''\n```",
    "ru": "Нужно написать функцию `wordFromLetters`, которая принимает один аргумент - массив `letters`.\n\nКаждый элемент массива - это строка, содержащая одну букву.\n\nНужно собрать отдельные буквы в одну строку - слово.\n\nФункция должна возвращать полученное слово.\n\nПримеры запуска функции:\n\n```javascript\nwordFromLetters(['H', 'e', 'l', 'l', 'o']); // 'Hello'\nwordFromLetters(['c', 'a', 't']);           // 'cat'\nwordFromLetters([]);                        // ''\n```"
  },
  "initialSolution": "func",
  "completedSolution": "function wordFromLetters(letters) {\n  let word = '';\n  for (let i = 0; i < letters.length; i += 1) {\n    word += letters[i];\n  }\n  return word;\n}",
  "openTest": "it('Created function wordFromLetters', () => {\n  expect(wordFromLetters).to.be.a('function');\n});\n\nit('wordFromLetters([\"H\", \"e\", \"l\", \"l\", \"o\"]) Should return \"Hello\"', () => {\n  expect(wordFromLetters(['H', 'e', 'l', 'l', 'o'])).to.equal('Hello')\n});\n\nit('wordFromLetters([\"A\", \"l\", \"i\", \"c\", \"e\"]) Should return \"Alice\"', () => {\n  expect(wordFromLetters(['A', 'l', 'i', 'c', 'e'])).to.equal('Alice')\n});\n\nit('wordFromLetters([\"d\", \"o\", \"g\"]) Should return \"dog\"', () => {\n  expect(wordFromLetters(['d', 'o', 'g'])).to.equal('dog')\n});\n\nit('wordFromLetters([]) Should return \"\"', () => {\n  expect(wordFromLetters([])).to.equal('')\n});\n\nit('wordFromLetters([\"C\", \"a\", \"t\", \"e\", \"r\", \"p\", \"i\", \"l\", \"l\", \"a\", \"r\"]) Should return \"Caterpillar\"', () => {\n  expect(wordFromLetters(['C', 'a', 't', 'e', 'r', 'p', 'i', 'l', 'l', 'a', 'r'])).to.equal('Caterpillar')\n});\n\nit('wordFromLetters([\"I\"]) Should return \"I\"', () => {\n  expect(wordFromLetters(['I'])).to.equal('I')\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}