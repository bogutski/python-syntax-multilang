{
  "_id": "6696c2ca763f0712c198dc1a",
  "name": {
    "en": "Variable with a numeric value",
    "ru": "Переменная с числовым значением"
  },
  "instruction": {
    "en": "Create a `age` variable and assign it the value of an arbitrary number between 0 and 120.\n\nCreate a `typeOfAge` variable and assign it the value of the `age` variable type.\n\nHere is an example that is fundamentally similar to what you need to do,\nbut adapt it to the requirements of the task:\n```javascript\nconst phoneNumber = 911;\nconst typeOfPhoneNumber = typeof (phoneNumber);\n```",
    "ru": "Создайте переменную `age` и присвойте ей значение произвольного числа от 0 до 120.\n\nСоздайте переменную `typeOfAge` и присвойте ей значение типа переменной `age`.\n\nПриведем пример, который принципиально похож на то, что нужно сделать,\nно адаптируйте его к требованиям задачи:\n```javascript\nconst phoneNumber = 911;\nconst typeOfPhoneNumber = typeof (phoneNumber);\n```"
  },
  "initialSolution": "",
  "completedSolution": "const age = 35;\nconst typeOfAge = typeof (age);",
  "openTest": "it('the variable `age` exists and has a value', () => {\n  expect(age).not.undefined;\n});\n\nit('the variable `age` is of type number', () => {\n  expect(age).a('number');\n});\n\nit('the variable `age` is between 0 and 120', () => {\n  expect(age >= 0 && age <= 120).true;\n});\n\nit('переменная `typeOfAge` существует и имеет значение', () => {\n  expect(typeOfAge).not.undefined;\n});\n\nit('the variable `typeOfAge` is of type string', () => {\n  expect(typeOfAge).a('string');\n});\n\nit('the variable `typeOfAge` is equal to `number`', () => {\n  expect(typeOfAge).equal('number');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "```javascript\nconst age = 35;\nconst typeOfAge = typeof (age);\n```",
    "ru": "```javascript\nconst age = 35;\nconst typeOfAge = typeof (age);\n```"
  }
}