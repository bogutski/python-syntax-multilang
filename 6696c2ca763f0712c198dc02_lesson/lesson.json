{
  "content": {
    "ru": "Переменная в Python может **_содержать любые данные_**, и тип значения **_может изменяться_** в процессе работы программы.\r\n\r\nНапример: \r\n```python\r\nany_type = \"Hello\"   # <-- строка (string)\r\nany_type = 123456    # <-- число (int)\r\n```\r\nПри создании переменной тип не указывается.\r\nЯзыки, в которых тип переменной определяется во время выполнения, называются - **динамически типизированными**. \r\n\r\nЭто значит, что типы данных существуют, но переменные не «привязаны» к какому-то одному типу навсегда.\r\n\r\n\r\n#### Как узнать тип данных?\r\nЧтобы узнать, какой тип данных содержится в переменной, в Python используется функция `type()`.\r\n\r\nНапример:\r\n\r\n```python\r\na = 50\r\nprint(type(a))      # <class 'int'>\r\n\r\nb = 78.5\r\nprint(type(b))      # <class 'float'>\r\n\r\nbig = 1234567890123456789012345678901234567890\r\nprint(type(big))    # <class 'int'> (в Python int может быть сколь угодно большим)\r\n\r\nc = a + b\r\nprint(c)            # 128.5\r\nprint(type(c))      # <class 'float'>\r\n```\r\n\r\n```python\r\na = 5\r\nb = 10\r\n\r\nc = a < b         # 'a' меньше 'b'\r\nprint(c)          # True\r\nprint(type(c))    # <class 'bool'>\r\n\r\nd = a > b         # 'a' больше 'b'\r\nprint(d)          # False\r\nprint(type(d))    # <class 'bool'>\r\n```\r\n\r\n```python\r\na = \"Hello!\"\r\noriginal_type = type(a)\r\n\r\na = 100\r\ntype_after_changing = type(a)\r\n\r\nprint(original_type)         # <class 'str'>\r\nprint(type_after_changing)   # <class 'int'>\r\n```\r\n\r\n```python\r\na = None\r\nprint(type(a))     # <class 'NoneType'>\r\n\r\na = \"None\"         # <-- изменили значение переменной на строку\r\nprint(type(a))     # <class 'str'>\r\n\r\na = None           # <-- снова изменили значение переменной\r\nprint(type(a))     # <class 'NoneType'>\r\n```\r\n\r\n```python\r\nnew_obj = {}\r\nprint(type(new_obj))            # <class 'dict'>\r\n\r\narr = []\r\nprint(type(arr))                # <class 'list'>\r\n\r\ndef function_for_all():\r\n    pass\r\nprint(type(function_for_all))   # <class 'function'>\r\n```\r\n\r\nВ следующих лекциях мы подробно рассмотрим все основные типы данных в Python: числа, строки, списки, словари, булевы значения и многое другое. \r\n\r\nВы научитесь создавать и использовать переменные разных типов, а также узнаете, как работать с ними эффективно.",
    "en": "Here you will learn how to program.\r\n\r\nWe will use `Python` - one of the most popular programming languages."
  }
}