{
  "_id": "6696c2ca763f0712c198dfc4",
  "name": {
    "en": "Welcome to PASV!",
    "ru": "Добро пожаловать в PASV!"
  },
  "instruction": {
    "en": "Write a function `greeting` that takes an argument `name` and returns the string `Hello, name! Welcome to PASV! Set the default value for the `name` argument to `friend`.\n\nExamples\n```javascript\ngreeting('Alice'); // 'Hello, Alice! Welcome to PASV!\nGreeting('Bob'); // 'Hello, Bob! Welcome to PASV!\ngreeting(); // 'Hello, friend! Welcome to PASV!'\n```",
    "ru": "Напишите функцию `greeting`, которая принимает аргумент `name` и возвращает строку `Hello, name! Welcome to PASV!`. Задайте значение по умолчанию для аргумента `name` равное `friend`.\n\nПримеры\n```javascript\ngreeting('Alice'); // 'Hello, Alice! Welcome to PASV!'\ngreeting('Bob'); // 'Hello, Bob! Welcome to PASV!'\ngreeting(); // 'Hello, friend! Welcome to PASV!'\n```"
  },
  "initialSolution": "function greeting(name){\n  return\n}",
  "completedSolution": "function greeting (name = 'friend'){\n  return 'Hello, ' + name + '! Welcome to PASV!';\n}",
  "openTest": "it('Created function greeting', () => {\n  expect(greeting).to.be.a('function');\n});\n\nit('Function returns correct result for arguments `Alice`', () => {\n  expect(greeting('Alice')).to.equal('Hello, Alice! Welcome to PASV!');\n});\n\nit('Function returns correct result for arguments `Anna`', () => {\n    expect(greeting('Anna')).to.equal('Hello, Anna! Welcome to PASV!');\n});\n\nit('Function returns correct result for arguments `Alex`', () => {\n    expect(greeting('Alex')).to.equal('Hello, Alex! Welcome to PASV!');\n});\n\nit('Function returns correct result if no arguments', () => {\n    expect(greeting()).to.equal('Hello, friend! Welcome to PASV!');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}