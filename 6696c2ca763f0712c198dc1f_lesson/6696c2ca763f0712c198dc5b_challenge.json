{
  "_id": "6696c2ca763f0712c198dc5b",
  "name": {
    "en": "Perimeter and area of the square",
    "ru": "Периметр и площадь квадрата"
  },
  "instruction": {
    "en": "Given a side of a square `a`.\nMake a program that calculates its perimeter `p` and area `s`.\n\nCreate a variable named `a` and assign it the value of an arbitrary positive number.\nCreate a variable named `p` and assign it the value of the expression to calculate the perimeter.\nCreate a variable `s` and assign it the value of an expression to calculate the area.\n\nHere is an example that is fundamentally similar to what you need to do,\nbut adapt it to the requirements of the task:\n```javascript\nconst number = 4;\nconst square = number ** 2;\n```",
    "ru": "Дана сторона квадрата `а`.\nСоставьте программу, которая вычисляет его периметр `p` и площадь `s`.\n\nСоздайте переменную с именем `a` и присвойте ей значение произвольного положительного числа.\nСоздайте переменную `p` и присвойте ей значение выражения для вычисления периметра.\nСоздайте переменную `s` и присвойте ей значение выражения для вычисления площади.\n\nПриведем пример, который принципиально похож на то, что нужно сделать,\nно адаптируйте его к требованиям задачи:\n```javascript\nconst number = 4;\nconst square = number ** 2;\n```"
  },
  "initialSolution": "",
  "completedSolution": "const a = 7;\nconst p = a * 4;\nconst s = a ** 2;",
  "openTest": "it('Variable `a` exists and has a value', () => {\n  expect(a).not.undefined;\n});\n\nit('Variable `a` has type `number`', () => {\n  expect(a).a('number');\n});\n\nit('Variable `a` is not NaN', () => {\n  expect(isNaN(a)).false;\n});\n\nit('Variable `a` is a positive number', () => {\n  expect(a > 0).true;\n});\n\nit('Variable `p` exists and has a value', () => {\n  expect(p).not.undefined;\n});\n\nit('Variable `p` has type `number`', () => {\n  expect(p).a('number');\n});\n\nit('Variable `p` is not NaN', () => {\n  expect(isNaN(p)).false;\n});\n\nit('The value of variable `p` has been calculated correctly', () => {\n  expect(p).equal(4 * a);\n});\n\nit('Variable`s exists and has a value', () => {\n  expect(s).not.undefined;\n});\n\nit('Variable`s has type `number`', () => {\n  expect(s).a('number');\n});\n\nit('Variable ``s is not NaN', () => {\n  expect(isNaN(s)).false;\n});\n\nit('The value of variable`s` is correct', () => {\n  expect(s).equal(a * a);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "```javascript\nconst a = 7;\nconst p = a * 4;\nconst s = a ** 2;\n```",
    "ru": "```javascript\nconst a = 7;\nconst p = a * 4;\nconst s = a ** 2;\n```"
  }
}