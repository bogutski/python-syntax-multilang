{
  "_id": "6696c2ca763f0712c198dc59",
  "name": {
    "en": "Triangle perimeter",
    "ru": "Периметр треугольника"
  },
  "instruction": {
    "en": "Given sides of a triangle `a`, `b`, `c`.\nMake a program that calculates its perimeter `p`.\n\nCreate variables named `a`, `b`, `c` and assign them values of arbitrary positive numbers.\nCreate a variable `p` and assign to it the value of the expression to calculate the perimeter of the triangle.\n\nHere is an example that is fundamentally similar to what you need to do,\nbut adapt it to the requirements of the task:\n```javascript\nconst num1 = 4;\nconst num2 = 9;\nconst num3 = 9;\nconst sum = num1 + num2 + num3;\n```",
    "ru": "Даны стороны треугольника `а`, `b`, `c`.\nСоставьте  программу, которая вычисляет его периметр `p`.\n\nСоздайте переменные с именем `a`, `b`, `c` и присвойте им значения произвольных положительных чисел.\nСоздайте переменную `p` и присвойте ей значение выражения для вычисления периметра треугольника.\n\nПриведем пример, который принципиально похож на то, что нужно сделать,\nно адаптируйте его к требованиям задачи:\n```javascript\nconst num1 = 4;\nconst num2 = 9;\nconst num3 = 9;\nconst sum = num1 + num2 + num3;\n```"
  },
  "initialSolution": "",
  "completedSolution": "const a = 7;\nconst b = 8;\nconst c = 9;\nconst p = a + b + c;",
  "openTest": "it('Variable `a` exists and has a value', () => {\n  expect(a).not.undefined;\n});\n\nit('Variable `a` has type `number`', () => {\n  expect(a).a('number');\n});\n\nit('Variable `a` is not NaN', () => {\n  expect(isNaN(a)).false;\n});\n\nit('Variable `a` is a positive number', () => {\n  expect(a > 0).true;\n});\n\nit('Variable `b` exists and has a value', () => {\n  expect(a).not.undefined;\n});\n\nit('Variable `b` has type `number`', () => {\n  expect(b).a('number');\n});\n\nit('Variable `b` is not NaN', () => {\n  expect(isNaN(b)).false;\n});\n\nit('Variable `b` is a positive number', () => {\n  expect(b > 0).true;\n});\n\nit('Variable `c` exists and has a value', () => {\n  expect(c).not.undefined;\n});\n\nit('Variable `c` has type `number`', () => {\n  expect(c).a('number');\n});\n\nit('Variable `c` is not NaN', () => {\n  expect(isNaN(c)).false;\n});\n\nit('Variable `c` is a positive number', () => {\n  expect(c > 0).true;\n});\n\nit('Variable `p` exists and has a value', () => {\n  expect(p).not.undefined;\n});\n\nit('Variable `p` has type `number`', () => {\n  expect(p).a('number');\n});\n\nit('Variable `p` is not NaN', () => {\n  expect(isNaN(p)).false;\n});\n\nit('The value of variable `p` has been calculated correctly', () => {\n  expect(p).equal(a + b + c);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "```javascript\nconst a = 7;\nconst b = 8;\nconst c = 9;\nconst p = a + b + c;\n```",
    "ru": "```javascript\nconst a = 7;\nconst b = 8;\nconst c = 9;\nconst p = a + b + c;\n```"
  }
}