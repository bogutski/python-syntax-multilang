{
  "_id": "6696c2ca763f0712c198dc1f",
  "video": {
    "ru": "https://youtu.be/J7BFP8mUe1A",
    "en": "https://youtu.be/J7BFP8mUe1A",
    "es": ""
  },
  "content": {
    "ru": "К числовому типу данных (**number**) относятся целые и дробные, положительные и отрицательные числа, ноль,  а также \"специальные\" числовые значения:  Infinity, -Infinity и NaN.\n```\nlet numPositive = 123;\nlet numNegative = -87; \nnumPositive = numPositive + numNegative;\nconsole.log(typeof numPositive); // \"number\"\n\n```\n\n* **Infinity** представляет собой математическую бесконечность. Мы можем получить ее в результате деления на ноль:\n```\nlet a = 1 / 0;\nconsole.log(a);         // Infinity\nconsole.log(typeof(a)); // \"number\"\n```\n* **NaN** означает вычислительную ошибку. Это результат неправильной или неопределённой математической операции, например:\n```\nconsole.log( 'Money' / 2 );         // NaN\nconsole.log(typeof( 'Money' / 2) ); // \"number\"\n```\n##### Операции над числами\n\n **\\+** сложение:\n```\nlet a = 5; \na = a + 15;  // значение переменной a увеличено на 15\n```\n **\\-** изменение знака, вычитание: \n```\na = a - 10;   // значение переменной a уменьшилось на 10 \na = a * (-1); // a = - a,  знак значения переменной a поменялся на противоположный\n```\n**\\*** умножение:\n```\na = a * 4; // значение переменной a увеличилось в 4 раза\n```\n **/** деление: \n```\na = a / 6; // значение переменной a уменьшилось в 6 раз\n```\n**%** остаток от деления: \n```\na = a % 2; // переменной а присваиваем значение остатка от деления а на 2\n```\n****** возведение в степень: \n```\na = a ** 3;  // значение переменной a возвели в 3-ю степень\n```\n**++** инкремент (увеличение на 1): \n```\na++; // значение переменной a увеличилось на 1\n++a; // значение переменной a увеличилось на 1\n```\n**--** декремент (уменьшение на 1): \n```\na--; // значение переменной a уменьшилось на 1\n--a; // значение переменной a уменьшилось на 1\n```\n",
    "en": "The numeric data type (**number**) includes integers and fractions, positive and negative numbers, zero, and \"special\" numeric values: Infinity, -Infinity, and NaN.\n```\nlet numPositive = 123;\nlet numNegative = -87; \nnumPositive = numPositive + numNegative;\nconsole.log(typeof numPositive); // \"number\"\n\n```\n\n* **Infinity** represents mathematical infinity. We can get it by dividing it by zero:\n```\nlet a = 1 / 0;\nconsole.log(a);         // Infinity\nconsole.log(typeof(a)); // \"number\"\n```\n* **NaN** means a computational error. It is the result of an incorrect or undefined mathematical operation, for example:\n```\nconsole.log( 'Money' / 2 );         // NaN\nconsole.log(typeof( 'Money' / 2) ); // \"number\"\n```\n##### Operations on numbers\n\n **\\+** addition:\n```\nlet a = 5; \na = a + 15; // the value of the variable a is increased by 15\n```\n **\\-** sign change, subtraction: \n```\na = a - 10; // the value of the a variable has decreased by 10 \na = a * (-1); // a = - a, the sign of the a variable is reversed\n```\n**\\*** multiplication:\n```\na = a * 4; // the value of the variable a has increased by 4 times\n```\n **/** division: \n```\na = a / 6; // the value of the variable a has decreased by a factor of 6\n```\n**%** the remainder of the division: \n```\na = a % 2; // assign to the variable a the value of the remainder of the division of a by 2\n```\n****** degree increase: \n```\na = a ** 3; // the value of the variable a raised to the 3rd power\n```\n**++** increment (increase by 1): \n```\na++; // the value of the a variable has increased by 1\n++a; // the value of the a variable has incremented by 1\n```\n**--** decrement (decrease by 1): \n```\na--; // the value of the a variable has decreased by 1\n--a; // the value of the a variable has decreased by 1\n```\n",
    "es": "\n"
  }
}