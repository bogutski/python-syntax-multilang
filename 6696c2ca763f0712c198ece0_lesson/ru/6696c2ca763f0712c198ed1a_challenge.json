{
  "name": "Посчитать сколько раз каждая цифра от 0 до 9 встречается в строке",
  "instruction": "Функция `digitsCount` принимает строку `str`, состоящую из различных символов.\nФункция должна возвращать массив `result`, в котором записано сколько раз каждая цифра от 0 до 9 встречается в строке.\nВ элементе массива с индексом ноль должно быть количество нулей в строке, в элементе массива с индексом 1 - количество единиц в строке и т.д.\nЕсли строка пустая или в строке нет цифр, то функция должна вернуть массив из 10 нулей.\n\nНапример, в строке `\"let a = 10, b = 22, c = 13\"` цифра `0` встречается 1 раз, цифра `1` - 2 раза, цифра `2` - 2 раза, цифра `3` - 1 раз, а остальные цифры от `4` до `9` - 0 раз.\nФункция должна вернуть массив [1, 2, 2, 1, 0, 0, 0, 0, 0, 0].\n\nАлгоритм решения задачи:\n\n1. Создайте массив `result` из 10 нулей, в нем будут храниться счётчики цифр. Начальные значения счетчиков - 0.\n2. В цикле переберите все символы строки.\n3. Если текущий символ строки `str[i]` является цифрой, то преобразуйте его в число и увеличьте соответствующий счетчик в массиве `result[Number(str[i])]` на 1.\n4. Верните массив `result`.\n\nНе забудьте, что при некоторых способах проверки символа на цифру, пробел может быть определен как цифра 0.\n\nПримеры вызова функции:\n```javascript\ndigitsCount(\"const a=10, b=123, c=592\"); // [1, 2, 2, 1, 0, 1, 0, 0, 0, 1]\ndigitsCount(\"Arrow\"); // [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\ndigitsCount(\"5 plus 6 is 11\"); // [0, 2, 0, 0, 0, 1, 1, 0, 0, 0]\n```",
  "instructions": {}
}