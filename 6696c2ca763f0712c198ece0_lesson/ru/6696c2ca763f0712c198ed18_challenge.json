{
  "name": "Калькулятор - вычисление выражения, записанного в строке",
  "instruction": "Функция `calculateExpression` должна принимать строку, в которой содержатся 2 числа и знак математической операции. В строке нет пробелов.\nПример строки: `21+39`.\nСтрока не может быть пустой и будет приходить в правильном формате.\nЗнаки математических операций могут быть следующими: `+`, `-`, `*`, `/`.\nФункция должна вернуть результат вычисления этого выражения.\n\nДля решения задачи создайте также вторую функцию `calculator`, которая будет принимать 3 аргумента: знак математической операции и 2 числа и вызываться внутри первой функции `calculateExpression`.\nАнализ знака операции и вычисление результата должны быть реализованы во второй функции `calculator`.\n\nДля решения задачи используйте циклы, не используйте строковые функции и методы массивов.\n\n#### Один из возможных алгоритмов решения задачи:\n\nНапишите функцию `calculator`, которая принимает 3 аргумента: знак математической операции и 2 числа и возвращает результат вычисления.\n\nНапишите функцию `isOperator`, которая принимает 1 аргумент - символ и возвращает `true`, если аргумент является знаком математической операции, и `false` в противном случае.\nВ функции `isOperator` создайте переменную `operators` со строкой, содержащей все знаки математических операций и используйте цикл по ней для проверки того, является ли символ знаком математической операции.\n\nВ функции `calculateExpression`:\n\n1. Создайте переменные `num1` и `num2` и присвойте им пустые строки.\n2. Создайте переменные`op` и `opIndex` без начального значения.\n3. Создайте цикл `for`, который будет перебирать все символы строки `str` и записывать их в переменную `num1` до тех пор, пока не встретит знак математической операции.\nДля проверки того, является ли текущий символ знаком математической операции, используйте функцию `isOperator`, которую вы написали ранее.\nЕсли символ является знаком математической операции, присвойте его значение переменной `op`, запишите в переменную `opIndex` его индекс в строке `str` и прервите выполнение цикла.\n4. Создайте цикл `for`, который будет перебирать все символы строки `str, начиная с индекса, следующего за оператором, и записывать их в переменную `num2`.\n5. Преобразуйте строки `num1` и `num2` в числа.\n6. Вызовите функцию `calculator`, передав в нее знак операции `op` и 2 числа `num1` и `num2`.\n7. верните результат выполнения функции `calculator`.\n\nПримеры вызова функции:\n\n```javascript\ncalculateExpression('21+39');   // 60\ncalculateExpression('21-39');   // -18\ncalculateExpression('20/0');    // Infinity\n```\n\nПримеры вызова функции из другой функции:\n```javascript\nfunction hello(name){\n  console.log('Hello, ' + name)\n}\nfunction bye(name){\n  console.log('Goodbye, ' + name)\n}\n\nfunction greetings(name, greeting){\n  if(greeting === 'Hi') return hello(name)\n  if(greeting === 'Bye') return bye(name)\n}\ngreetings('Alice', 'Hi') // Hello, Alice\ngreetings('Alice', 'Bye') // Goodbye, Alice\n```\nВ этом примере функция `greetings` принимает 2 аргумента: имя и приветствие. В зависимости от приветствия, функция вызывает либо функцию `hello`, либо функцию `bye`, передавая вызванной функции имя.\n\nВы можете создавать свои функции и использовать их в решении разных похожих между собою задач.\nНапример, можно создать функцию `isDigit`, которая будет принимать один символ и проверять, является ли он цифрой.\nВы можете сохранить эту функцию и вставлять ее в решении других задач, в которых нужно проверять, является ли символ цифрой.\n```javascript\nfunction isDigit(char){\n  if (char >=\"0\" && char <=\"9\") return true;\n  else return false;\n}\n\nfunction onlyDigits(str){ //Эта функция принимает строку и возвращает строку, содержащую только цифры из исходной строки\n  let result = '';\n  for ( let i=0; i<str.length; i++ ) {\n    if (isDigit(str[i])) result += str[i]; //Вызов функции isDigit для проверки текущего символа\n  }\n  return result;\n}\nconsole.log(onlyDigits('1s0t89r3')); //\"10893\"\nconsole.log(onlyDigits(' t i85u y ')); //\"85\"\nconsole.log(onlyDigits(' no digits ')); // \"\"\n```",
  "instructions": {}
}