{
  "name": "Calculator - calculate an expression written in a string",
  "instruction": "The function `calculateExpression` should take a string that contains 2 numbers and a mathematical operation sign. There are no spaces in the string.\nExample string: `21+39`.\nThe string cannot be empty and will come in the correct format.\nThe mathematical operation signs can be: `+`, `-`, `*`, `/`.\nThe function should return the result of evaluating this expression.\n\nTo solve the problem, also create a second function `calculator`, which will take 3 arguments: the mathematical operation sign and 2 numbers, and be called inside the first function `calculateExpression`.\nThe analysis of the operation sign and the calculation of the result should be implemented in the second function `calculator`.\n\nTo solve the problem, use loops, do not use string functions and array methods.\n\n#### One possible algorithm for solving the problem:\n\nWrite a function `calculator` that takes 3 arguments: the mathematical operation sign and 2 numbers, and returns the result of the calculation.\n\nWrite a function `isOperator` that takes 1 argument - a character, and returns `true` if the argument is a mathematical operation sign, and `false` otherwise.\nIn the `isOperator` function, create a variable `operators` with a string containing all the mathematical operation signs, and use a loop over it to check if the character is a mathematical operation sign.\n\nIn the `calculateExpression` function:\n\n1. Create variables `num1` and `num2` and assign them empty strings.\n2. Create variables `op` and `opIndex` without initial values.\n3. Create a `for` loop that will iterate over all the characters in the `str` string and assign them to the `num1` variable until it encounters a mathematical operation sign.\nTo check if the current character is a mathematical operation sign, use the `isOperator` function you wrote earlier.\nIf the character is a mathematical operation sign, assign its value to the `op` variable, store its index in the `str` string in the `opIndex` variable, and break the loop.\n4. Create a `for` loop that will iterate over all the characters in the `str` string, starting from the index following the operator, and assign them to the `num2` variable.\n5. Convert the `num1` and `num2` strings to numbers.\n6. Call the `calculator` function, passing the operation sign `op` and the 2 numbers `num1` and `num2`.\n7. Return the result of the `calculator` function.\n\nExamples of function calls:\n\n```javascript\ncalculateExpression('21+39');   // 60\ncalculateExpression('21-39');   // -18\ncalculateExpression('20/0');    // Infinity\n```\n\nExamples of function calls from another function:\n```javascript\nfunction hello(name){\n  console.log('Hello, ' + name)\n}\nfunction bye(name){\n  console.log('Goodbye, ' + name)\n}\n\nfunction greetings(name, greeting){\n  if(greeting === 'Hi') return hello(name)\n  if(greeting === 'Bye') return bye(name)\n}\ngreetings('Alice', 'Hi') // Hello, Alice\ngreetings('Alice', 'Bye') // Goodbye, Alice\n```\nIn this example, the `greetings` function takes 2 arguments: a name and a greeting. Depending on the greeting, the function calls either the `hello` function or the `bye` function, passing the name to the called function.\n\nYou can create your own functions and use them to solve different similar problems.\nFor example, you can create a function `isDigit` that takes a single character and checks if it is a digit.\nYou can save this function and insert it into the solution of other problems where you need to check if a character is a digit.\n```javascript\nfunction isDigit(char){\n  if (char >=\"0\" && char <=\"9\") return true;\n  else return false;\n}\n\nfunction onlyDigits(str){ //This function takes a string and returns a string containing only the digits from the original string\n  let result = '';\n  for ( let i=0; i<str.length; i++ ) {\n    if (isDigit(str[i])) result += str[i]; //Call the isDigit function to check the current character\n  }\n  return result;\n}\nconsole.log(onlyDigits('1s0t89r3')); //\"10893\"\nconsole.log(onlyDigits(' t i85u y ')); //\"85\"\nconsole.log(onlyDigits(' no digits ')); // \"\"\n```",
  "instructions": {}
}