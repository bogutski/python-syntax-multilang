{
  "name": "Count how many times each digit from 0 to 9 occurs in the string",
  "instruction": "The `digitsCount` function takes a string `str` consisting of different characters.\nThe function should return an array `result`, in which the number of times each digit from 0 to 9 appears in the string is recorded.\nThe element of the array with index zero should be the number of zeros in the string, the element of the array with index 1 should be the number of ones in the string, and so on.\nIf the string is empty or does not contain any digits, the function should return an array of 10 zeros.\n\nFor example, in the string `\"let a = 10, b = 22, c = 13\"`, the digit `0` appears 1 time, the digit `1` appears 2 times, the digit `2` appears 2 times, the digit `3` appears 1 time, and the other digits from `4` to `9` appear 0 times.\nThe function should return the array [1, 2, 2, 1, 0, 0, 0, 0, 0, 0].\n\nSolution algorithm:\n\n1. Create an array `result` of 10 zeros, which will store the digit counters. The initial values of the counters are 0.\n2. Iterate through all the characters of the string in a loop.\n3. If the current character of the string `str[i]` is a digit, convert it to a number and increment the corresponding counter in the array `result[Number(str[i])]` by 1.\n4. Return the array `result`.\n\nNote that in some ways of checking if a character is a digit, a space can be defined as the digit 0.\n\nFunction call examples:\n```javascript\ndigitsCount(\"const a=10, b=123, c=592\"); // [1, 2, 2, 1, 0, 1, 0, 0, 0, 1]\ndigitsCount(\"Arrow\"); // [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\ndigitsCount(\"5 plus 6 is 11\"); // [0, 2, 0, 0, 0, 1, 1, 0, 0, 0]\n```",
  "instructions": {}
}