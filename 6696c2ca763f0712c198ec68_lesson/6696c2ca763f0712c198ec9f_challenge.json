{
  "_id": "6696c2ca763f0712c198ec9f",
  "name": {
    "en": "Count lowercase and uppercase vowels",
    "ru": "Посчитать гласные строчные и прописные"
  },
  "instruction": {
    "en": "The function `countLetters` takes the string\n\nThe string can consist of letters of the Latin alphabet in different registers and symbols.\n\nThe function must return an object with the following properties:\n* `vowelLowerCase` - number of lowercase vowel letters\n* `vowelUpperCase` - number of vowel letters in upper case\n* `others` - number of remaining characters and/or consonants\n\nAn example of how to start this function:\n```javascript\ncountLetters('aAbcde') // { vowelLowerCase: 2, vowelUpperCase: 1, others: 3 }\ncountLetters('HI there! 123') // { vowelLowerCase: 2, vowelUpperCase: 1, others: 10 }\n```",
    "ru": "Функция `countLetters` принимает строку\n\nСтрока может состоять из букв латинского алфавита в разных регистрах и символов.\n\nФункция должна возвращать объект со следующими свойствами:\n* `vowelLowerCase` - количество гласных букв в нижнем регистре\n* `vowelUpperCase` - количество гласных букв в верхнем регистре\n* `others` - количество остальных символов и/или согласных букв\n\nПример запуска функции:\n```javascript\ncountLetters('aAbcde') // { vowelLowerCase: 2, vowelUpperCase: 1, others: 3 }\ncountLetters('HI there! 123') // { vowelLowerCase: 2, vowelUpperCase: 1, others: 10 }\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function countLetters(str) {\n  let vowelLowerCase = 0;\n  let vowelUpperCase = 0;\n  let others = 0;\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] === 'a' || str[i] === 'e' || str[i] === 'i' || str[i] === 'o' || str[i] === 'u') {\n      vowelLowerCase++\n    } else if (str[i] === 'A' || str[i] === 'E' || str[i] === 'I' || str[i] === 'O' || str[i] === 'U') {\n      vowelUpperCase++\n    } else {\n      others++\n    }\n  }\n  return {\n    vowelLowerCase,\n    vowelUpperCase,\n    others,\n  }\n}",
  "openTest": "it('Created function countLetters', () => {\n  expect(countLetters).to.be.a('function');\n});\n\nit('countLetters(\"aAbcde\") should return { vowelLowerCase: 2, vowelUpperCase: 1, others: 3 }', () => {\n  expect(countLetters('aAbcde')).to.deep.equal({vowelLowerCase: 2, vowelUpperCase: 1, others: 3});\n});\n\nit('countLetters(\"Hello\") should return { vowelLowerCase: 2, vowelUpperCase: 0, others: 3 }', () => {\n  expect(countLetters('Hello')).to.deep.equal({vowelLowerCase: 2, vowelUpperCase: 0, others: 3});\n});\n\nit('countLetters(\"PASV\") should return { vowelLowerCase: 0, vowelUpperCase: 1, others: 3 }', () => {\n  expect(countLetters('PASV')).to.deep.equal({vowelLowerCase: 0, vowelUpperCase: 1, others: 3});\n});\n\nit('countLetters(\"123\") should return { vowelLowerCase: 0, vowelUpperCase: 0, others: 3 }', () => {\n  expect(countLetters('123')).to.deep.equal({vowelLowerCase: 0, vowelUpperCase: 0, others: 3});\n});\n\nit('countLetters(\"\") should return { vowelLowerCase: 0, vowelUpperCase: 0, others: 0 }', () => {\n  expect(countLetters('')).to.deep.equal({vowelLowerCase: 0, vowelUpperCase: 0, others: 0});\n});\n\nit('countLetters(\"JAVA SCRIPT\") should return { vowelLowerCase: 0, vowelUpperCase: 3, others: 8 }', () => {\n  expect(countLetters('JAVA SCRIPT')).to.deep.equal({vowelLowerCase: 0, vowelUpperCase: 3, others: 8});\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}