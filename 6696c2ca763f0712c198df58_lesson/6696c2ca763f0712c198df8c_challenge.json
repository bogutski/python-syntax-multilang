{
  "_id": "6696c2ca763f0712c198df8c",
  "name": {
    "en": "Calculate the cost of fuel for the trip",
    "ru": "Рассчитать стоимость топлива для поездки"
  },
  "instruction": {
    "en": "Write a function `tripPrice` that takes three parameters:\n\n* `distance` - distance in miles,\n* `mpg` - the number of miles the car can travel on one gallon of fuel,\n* `fuelPrice` - price per gallon of fuel",
    "ru": "Напишите функцию `tripPrice`, которая принимает три параметра:\n\n* `distance` - расстояние в милях,\n* `mpg` - количество миль, которое может проехать автомобиль на одном галлоне топлива,\n* `fuelPrice` - цена одного галлона топлива\n\nФункция должна вернуть цену, которую нужно заплатить, что-бы проехать необходимую дистанцию.\n\n\nПримеры запуска функции:\n```javascript\ntripPrice(60, 15, 3.10);   // 12.4\ntripPrice(240, 12, 2.15);  // 43\n```"
  },
  "initialSolution": "function sum(num1, num2){\n\n}",
  "completedSolution": "function tripPrice(distance, mpg, fuelPrice) {\n  return distance / mpg * fuelPrice;\n}\n\nconsole.log(tripPrice(60, 15, 3.10));  // 12.4\nconsole.log(tripPrice(240, 12, 2.15));  // 43",
  "openTest": "it('Created function tripPrice', () => {\n  expect(tripPrice).to.be.a('function');\n});\n\nit('tripPrice(100, 20, 3) should return 15', () => {\n  expect(tripPrice(100, 20, 3)).to.equal(15);\n});\n\nit('tripPrice(40, 25, 2.50) should return 10', () => {\n  expect(tripPrice(40, 25, 2.50)).to.equal(4);\n});\n\nit('tripPrice(90, 25, 2.50) should return 18', () => {\n  expect(tripPrice(90, 25, 2.50)).to.equal(9);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}