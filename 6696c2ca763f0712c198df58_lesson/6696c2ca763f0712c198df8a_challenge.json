{
  "_id": "6696c2ca763f0712c198df8a",
  "name": {
    "en": "How many cuts should be made on a log",
    "ru": "Сколько распилов нужно сделать на бревне"
  },
  "instruction": {
    "en": "Write a function `woodSplit`.\nOne parameter is the number of parts to divide the log into. It will not be less than 1.\n\nThe function should return the number of cuts to be made on the log to get the specified number of parts.\n\nExamples:\n\n```javascript\nwoodSplit(1) === 0\nwoodSplit(2) === 1\nwoodSplit(3) === 2\nwoodSplit(4) === 3\nwoodSplit(5) === 4\n```\n\nI hope you understand what needs to be done.",
    "ru": "Напишите функцию `woodSplit`, которая принимает один параметр.\n\nПараметр функции - это число частей, на которые нужно разделить бревно.\n\nЧисло не будет меньше 1.\n\nФункция должна возвращать количество распилов, которые нужно сделать на бревне, чтобы получить указанное количество частей.\n\nНапример:\n\n* Если параметр равен `1`, то бревно не нужно распиливать и функция должна вернуть `0`.\n\n* Если параметр равен `2`, то бревно нужно распилить один раз, чтобы получить две части.\n\n* Если параметр равен `3`, то бревно нужно распилить два раза, чтобы получить три части.\n\n\nПримеры запуска функции:\n\n```javascript\nwoodSplit(1) === 0\nwoodSplit(2) === 1\nwoodSplit(3) === 2\nwoodSplit(4) === 3\nwoodSplit(5) === 4\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function woodSplit(parts) {\n  return parts - 1;\n}",
  "openTest": "it('Created function woodSplit', () => {\n  expect(woodSplit).to.be.a('function');\n});\n\nit('woodSplit(1) returns 0', () => {\n  expect(woodSplit(1)).to.equal(0);\n} );\n\nit('woodSplit(2) returns 1', () => {\n  expect(woodSplit(2)).to.equal(1);\n} );\n\nit('woodSplit(3) returns 2', () => {\n  expect(woodSplit(3)).to.equal(2);\n\n} );\n\nit('woodSplit(4) returns 3', () => {\n  expect(woodSplit(4)).to.equal(3);\n} );",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}