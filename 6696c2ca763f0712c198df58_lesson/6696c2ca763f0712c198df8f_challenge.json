{
  "_id": "6696c2ca763f0712c198df8f",
  "name": {
    "en": "Calculate income from car rental",
    "ru": "Рассчитать доход от проката автомобилей"
  },
  "instruction": {
    "en": "Write a function to help a car rental company.\nWrite the function `calculateRentalProfit`.\n\nThe function inputs parameters in this order:\n\n* number of available rental days\n* percentage of bookings\n* cost of one day rental for the client.\n* service cost per day of the rental car.\n* cost of one day service of a non-rental car.\n* number of cars available\n\nThe company wants to know how much money it will get for a rental car.\n\nExample:\n\n* 100 days available for rentals.\n* 60% of the reservations. That is, 60 days are reserved, 40 days are free, and you can't earn anything from them.\n* for the customer the cost of one day's rental is $30\n* service charge per day for a rental car is $10\n* service charge per day for a non-rental car is $5 (e.g. for storage)\n* there are 10 cars available\n\nIn this case, the company will be left with $10,000\n\nThe function should return the amount the company has left over after the rental for that time.\n\n```\ncalculateRentalProfit(100, 60, 30, 10, 5, 10) should return 10000\ncalculateRentalProfit(100, 20, 30, 10, 5, 10) should return 0\ncalculateRentalProfit(100, 80, 30, 5, 5, 50) should return 95000\ncalculateRentalProfit(300, 85, 60, 10, 5, 500) should return 6262500\n```",
    "ru": "Пишем функцию для помощи компании по прокату автомобилей.\nНапиши функцию `calculateRentalProfit`.\n\nНа вход функции подаются параметры в таком порядке:\n\n* количество доступных дней проката\n* процент резерваций\n* стоимость проката за один день для клиента.\n* стоимость обслуживания за один день автомобиля в прокате.\n* стоимость обслуживания за один день автомобиля не в прокате.\n* количество автомобилей в наличии\n\nКомпания хочет узнать, сколько денег она получит за прокат автомобилей.\n\nПример:\n\n* доступно для проката 100 дней\n* 60% резерваций. То есть 60 дней зарезервированы, 40 дней свободны и с них не получится ничего заработать.\n* для клиента стоимость проката за один день 30 долларов\n* стоимость обслуживания за один день автомобиля в прокате 10 долларов\n* стоимость обслуживания за один день автомобиля не в прокате 5 долларов (например, на хранение)\n* в наличии 10 автомобилей\n\nВ этом случае у компании останется 10 000 долларов\n\nФункция должна вернуть сумму, которая останется у компании после проката за это время.\n\n```\ncalculateRentalProfit(100, 60, 30, 10, 5, 10) should return 10000\ncalculateRentalProfit(100, 20, 30, 10, 5, 10) should return 0\ncalculateRentalProfit(100, 80, 30, 5, 5, 50) should return 95000\ncalculateRentalProfit(300, 85, 60, 10, 5, 500) should return 6262500\n```"
  },
  "initialSolution": "function (){\n\n}",
  "completedSolution": "function calculateRentalProfit(days, percent, cost, service, serviceNotRented, cars) {\n  const rentedDays = days * percent / 100;\n  const notRentedDays = days - rentedDays;\n  return rentedDays * cost * cars - rentedDays * service * cars - notRentedDays * serviceNotRented * cars;\n}",
  "openTest": "it('Created function calculateRentalProfit', () => {\n  expect(calculateRentalProfit).to.be.a('function');\n});\n\nit('calculateRentalProfit(100, 60, 30, 10, 5, 10) should return 10000', () => {\n  expect(calculateRentalProfit(100, 60, 30, 10, 5, 10)).to.equal(10000);\n});\n\nit('calculateRentalProfit(100, 20, 30, 10, 5, 10) should return 0', () => {\n  expect(calculateRentalProfit(100, 20, 30, 10, 5, 10)).to.equal(0);\n} );\n\nit('calculateRentalProfit(100, 80, 30, 5, 5, 50) should return 95000', () => {\n  expect(calculateRentalProfit(100, 80, 30, 5, 5, 50)).to.equal(95000);\n});\n\nit('calculateRentalProfit(300, 85, 60, 10, 5, 500) should return 6262500', () => {\n  expect(calculateRentalProfit(300, 85, 60, 10, 5, 500)).to.equal(6262500);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}