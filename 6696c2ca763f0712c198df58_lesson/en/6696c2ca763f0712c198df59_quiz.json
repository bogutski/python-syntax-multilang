{
  "name": "Function parameters and arguments",
  "questions": {
    "0": {
      "name": "When declaring the function sum(n1, n2) in parentheses, n1 and n2 are called:",
      "variants": {
        "0": {
          "name": "The parameters of the function"
        },
        "1": {
          "name": "The arguments of the function"
        },
        "2": {
          "name": "There are no names."
        }
      }
    },
    "1": {
      "name": "When the function sum(2, 5) is called, the numbers 2 and 5 in brackets are called:",
      "variants": {
        "0": {
          "name": "The parameters of the function"
        },
        "1": {
          "name": "The arguments of the function"
        },
        "2": {
          "name": "There are no names."
        }
      }
    },
    "2": {
      "name": "The function argument is the value that is assigned to the parameter when the function is called",
      "variants": {
        "0": {
          "name": "The statement is true"
        },
        "1": {
          "name": "The statement is false"
        }
      }
    },
    "3": {
      "name": "Arguments are assigned to function parameters in the order in which they are specified when the function is called.",
      "variants": {
        "0": {
          "name": "The statement is true"
        },
        "1": {
          "name": "The statement is false"
        }
      }
    },
    "4": {
      "name": "Choose true statements about functions:",
      "variants": {
        "0": {
          "name": "Function parameters must be unique within a function."
        },
        "1": {
          "name": "Parameters in a function declaration can have the same name."
        },
        "2": {
          "name": "Acceptable function f(x, x) { return x + x}"
        },
        "3": {
          "name": "Acceptable function f1(n1, n2) { return 1 } and function f2(n1, n2) { return 2 }"
        }
      }
    },
    "5": {
      "name": "Choose an acceptable syntax in functions:",
      "variants": {
        "0": {
          "name": "function f(x, y) { return x + y; }"
        },
        "1": {
          "name": "function f(2, y) { return 2 + y; }"
        },
        "2": {
          "name": "function 1f(x, y) { return x + y; }"
        },
        "3": {
          "name": "function f() { return ''; }"
        }
      }
    },
    "6": {
      "name": "Select an acceptable syntax in functions:",
      "variants": {
        "0": {
          "name": "function() { return 'fun'; }"
        },
        "1": {
          "name": "function functin() {return 'fun';}"
        },
        "2": {
          "name": "function fun() {return 'function';}"
        },
        "3": {
          "name": "function fun() {return fun;}"
        }
      }
    },
    "7": {
      "name": "Select an acceptable syntax in functions:",
      "variants": {
        "0": {
          "name": "function f(x, y) {console.log(x, y);}"
        },
        "1": {
          "name": "function f(x, y) {console.log(x, x, x);}"
        },
        "2": {
          "name": "function f(f1, f2) {console.log(f1, f2); return f1 + f2;}"
        },
        "3": {
          "name": "function f(f1, f2) {console.log(f1, f2), return f1 + f2;}"
        }
      }
    },
    "8": {
      "name": "Select an acceptable syntax in functions:",
      "variants": {
        "0": {
          "name": "function sum(n1, n2) {return f1 * f2;}"
        },
        "1": {
          "name": "function multi(n1, n2) {return n1 + n2;}"
        },
        "2": {
          "name": "function n1(n, n) {return n * n;}"
        },
        "3": {
          "name": "function return(n) {console.log(n);}"
        }
      }
    },
    "9": {
      "name": "Select an acceptable syntax in functions:",
      "variants": {
        "0": {
          "name": "function retunr(n) { return n; }"
        },
        "1": {
          "name": "function Console(log) { return log; }"
        },
        "2": {
          "name": "console.log(function() { return 1; });"
        },
        "3": {
          "name": "console.log(return 1);"
        }
      }
    }
  }
}