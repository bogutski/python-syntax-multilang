{
  "name": "Check if an array element is a palindrome",
  "instruction": "Create a function `isPalindrome` that takes one parameter, an array.\n\nThe array is of arbitrary length and can contain data types `string` and/or `number`.\n\nThe `string` data type can contain any characters, letters in different case, spaces at the end or beginning of a word.\n\nIf a string consists of several words, the words are always separated by the underscore character `_`.\n\nIf the data type of an array element is `string`, you must remove spaces at the beginning and end of the string.\n\nThe `number` data type can only contain positive integers and/or fractional numbers.\n\nStrings and numbers in the array are unique.\n\nThe function returns an object where the keys are the elements from the array and the values are the result of checking the element for a palindrome.\n\nIf the array is empty, the function returns the string `Array is empty`.\n\n\nThe `isElPalindrome` function, which is called inside the `isPalindrome` function, is used to check an element for a palindrome.\n\nThe `isElPalindrome` function accepts one parameter - an array element.\n\nIf the array element is a number, it must be converted to a string.\n\nIf the array element is a string, it must be converted to a single case.\n\nIf an array element is an empty string, the function returns a string of `String is empty` form.\n\nIf the array element is a palindrome, the function returns the string `palindrome`.\n\nIf the array element is not a palindrome, the function returns the string `not a palindrome`.\n\nExample of running the function:\n```javascript\nisPalindrome(['madaM', 'level', 121, 13, ' cat ']);\n// {cat: 'not a palindrome', 121: 'palindrome', 13: 'not a palindrome', level: 'palindrome', madaM: 'palindrome'}\nisPalindrome([47974, 1.1, 53]); // {1.1: \"palindrome\", 47974: \"palindrome\", 53: \"not a palindrome\"}\nisPalindrome(['ciVIC', 'radaR', ' wow', '']);\n// {'': \"String is empty\", wow: \"palindrome\", ciVIC: \"palindrome\", radaR: \"palindrome\"}\nisPalindrome(['step_on_no_pets', 'Level', ' 777 ', 89]);\n// {777 : \"palindrome\", 89: \"not a palindrome\", Level: \"palindrome\", step_on_no_pets: \"palindrome\"}\nisPalindrome([]); // 'Array is empty'\n```",
  "instructions": {}
}