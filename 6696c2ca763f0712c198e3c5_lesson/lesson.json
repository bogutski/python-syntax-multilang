{
  "_id": "6696c2ca763f0712c198e3c5",
  "content": {
    "ru": "Для поиска и обращения к символам в строке используются `индексы`.\n\nКаждый символ в строке находится на своем месте, и это место пронумеровано.\n\n### Первый символ всегда находится на индексе `0`\n\nДля наглядности рассмотрим пример:\n\n```javascript\nconst str = 'Hello PASV';\n```\n\nПервый символ этой строки — `H`, ему соответствует индекс `0`. \n\nПоследний символ — `V`, соответствующий индексу `9`. \n\nУ символа `пробел` также имеется индекс на позиции `5`.\n\nВсего в строке `10` символов, то есть длина строки `str.length` равна `10`.\n\nИндекс последнего символа всегда будет равен длине строки минус 1:\n\n`str.length - 1`\n\nВ нашем примере:\n\n`индекс последнего символа = str.length - 1 = 10 - 1 = 9`\n\n![](https://course-qa-basics.s3.us-west-1.amazonaws.com/str-length.png)\n\nК символам в строке можно обращаться по их индексам, указывая их в квадратных скобках. \n\nРассмотрим пример:\n\n```javascript\nconst str = 'Hello PASV';\nconsole.log(str[0]); // H - обращение в первому символу строки (индекс 0)\nconsole.log(str[1]); // e\nconsole.log(str[5]); //   - на этом индексе находится пробел\nconsole.log(str[9]); // V\n```\n\nВнутри квадратных скобок можно написать значение переменной:\n\n```javascript\nconst str = 'Hello PASV';\n\nconst i = 9;\nconsole.log(str[i]); // V\n\nconst j = 8;\nconsole.log(str[j]); // S\n```\n\nОбратиться к последнему символу в строке, независимо от ее содержимого, можно используя свойство `length`:\n\n```javascript\nconst str = 'Hello JS';\nconst i = str.length - 1;\nconsole.log(str[i]); // S - последний символ строки\n```\n\n![](https://course-qa-basics.s3.us-west-1.amazonaws.com/hello-pasv.png)\n\nАналогично можно получить предпоследний символ:\n\n```javascript\nconst j = str.length - 2;\nconsole.log(str[j]); // J\n```\n\nЕсли указывать индексы, значение которых меньше нуля, а также если они выходят за границы строки, получим `undefined`:\n\n```javascript\nconst str = 'Hello JS';\nconst i = 8;\nconst j = -1;\nconsole.log(str[i]); // undefined\nconsole.log(str[j]); // undefined\n```\n\nСоздадим функцию, в которую будем передавать строку, и она будет возвращать только первый и последний символы:\n\n```javascript\nfunction firstAndLast(str){\n  return str[0] + str[str.length - 1];\n};\n\nconsole.log(firstAndLast('Hello JS')); // HS\nconsole.log(firstAndLast('ABC')); // AC\nconsole.log(firstAndLast('AB')); // AB\nconsole.log(firstAndLast('A')); // AA\n```\n\nДля более точной работы нашей функции добавим условие проверки длины - если строка состоит из одного символа, то пусть возвращается только этот символ:\n\n```javascript\nfunction firstAndLast(str){\n  if(str.length === 1) return str;\n  return str[0] + str[str.length - 1];\n};\n\nconsole.log(firstAndLast('A')); // A\n```",
    "en": "The `indexes` are used to search and refer to characters in a string.\n\nEach character in the string is in its place, and this place is numbered.\n\n### The first character is always at index `0`.\n\nLet's look at an example to illustrate:\n\n```javascript\nconst str = 'Hello PASV';\n```\n\nThe first character of this string is `H` and corresponds to the index `0`. \n\nThe last character is `V`, corresponding to the index `9`. \n\nThe symbol `space` also has an index at the `5` position.\n\nThe string has a total of `10` characters, that is, the length of the string `str.length` equals `10`.\n\nThe index of the last character will always be equal to the string length minus 1:\n\n`str.length - 1`\n\nIn our example:\n\nThe `index of the last character = str.length - 1 = 10 - 1 = 9`\n\n![](https://course-qa-basics.s3.us-west-1.amazonaws.com/str-length.png)\n\nCharacters in a string can be referred to by their indexes, indicating them in square brackets. \n\nLet's look at an example:\n\n```javascript\nconst str = 'Hello PASV';\nconsole.log(str[0]); // H is the reference to the first character of the string (index 0)\nconsole.log(str[1]); // e\nconsole.log(str[5]); // - there is a space at this index\nconsole.log(str[9]); // V\n```\n\nInside the square brackets you can write the value of the variable:\n\n```javascript\nconst str = 'Hello PASV';\n\nconst i = 9;\nconsole.log(str[i]); // V\n\nconst j = 8;\nconsole.log(str[j]); // S\n```\n\nThe last character in a string, regardless of its contents, can be accessed using the `length` property:\n\n```javascript\nconst str = 'Hello JS';\nconst i = str.length - 1;\nconsole.log(str[i]); // S is the last character of the string\n```\n\n![](https://course-qa-basics.s3.us-west-1.amazonaws.com/hello-pasv.png)\n\nSimilarly, you can get the penultimate character:\n\n```javascript\nconst j = str.length - 2;\nconsole.log(str[j]); // J\n```\n\nIf you specify indices whose value is less than zero, and if they are outside the string boundaries, we get `undefined`:\n\n```javascript\nconst str = 'Hello JS';\nconst i = 8;\nconst j = -1;\nconsole.log(str[i]); // undefined\nconsole.log(str[j]); // undefined\n```\n\nLet's create a function to which we will pass a string, and it will return only the first and the last characters:\n\n```javascript\nfunction firstAndLast(str){\n  return str[0] + str[str.length - 1];\n};\n\nconsole.log(firstAndLast('Hello JS')); // HS\nconsole.log(firstAndLast('ABC')); // AC\nconsole.log(firstAndLast('AB')); // AB\nconsole.log(firstAndLast('A')); // AA\n```\n\nTo make our function work more accurately, let's add a length check condition - if the string consists of one character, then let only that character be returned:\n\n```javascript\nfunction firstAndLast(str){\n  if(str.length === 1) return str;\n  return str[0] + str[str.length - 1];\n};\n\nconsole.log(firstAndLast('A')); // A\n```",
    "es": "# Индексы в строке language: es"
  },
  "video": {
    "ru": "https://youtu.be/Fh-WYNKb4f8",
    "en": "",
    "es": ""
  }
}