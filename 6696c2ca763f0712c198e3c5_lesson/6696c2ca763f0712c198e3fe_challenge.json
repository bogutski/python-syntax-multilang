{
  "_id": "6696c2ca763f0712c198e3fe",
  "name": {
    "en": "Return the specified index from the string",
    "ru": "Вернуть указанный индекс из строки"
  },
  "instruction": {
    "en": "Write a function `getByIndex` that takes a string and an index and returns the character that is in that string at the specified index.\n\nExamples of running the function:\n```javascript\ngetByIndex('abc', 0); // 'a'\ngetByIndex('JS', 1); // 'S'\ngetByIndex('JS', 0); // 'J'\n```\n\n\nA similar example:\n```javascript\nconst i = 2;\nconst str = 'abc';\nconsole.log(str[i]); // 'c'\n```",
    "ru": "Напишите функцию `getByIndex`, которая принимает строку и индекс и возвращает символ, который находится в этой строке по указанному индексу.\n\nПримеры запуска функции:\n```javascript\ngetByIndex('abc', 0); // 'a'\ngetByIndex('JS', 1); // 'S'\ngetByIndex('JS', 0); // 'J'\n```\n\n\nПохожий пример:\n```javascript\nconst i = 2;\nconst str = 'abc';\nconsole.log(str[i]); // 'c'\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function getByIndex(str, index) {\n  return str[index];\n}",
  "openTest": "it('Created function getByIndex', () => {\n  expect(getByIndex).to.be.a('function');\n});\n\nit('getByIndex(\"abc\", 0) should return \"a\"', () => {\n  expect(getByIndex('abc', 0)).to.equal('a');\n});\n\nit('getByIndex(\"JS\", 1) should return \"S\"', () => {\n  expect(getByIndex('JS', 1)).to.equal('S');\n});\n\nit('getByIndex(\"JS\", 0) should return \"J\"', () => {\n  expect(getByIndex('JS', 0)).to.equal('J');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}