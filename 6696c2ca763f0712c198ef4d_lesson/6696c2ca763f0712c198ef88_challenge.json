{
  "_id": "6696c2ca763f0712c198ef88",
  "name": {
    "en": "",
    "ru": "Разница длины строк"
  },
  "instruction": {
    "en": "",
    "ru": "Задача, похожая на предыдущую, но на этот раз ее нужно решить с помощью лишь одного цикла.\n\nФункция `stringLengthsDif` принимает массив `arr` в качестве аргумента.\n\nВ массиве `arr` хранятся разные типы данных, включая строки.\n\nНеобходимо найти последнюю строку в массиве, длину этой строки.\n\nФункция должна вернуть разницу между длиной последней строки и длиной предыдущих строк.\n\nИсправьте ошибки в коде, чтобы функция работала правильно.\n\nПример запуска функции:\n```javascript\nstringLengthsDif([1, 2, 3, \"abc\", \"def\", \"abcdefjk\"]);  //8 - 3 -3 = 2\nstringLengthsDif([1, 2, 3, \"true\", \"false\", \"JavaScript Practice\", true]);  //19 - 5 - 4 = 10\n```"
  },
  "initialSolution": "function stringLengthsDif(arr) {\n  let difference = 0;\n\n  for (let i = arr.length, i >= 0, i--) {\n    if (typeof arr[i] === string && difference === 0) difference = arr[i.length];\n    else if (typeof arr[i] === string) difference -= arr[i.length]\n  }\n\n  return difference;\n}",
  "completedSolution": "function stringLengthsDif(arr) {\n  let difference = 0;\n\n  for (let i = arr.length-1; i >= 0; i--) {\n    if (typeof arr[i] === 'string' && difference === 0) difference = arr[i].length;\n    else if (typeof arr[i] === 'string') difference -= arr[i].length\n  }\n\n  return difference;\n}",
  "openTest": "it('Created function stringLengthsDif', () => {\n  expect(stringLengthsDif).to.be.a('function');\n});\n\nit('stringLengthsDif([1, 2, 3, \"abc\", \"def\", \"abcdefjk\"]) returns 2', () => {\n  expect(stringLengthsDif([1, 2, 3, \"abc\", \"def\", \"abcdefjk\"])).to.equal(2);\n});\n\nit('stringLengthsDif([1, 2, 3, \"true\", \"false\", \"JavaScript Practice\", true]) returns 10', () => {\n  expect(stringLengthsDif([1, 2, 3, \"true\", \"false\", \"JavaScript Practice\", true])).to.equal(10);\n});\n\nit('stringLengthsDif([1, 2, 3, true, \"\"]) returns 0', () => {\n  expect(stringLengthsDif([1, 2, 3, true, \"\"])).to.equal(0);\n});\n\nit('stringLengthsDif([1, \"you will\", \"expert in JavaScript\", \"soon\", true]) returns -24', () => {\n  expect(stringLengthsDif([1, \"you will\", \"expert in JavaScript\", \"soon\", true])).to.equal(-24);\n});\n\nit('stringLengthsDif([\"cat\", \"dog\", \"cat and dog\"]) returns 5', () => {\n  expect(stringLengthsDif([\"cat\", \"dog\", \"cat and dog\"])).to.equal(5);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}