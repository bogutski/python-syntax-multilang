{
  "_id": "6696c2ca763f0712c198ef89",
  "name": {
    "en": "",
    "ru": "Соберите фразу в зависимости от типа данных"
  },
  "instruction": {
    "en": "",
    "ru": "Функция `getAPhrase` принимает массив, содержащий разные типы данных.\n\nНеобходимо пройтись по массиву с конца и собрать фразу:\n* если элемент массива - строка, то добавить ее во фразу\n* если элемент массива - булевое значение, то добавить во фразу слово \"oops\"\n* если элемент массива - число, то ничего не делать\n\nВернуть получившуюся фразу. Слова должны быть разделены пробелами, но в конце не должно быть пробела.\n\nНе используйте метод `reverse()` для решения этой задачи\n\nПример запуска функции:\n```javascript\ngetAPhrase([15, \"!\", \"world\", true, 42, \"Hello\", false]) // \"oops Hello oops world !\"\ngetAPhrase([(2>1), false, 15, 0, 0)]) // \"oops oops\"\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function getAPhrase(arr) {\n  let str = '';\n  for (let i = arr.length-1; i >= 0; i--) {\n    if(typeof arr[i] === 'boolean') str += 'oops '\n    if (typeof arr[i] === 'string') str += arr[i] + ' '\n  }\n  return str.trim();\n}",
  "openTest": "it('Created function getAPhrase', () => {\n  expect(getAPhrase).to.be.a('function');\n});\n\nit('function getAPhrase do not include statement \"reverse\"', () => {\n  expect(getAPhrase.toString().includes('reverse')).to.equal(false);\n});\nit('getAPhrase([15, \"!\", \"world\", true, 42, \"Hello\", false]) returns \"oops Hello oops world !\"', () => {\n  expect(getAPhrase([15, \"!\", \"world\", true, 42, \"Hello\", false])).to.equal(\"oops Hello oops world !\");\n});\n\nit('getAPhrase([(2>1), false, 15, 0, 0)]) returns \"oops oops\"', () => {\n  expect(getAPhrase([(2>1), false, 15, 0, 0])).to.equal(\"oops oops\");\n});\n\nit('getAPhrase([true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false]) returns \"oops oops oops oops oops oops oops oops oops oops oops oops oops oops oops oops\"', () => {\n  expect(getAPhrase([true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false])).to.equal(\"oops oops oops oops oops oops oops oops oops oops oops oops oops oops oops oops\");\n});\n\nit('getAPhrase([12, 45673, 0, 145, 5]) returns \"\"', () => {\n  expect(getAPhrase([12, 45673, 0, 145, 5])).to.equal(\"\");\n});\n\nit('getAPhrase([\"ok?\", \"you\", \"are\"]) return \"are you ok?\"', () => {\n  expect(getAPhrase([\"ok?\", \"you\", \"are\"])).to.equal(\"are you ok?\");\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}