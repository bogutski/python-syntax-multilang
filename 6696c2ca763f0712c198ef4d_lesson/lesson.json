{
  "_id": "6696c2ca763f0712c198ef4d",
  "content": {
    "ru": "Давайте разберем задачу, в которой надо перебрать массив в обратном порядке.\n\n1 способ: Изменим настройки самого цикла\n```javascript\nconst arr = [4, 1, 2, 6, 8, 3];\n\n  for (let i = arr.length -1; i >= 0; i--){\n  console.log(arr[i])\n}\n  \n  // 3 8 6 2 1 4\n```\nРезультат правильный.\n\nВ цикле можно изменять шаг итерации, в зависимости от условий задачи, но\nдавайте рассмотрим другой вариант, когда цикл будет идти по возрастанию.\n\n2 способ: изменим настройки обращения к элементу\n\n```javascript\nconst arr = [4, 1, 2, 6, 8];\n\n  for (let i = 0; i < arr.length; i++){\n  console.log(arr[arr.length - i - 1])\n}\n  \n  // 8 6 2 1 4\n```\n\nВ данном случае мы, используя длину массива и значение итератора начиная с нуля,\nобращаемся к элементам массива, начиная с конца.",
    "en": "Let's look at a problem where we need to go through an array in reverse order.\n\n1 way: Change the settings of the cycle itself\n```javascript\nconst arr = [4, 1, 2, 6, 8, 3];\n\n  for (let i = arr.length -1; i >= 0; i--){\n  console.log(arr[i])\n}\n\n  // 3 8 6 2 1 4\n```\nThe result is correct.\n\nYou can change the iteration step in the loop, depending on the conditions of the problem, but\nlet's consider another option, when the loop will go in ascending order.\n\n2 way: change the settings for accessing the element\n\n```javascript\nconst arr = [4, 1, 2, 6, 8];\n\n  for (let i = 0; i < arr.length; i++){\n  console.log(arr[arr.length - i - 1])\n}\n\n  // 8 6 2 1 4\n```\n\nIn this case, using the length of the array and the iterator value starting from zero,\nwe access the elements of the array starting from the end.",
    "es": "# Перебор массива в обратном порядке language: es"
  },
  "video": {
    "ru": "https://youtu.be/AzOoJehaBXU",
    "en": "",
    "es": ""
  }
}