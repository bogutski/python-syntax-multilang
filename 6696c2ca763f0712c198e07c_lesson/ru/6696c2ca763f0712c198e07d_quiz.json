{
  "name": "Область видимости переменных",
  "questions": {
    "0": {
      "name": "Внутри программы может быть несколько блоков, в каждом из которых можно объявить переменную с одинаковым именем",
      "variants": {
        "0": {
          "name": "Утверждение верно"
        },
        "1": {
          "name": "Утверждение неверно"
        }
      }
    },
    "1": {
      "name": "Функция может использовать переменные, объявленные вне ее тела до вызова функции",
      "variants": {
        "0": {
          "name": "Утверждение верно"
        },
        "1": {
          "name": "Утверждение неверно"
        }
      }
    },
    "2": {
      "name": "Функция создает свою собственную область видимости переменных",
      "variants": {
        "0": {
          "name": "Утверждение верно"
        },
        "1": {
          "name": "Утверждение неверно"
        }
      }
    },
    "3": {
      "name": "Выберите код, который не вызовет ошибку",
      "variants": {
        "0": {
          "name": "{ const a = 1; { const a = 2; } }"
        },
        "1": {
          "name": "{ const a = 1;  const a = 2; }"
        },
        "2": {
          "name": "const a = 1; { const a = 2; }"
        },
        "3": {
          "name": "const a = 1; { a = 2; }"
        }
      }
    },
    "4": {
      "name": "Выберите код, который не вызовет ошибку",
      "variants": {
        "0": {
          "name": "let a = 1; { a = 2; }"
        },
        "1": {
          "name": "{ let a = 1; { a = 2; } } a = 3"
        },
        "2": {
          "name": "function f() { let a = 1; { a = 2; } } f(); a = 3"
        },
        "3": {
          "name": "const a = 1; { console.log(a); }"
        }
      }
    },
    "5": {
      "name": "Какой результат выполнения кода? Выберите варианты с правильным комментарием",
      "variants": {
        "0": {
          "name": "{ let a = 1; { let a = 2; } } console.log(a); // ReferenceError: a is not defined"
        },
        "1": {
          "name": "{ let a = 1; { a = 2; } console.log(a); // SyntaxError"
        },
        "2": {
          "name": "console.log(a); { let a  = 1 } // ReferenceError: a is not defined"
        },
        "3": {
          "name": "{ console.log(a); let a  = undefined } // выведет undefined"
        }
      }
    },
    "6": {
      "name": "Почему в коде { let a = 1; {console.log(a);}} не будет ошибки?",
      "variants": {
        "0": {
          "name": "Код написан в одну строку"
        },
        "1": {
          "name": "Вложенный блок имеет доступ к переменной из внешнего блока"
        },
        "2": {
          "name": "Переменная `a` объявлена во внешнем блоке"
        },
        "3": {
          "name": "Ошибка будет, если во внешнем блоке переменная `a` будет объявлена через `const`"
        }
      }
    },
    "7": {
      "name": "Выберите варианты, которые верны",
      "variants": {
        "0": {
          "name": "Переменные объявленные через `let` не видны во вложенных блоках"
        },
        "1": {
          "name": "Переменные объявленные через `let` и `const` имеют одинаковую область видимости"
        },
        "2": {
          "name": "Если объявить переменные через `let` или `const` в функции, то они будут доступны только внутри этой функции"
        },
        "3": {
          "name": "Если объявить переменные через `let` или `const` в функции, то они будут доступны вне функции после ее вызова"
        }
      }
    },
    "8": {
      "name": "Переменные объявленные через `let` и `const` имеют блочную область видимости",
      "variants": {
        "0": {
          "name": "Утверждение верно"
        },
        "1": {
          "name": "Утверждение неверно"
        }
      }
    },
    "9": {
      "name": "Ограниченная область видимости позволяет",
      "variants": {
        "0": {
          "name": "Избежать конфликтов имен переменных"
        },
        "1": {
          "name": "Быстрее анализировать код"
        },
        "2": {
          "name": "Уменьшить количество ошибок"
        },
        "3": {
          "name": "Контролировать изменение переменных"
        }
      }
    }
  }
}