{
  "_id": "6696c2cb763f0712c198f822",
  "name": {
    "en": "/*",
    "ru": "Найти последний индекс элемента в многомерном массиве"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `findLastIndexInMultidimensionalArray`, которая принимает многомерный массив и элемент.\n\nФункция должна вернуть индекс последнего вхождения элемента в многомерном массиве (в плоском представлении).\n\nЕсли элемент не найден, функция должна вернуть `-1`.\n\n\nПримеры запуска функции:\n```javascript\nfindLastIndexInMultidimensionalArray([[1, 2], [2, 3, 4], [2, 5]], 2); // 5\nfindLastIndexInMultidimensionalArray([['cat', 'dog'], ['fish', 'bird']], 'lion'); // -1\nfindLastIndexInMultidimensionalArray([['a', 'b'], ['c', 'd', 'a'], ['e', 'f']], 'a'); // 3\nfindLastIndexInMultidimensionalArray([[true, false], [true, true], [false, true]], true); // 5\n```"
  },
  "initialSolution": "function findLastIndexInMultidimensionalArray(){\n\n}",
  "completedSolution": "function findLastIndexInMultidimensionalArray(arr, element) {\n  return arr.flat(Infinity).lastIndexOf(element);\n}",
  "openTest": "it('Created function findLastIndexInMultidimensionalArray', () => {\n  expect(findLastIndexInMultidimensionalArray).to.be.a('function');\n});\n\nit(\"Function findLastIndexInMultidimensionalArray should include lastIndexOf method\", () => {\n  const result = findLastIndexInMultidimensionalArray.toString();\n  expect(result).to.include('.lastIndexOf(');\n});\n\nit('findLastIndexInMultidimensionalArray([[\"a\", \"b\"], [\"c\", \"d\", \"a\"], [\"e\", \"f\"]], \"a\") should return 4', function() {\n  expect(findLastIndexInMultidimensionalArray([[\"a\", \"b\"], [\"c\", \"d\", \"a\"], [\"e\", \"f\"]], \"a\")).to.equal(4);\n});\n\nit('findLastIndexInMultidimensionalArray([[1, 2], [3, 4], [2, 5]], 2) should return 4', function() {\n  expect(findLastIndexInMultidimensionalArray([[1, 2], [3, 4], [2, 5]], 2)).to.equal(4);\n});\n\nit('findLastIndexInMultidimensionalArray([[\"cat\", \"dog\"], [\"fish\", \"bird\"]], \"lion\") should return -1', function() {\n  expect(findLastIndexInMultidimensionalArray([[\"cat\", \"dog\"], [\"fish\", \"bird\"]], \"lion\")).to.equal(-1);\n});\n\nit('findLastIndexInMultidimensionalArray([[true, false], [true], [false, true]], true) should return 4', function() {\n  expect(findLastIndexInMultidimensionalArray([[true, false], [true], [false, true]], true)).to.equal(4);\n});\n\nit('findLastIndexInMultidimensionalArray([[\"apple\"], [\"banana\", \"apple\"], [\"cherry\"]], \"apple\") should return 2', function() {\n  expect(findLastIndexInMultidimensionalArray([[\"apple\"], [\"banana\", \"apple\"], [\"cherry\"]], \"apple\")).to.equal(2);\n});\n\nit('findLastIndexInMultidimensionalArray([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 4) should return 3', function() {\n  expect(findLastIndexInMultidimensionalArray([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 4)).to.equal(3);\n});\n\nit('findLastIndexInMultidimensionalArray([[], [], []], \"anything\") should return -1', function() {\n  expect(findLastIndexInMultidimensionalArray([[], [], []], \"anything\")).to.equal(-1);\n});\n\nit('findLastIndexInMultidimensionalArray([[null], [null], [null]], null) should return 2', function() {\n  expect(findLastIndexInMultidimensionalArray([[null], [null], [null]], null)).to.equal(2);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}