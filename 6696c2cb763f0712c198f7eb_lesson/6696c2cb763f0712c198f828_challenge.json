{
  "_id": "6696c2cb763f0712c198f828",
  "name": {
    "en": "/*",
    "ru": "Найти последний индекс числа, сумма цифр которого равна заданному числу"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `findLastIndexByDigitSum`, которая принимает массив чисел и число.\n\nФункция должна вернуть объект, содержащий массив сумм цифр каждого числа и индекс последнего элемента массива, сумма цифр которого равна заданному числу.\n\n\nПримеры запуска функции:\n```javascript\nconsole.log(findLastIndexByDigitSum([123, 456, 789, 101, 202], 6));\n// { sumOfNumbers: [ 6, 15, 24, 2, 4 ], index: 0 }\n\nconsole.log(findLastIndexByDigitSum([34, 56, 78, 90], 9));\n// { sumOfNumbers: [ 7, 11, 15, 9 ], index: 3 }\n\nconsole.log(findLastIndexByDigitSum([12, 34, 56, 78], 10));\n// { sumOfNumbers: [ 3, 7, 11, 15 ], index: -1 }\n\nconsole.log(findLastIndexByDigitSum([11, 22, 33, 44], 5));\n// { sumOfNumbers: [ 2, 4, 6, 8 ], index: -1 }\n```"
  },
  "initialSolution": "function findLastIndexByDigitSum(){\n\n}",
  "completedSolution": "function findLastIndexByDigitSum(arr, n) {\n  const modified = arr.map(num => {\n    num = num.toString()\n    let sum = 0\n\n    for(let char of num){\n      sum += +char\n    }\n\n    return sum\n  })\n\n  return {sumOfNumbers: modified, index: modified.lastIndexOf(n)};\n}",
  "openTest": "it('Created function findLastIndexByDigitSum', () => {\n  expect(findLastIndexByDigitSum).to.be.a('function');\n});\n\nit('findLastIndexByDigitSum([123, 456, 789, 101, 202], 6) should return { sumOfNumbers: [ 6, 15, 24, 2, 4 ], index: 0 }', function() {\n  expect(findLastIndexByDigitSum([123, 456, 789, 101, 202], 6)).to.deep.equal({ sumOfNumbers: [ 6, 15, 24, 2, 4 ], index: 0 });\n});\n\nit('findLastIndexByDigitSum([34, 56, 78, 90], 9) should return { sumOfNumbers: [ 7, 11, 15, 9 ], index: 3 }', function() {\n  expect(findLastIndexByDigitSum([34, 56, 78, 90], 9)).to.deep.equal({ sumOfNumbers: [ 7, 11, 15, 9 ], index: 3 });\n});\n\nit('findLastIndexByDigitSum([12, 34, 56, 78], 10) should return { sumOfNumbers: [ 3, 7, 11, 15 ], index: -1 }', function() {\n  expect(findLastIndexByDigitSum([12, 34, 56, 78], 10)).to.deep.equal({ sumOfNumbers: [ 3, 7, 11, 15 ], index: -1 });\n});\n\nit('findLastIndexByDigitSum([11, 22, 33, 44], 5) should return { sumOfNumbers: [ 2, 4, 6, 8 ], index: -1 }', function() {\n  expect(findLastIndexByDigitSum([11, 22, 33, 44], 5)).to.deep.equal({ sumOfNumbers: [ 2, 4, 6, 8 ], index: -1 });\n});\n\nit('findLastIndexByDigitSum([9, 18, 27, 36], 9) should return { sumOfNumbers: [ 9, 9, 9, 9 ], index: 3 }', function() {\n  expect(findLastIndexByDigitSum([9, 18, 27, 36], 9)).to.deep.equal({ sumOfNumbers: [ 9, 9, 9, 9 ], index: 3 });\n});\n\nit('findLastIndexByDigitSum([123, 321, 213, 231], 6) should return { sumOfNumbers: [ 6, 6, 6, 6 ], index: 3 }', function() {\n  expect(findLastIndexByDigitSum([123, 321, 213, 231], 6)).to.deep.equal({ sumOfNumbers: [ 6, 6, 6, 6 ], index: 3 });\n});\n\nit('findLastIndexByDigitSum([], 1) should return { sumOfNumbers: [], index: -1 }', function() {\n  expect(findLastIndexByDigitSum([], 1)).to.deep.equal({ sumOfNumbers: [], index: -1 });\n});\n\nit('findLastIndexByDigitSum([15, 24, 33, 42], 6) should return { sumOfNumbers: [ 6, 6, 6, 6 ], index: 3 }', function() {\n  expect(findLastIndexByDigitSum([15, 24, 33, 42], 6)).to.deep.equal({ sumOfNumbers: [ 6, 6, 6, 6 ], index: 3 });\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}