{
  "name": "Проверить, является ли строка анаграммой",
  "questions": {
    "0": {
      "name": "Выберите верное определение понятия анаграмма",
      "variants": {
        "0": {
          "name": "Анаграмма - это слово, образованное путем перемещения половины букв в другое слово."
        },
        "1": {
          "name": "Анаграмма - это слово или фраза, образованные путем уменьшения букв."
        },
        "2": {
          "name": "Анаграмма - это слово или фраза, образованные путем перестановки букв другого слова или фразы."
        },
        "3": {
          "name": "Анаграмма - это фраза, образованная путем удаления согласных букв из слов."
        }
      }
    },
    "1": {
      "name": "Выберите верный(е) пример(ы) анаграммы",
      "variants": {
        "0": {
          "name": "dusty - study"
        },
        "1": {
          "name": "eleven plus two - twelve plus one"
        },
        "2": {
          "name": "cook - book"
        },
        "3": {
          "name": "save - vase"
        }
      }
    },
    "2": {
      "name": "Верно ли следующее утверждение? Если длины строк не равны, то это не анаграмма.",
      "variants": {
        "0": {
          "name": "Нет, это утверждение не верно."
        },
        "1": {
          "name": "Да, это утверждение верно."
        }
      }
    },
    "3": {
      "name": "Может ли число быть анаграммой?",
      "variants": {
        "0": {
          "name": "Нет, только слова и фразы могут быть анаграммами"
        },
        "1": {
          "name": "Да, но только если помимо цифр в слове или фразе есть буквы"
        },
        "2": {
          "name": "Да, но только отрицательные числа могут быть анаграммами"
        },
        "3": {
          "name": "Да, числа тоже могут быть анаграммой"
        }
      }
    },
    "4": {
      "name": "Верно ли что запуск кода ниже приведет к false?",
      "description": "```lavascript\nfunction isAnagram(str1, str2){\n  if(str1.length !== str2.length) return false;   \n  for(let i = 0; i < str1.length; i++){         \n    for(let j = 0; j < str2.length; j++){       \n      if(str1[i] === str2[j]) break;              \n      if(str2.length -1 === j) return false;    \n    }\n  }\n  return true;\n}\nconsole.log(isAnagram('dusty', 'study'));  \n```",
      "variants": {
        "0": {
          "name": "Да, потому что слова dusty и study не являются анаграммами"
        },
        "1": {
          "name": "Нет, результатом будет true, потому что слова dusty и study являются анаграммами"
        },
        "2": {
          "name": "Да, потому что строки не преведены к единому регистру"
        },
        "3": {
          "name": "Да, потому что внутри цикла for используется break"
        }
      }
    },
    "5": {
      "name": "Если слова vase и save содержат пробелы и написаны в разном регистре, могут ли они быть анаграммой?",
      "variants": {
        "0": {
          "name": "Да, они являются анаграммой, но надо обрезать пробелы и привести слова к единому регистру"
        },
        "1": {
          "name": "Нет, слова изначально должны быть написаны в едином регистре и без пробелов"
        },
        "2": {
          "name": "Да, если привести их к единому регистру. Пробелы можно не обрезать, они не учитываются в коде"
        },
        "3": {
          "name": "Нет, эти слова не являются анаграммой, даже если привести их к единому регистру и обрезать пробелы"
        }
      }
    },
    "6": {
      "name": "Что выведется в консоль после запуска кода ниже?",
      "description": "```javascript\nfunction isAnagram(str1, str2){\n    const s1 = str1.trim().toLowerCase();\n    const s2 = str2.trim().toLowerCase();\n    if(s1.length !== s2.length) return false;\n    const s1mod = s1.split('').sort().join('');\n    const s2mod = s2.split('').sort().join('');\n  return s1mod === s2mod;\n}\nconsole.log(isAnagram('a gentleman', 'elegant man'));\n```",
      "variants": {
        "0": {
          "name": "true"
        },
        "1": {
          "name": "false"
        },
        "2": {
          "name": "undefined"
        },
        "3": {
          "name": "error"
        }
      }
    },
    "7": {
      "name": "Что делает метод sort() с массивом?",
      "variants": {
        "0": {
          "name": "Сортирует слова по смыслу"
        },
        "1": {
          "name": "Сортирует буквы по гласным и согласным"
        },
        "2": {
          "name": "Сортирует массив по алфавиту"
        },
        "3": {
          "name": "Сортирует слова по количеству гласных букв в слове"
        }
      }
    },
    "8": {
      "name": "Что выведется в консоль после запуска кода ниже?",
      "description": "```javascript\nconst str = 'state'\nconst s2 = str.split('');\nconst s3 = s2.sort();\nconst s4 = s3.join('');\nconsole.log(s3, s4);\n```",
      "variants": {
        "0": {
          "name": "['a', 'e', 's', 't', 't']\n'aestt'"
        },
        "1": {
          "name": "['s', 't', 'a', 't', 'e']\n['a', 'e', 's', 't', 't']"
        },
        "2": {
          "name": "['s', 't', 'a', 't', 'e']\n'aestt'"
        },
        "3": {
          "name": "['a', 'e', 's', 't', 't']\n'taste'"
        }
      }
    },
    "9": {
      "name": "Почему результатом работы кода ниже будет false?",
      "description": "```javascript\nfunction isAnagram(str1, str2){\n    const s1 = str1.trim().toLowerCase();\n    const s2 = str2.trim().toLowerCase();\n    if(s1.length !== s2.length) return false;\n    const s1mod = s1.split('').sort().join('');\n    const s2mod = s2.split('').sort().join('');\n  return s1mod === s2mod;\n}\nconsole.log(isAnagram('schoolmaster', 'The classroom'));\n```",
      "variants": {
        "0": {
          "name": "Потому что слова не являются анаграммами друг друга"
        },
        "1": {
          "name": "Потому что длина строк не совпадает из-за пробела"
        },
        "2": {
          "name": "Потому что в строках разный регистр букв"
        },
        "3": {
          "name": "Результатом работы кода будет true"
        }
      }
    }
  }
}