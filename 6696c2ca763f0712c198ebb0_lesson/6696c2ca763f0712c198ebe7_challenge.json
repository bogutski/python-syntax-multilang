{
  "_id": "6696c2ca763f0712c198ebe7",
  "name": {
    "en": "",
    "ru": "Проверка на анаграмму в массиве строк"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `isAnagram`, которая принимает `массив строк` и возвращает `true`, если все строки являются анаграммами друг друга, и `false` в противном случае.\n\nВсе строки будут без пробелов и в нижнем регистре.\n\nВ этой задачи нужно только проверить, являются ли строки анаграммами друг друга, для этого выполните проверку на\n длину строки и наличие одних и тех же элементов в каждой строке.\n\nМетоды `split`, `sort` и `join` использовать запрещено.\n\n\nПримеры запуска функции:\n```javascript\nisAnagram(['elbow', 'below', 'ebowl']);   // true\nisAnagram(['123', '321', '132', '312']);  // true\nisAnagram(['cat', 'dog', 'big']);         // false\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function isAnagram(arr){\n  const checkWord = arr[0];\n\n  for(let i = 1; i < arr.length; i++){\n    if(checkWord.length !== arr[i].length) return false;\n\n    for(let j = 0; j < arr[i].length; j++){\n      if(!checkWord.includes(arr[i][j])) return false;\n    }\n\n  }\n  return true;\n}",
  "openTest": "it('Created function isAnagram', () => {\n  expect(isAnagram).to.be.a('function');\n});\n\nit(\"Function isAnagram should not have method 'split'\", () => {\n  expect(isAnagram.toString()).to.not.contain('split');\n});\n\nit(\"Function isAnagram should not have method 'sort'\", () => {\n  expect(isAnagram.toString()).to.not.contain('sort');\n});\n\nit(\"Function isAnagram should not have method 'join'\", () => {\n  expect(isAnagram.toString()).to.not.contain('join');\n});\n\nit(\"isAnagram(['elbow', 'below', 'ebowl']) should return true\", () => {\n  expect(isAnagram(['elbow', 'below', 'ebowl'])).to.be.true;\n});\n\nit(\"isAnagram(['1234', '4321', '3124', '2143']) should return true\", () => {\n  expect(isAnagram(['1234', '4321', '3124', '2143'])).to.be.true;\n});\n\nit(\"isAnagram(['listen', 'silent', 'enlist']) should return true\", () => {\n  expect(isAnagram(['listen', 'silent', 'enlist'])).to.be.true;\n});\n\nit(\"isAnagram(['cat', 'dog', 'big']) should return false\", () => {\n  expect(isAnagram(['cat', 'dog', 'big'])).to.be.false;\n});\n\nit(\"isAnagram(['cat', 'dog', 'big', 'tac']) should return false\", () => {\n  expect(isAnagram(['cat', 'dog', 'big', 'tac'])).to.be.false;\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}