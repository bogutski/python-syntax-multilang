{
  "_id": "6696c2ca763f0712c198ebe5",
  "name": {
    "en": "",
    "ru": "Проверка на анаграмму с использованием объекта"
  },
  "instruction": {
    "en": "",
    "ru": "В этой задаче мы попрактикуемся в написании функций, с использованием циклов и объекта.\n\nНапишите функцию `isAnagram`, которая принимает две строки и возвращает `true`, если эти строки являются анаграммами, и `false` в противном случае.\n\nСтроки могу содержать пробелы, заглавные и строчные буквы и разную длину. Пустых строк не будет передано.\n\nПопробуйте использовать пример с объектом, который мы рассмотрели в уроке. Методы использовать нельзя, кроме `trim`, `toLowerCase` и `toUpperCase`.\n\n\nПримеры запуска функции:\n```javascript\nisAnagram('123', '923');                 // false\nisAnagram('  eLBow ', 'bELow');          // true\nisAnagram('laptop', 'toplapp');          // false\nisAnagram('laptop 123', 'toplap 123');   // true\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function isAnagram(str1, str2){\n  const s1 = str1.trim().toLowerCase()\n  const s2 = str2.trim().toLowerCase()\n\n  if(s1.length !== s2.length) return false;\n\n  const s2obj = {};\n\n  for(let i = 0; i < s2.length; i++){\n    const el = s2[i];\n    s2obj[el] = true;\n  }\n\n  for(let i = 0; i < s1.length; i++){\n    const el = s1[i]\n    if(!s2obj[el]) return false;\n  }\n  return true;\n}",
  "openTest": "it('Created function isAnagram', () => {\n  expect(isAnagram).to.be.a('function');\n});\n\nit(\"Function isAnagram does not contain method 'split'\", () => {\n  expect(isAnagram.toString()).to.not.contain('split');\n});\n\nit(\"Function isAnagram does not contain method 'sort'\", () => {\n  expect(isAnagram.toString()).to.not.contain('sort');\n});\n\nit(\"Function isAnagram does not contain method 'join'\", () => {\n  expect(isAnagram.toString()).to.not.contain('join');\n});\n\nit(\"isAnagram('12345', '23541') should return true\", () => {\n  expect(isAnagram('12345', '23541')).to.be.true;\n});\n\nit(\"isAnagram('12345', '231541') should return false\", () => {\n  expect(isAnagram('12345', '231541')).to.be.false;\n});\n\nit(\"isAnagram('elBow', 'belOw') should return true\", () => {\n  expect(isAnagram('elBow', 'belOw')).to.be.true;\n});\n\nit(\"isAnagram('  maN', 'Nam  ') should return true\", () => {\n  expect(isAnagram('  maN', 'Nam  ')).to.be.true;\n});\n\nit(\"isAnagram('listEn', 'Silemt') should return false\", () => {\n  expect(isAnagram('listEn', 'Silemt')).to.be.false;\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}