{
  "name": "Check if the string is an anagram",
  "questions": {
    "0": {
      "name": "Choose the correct definition of an anagram",
      "variants": {
        "0": {
          "name": "An anagram is a word formed by moving half the letters in another word."
        },
        "1": {
          "name": "An anagram is a word or phrase formed by reducing letters."
        },
        "2": {
          "name": "An anagram is a word or phrase formed by rearranging the letters of another word or phrase."
        },
        "3": {
          "name": "An anagram is a phrase formed by removing consonant letters from words."
        }
      }
    },
    "1": {
      "name": "Choose the correct example(s) of an anagram",
      "variants": {
        "0": {
          "name": "dusty - study"
        },
        "1": {
          "name": "eleven plus two - twelve plus one"
        },
        "2": {
          "name": "cook - book"
        },
        "3": {
          "name": "vase"
        }
      }
    },
    "2": {
      "name": "Is the following statement true? If the lengths of the strings are not equal, it is not an anagram.",
      "variants": {
        "0": {
          "name": "No, that statement is not true."
        },
        "1": {
          "name": "Yes, that statement is true."
        }
      }
    },
    "3": {
      "name": "Can a number be an anagram?",
      "variants": {
        "0": {
          "name": "No, only words and phrases can be anagrams"
        },
        "1": {
          "name": "Yes, but only if there are letters in addition to numbers in the word or phrase"
        },
        "2": {
          "name": "Yes, but only negative numbers can be anagrams"
        },
        "3": {
          "name": "Yes, numbers can be an anagram too"
        }
      }
    },
    "4": {
      "name": "Is it true that running the code below will result in false?",
      "description": "```lavascript\nfunction isAnagram(str1, str2){\n  if(str1.length !== str2.length) return false;   \n  for(let i = 0; i < str1.length; i++){         \n    for(let j = 0; j < str2.length; j++){       \n      if(str1[i] === str2[j]) break;              \n      if(str2.length -1 === j) return false;    \n    }\n  }\n  return true;\n}\nconsole.log(isAnagram('dusty', 'study'));  \n```",
      "variants": {
        "0": {
          "name": "Yes, because the words dusty and study are not anagrams."
        },
        "1": {
          "name": "No, the result is true because the words dusty and study are anagrams"
        },
        "2": {
          "name": "Yes, because the strings are not case-sensitive."
        },
        "3": {
          "name": "Yes, because break is used inside the for loop"
        }
      }
    },
    "5": {
      "name": "If the words vase and save contain spaces and are written in different case, can they be an anagram?",
      "variants": {
        "0": {
          "name": "Yes, they are an anagram, but you have to trim the spaces and bring the words to the same case"
        },
        "1": {
          "name": "No, words must initially be written in single case and without spaces"
        },
        "2": {
          "name": "Yes, if you make them case-sensitive. Spaces may not be trimmed, they are not taken into account in the code"
        },
        "3": {
          "name": "No, these words are not an anagram, even if you bring them to the same case and trim the spaces"
        }
      }
    },
    "6": {
      "name": "What will be output to the console after running the code below?",
      "description": "```javascript\nfunction isAnagram(str1, str2){\n    const s1 = str1.trim().toLowerCase();\n    const s2 = str2.trim().toLowerCase();\n    if(s1.length !== s2.length) return false;\n    const s1mod = s1.split('').sort().join('');\n    const s2mod = s2.split('').sort().join('');\n  return s1mod === s2mod;\n}\nconsole.log(isAnagram('a gentleman', 'elegant man'));\n```",
      "variants": {
        "0": {
          "name": "true"
        },
        "1": {
          "name": "false"
        },
        "2": {
          "name": "undefined"
        },
        "3": {
          "name": "error"
        }
      }
    },
    "7": {
      "name": "What does the sort() method do to an array?",
      "variants": {
        "0": {
          "name": "Sorts words by meaning"
        },
        "1": {
          "name": "Sorts letters into vowels and consonants"
        },
        "2": {
          "name": "Sorts the array alphabetically"
        },
        "3": {
          "name": "Sorts words by the number of vowel letters in the word"
        }
      }
    },
    "8": {
      "name": "What will be output to the console after running the code below?",
      "description": "```javascript\nconst str = 'state'\nconst s2 = str.split('');\nconst s3 = s2.sort();\nconst s4 = s3.join('');\nconsole.log(s3, s4);\n```",
      "variants": {
        "0": {
          "name": "['a', 'e', 's', 't', 't']\n'aestt'"
        },
        "1": {
          "name": "['s', 't', 'a', 't', 'e']\n['a', 'e', 's', 't', 't']"
        },
        "2": {
          "name": "['s', 't', 'a', 't', 'e']\n'aestt'"
        },
        "3": {
          "name": "['a', 'e', 's', 't', 't']\n'taste'"
        }
      }
    },
    "9": {
      "name": "Why would the result of the code below be false?",
      "description": "```javascript\nfunction isAnagram(str1, str2){\n    const s1 = str1.trim().toLowerCase();\n    const s2 = str2.trim().toLowerCase();\n    if(s1.length !== s2.length) return false;\n    const s1mod = s1.split('').sort().join('');\n    const s2mod = s2.split('').sort().join('');\n  return s1mod === s2mod;\n}\nconsole.log(isAnagram('schoolmaster', 'The classroom'));\n```",
      "variants": {
        "0": {
          "name": "Because words are not anagrams of each other"
        },
        "1": {
          "name": "Because the lengths of the strings don't match because of the whitespace"
        },
        "2": {
          "name": "Because the strings have different letter cases."
        },
        "3": {
          "name": "The result of the code will be true"
        }
      }
    }
  }
}