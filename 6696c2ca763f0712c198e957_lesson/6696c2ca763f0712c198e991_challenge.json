{
  "_id": "6696c2ca763f0712c198e991",
  "name": {
    "en": "Correct the errors so that the function works correctly",
    "ru": "Исправьте ошибки, чтобы функция работала правильно"
  },
  "instruction": {
    "en": "The `stopAt2DigitNum` function takes one parameter, an array of numbers of arbitrary length.\n\nThe `stopAt2DigitNum` function returns the sum of all the numbers in the array.\n\nIf there is a two-digit positive or negative number,\n\nthe summation stops and returns the current sum before a two-digit number is encountered.\n\nCorrect the errors in the code so that the function works correctly.\n\nAn example of running the function:\n```javascript\nstopAt2DigitNum([1, 3, 5, 17, 7, 84, 9]) // 1 + 3 + 5 = 9\nstopAt2DigitNum([3, 4, -11, 3, 5, 33]) // 3 + 4 = 7\nstopAt2DigitNum([15, 7, -2]) // 0\nstopAt2DigitNum([1, 3, 4]) // 1 + 3 + 4 = 8\nstopAt2DigitNum([2, 400, 5, 99]) // 2 + 400 + 5 = 407\n```",
    "ru": "Функция `stopAt2DigitNum` принимает один параметр - массив чисел произвольной длины.\n\n`stopAt2DigitNum` возвращает сумму всех чисел в массиве.\n\nЕсли встречается двузначное положительное или отрицательное число,\n\nто суммирование прекращается и возвращается текущая сумма до встречи с двузначным числом.\n\nИсправьте ошибки в коде, чтобы функция работала правильно.\n\nПример запуска функции:\n```javascript\nstopAt2DigitNum([1, 3, 5, 17, 7, 84, 9]) // 1 + 3 + 5 = 9\nstopAt2DigitNum([3, 4, -11, 3, 5, 33]) // 3 + 4 = 7\nstopAt2DigitNum([15, 7, -2]) // 0\nstopAt2DigitNum([1, 3, 4]) // 1 + 3 + 4 = 8\nstopAt2DigitNum([2, 400, 5, 99]) // 2 + 400 + 5 = 407\n```"
  },
  "initialSolution": "function StopAt2DigitNum(arr) {\n  let sum = 0\n  for (let i = 0; i < arr.length - 1; i++) {\n    if (arr[i] >= 9 || arr[i] <= 100 && arr[i] <= -9 || arr[i] >= -100) break;\n    sum -= arr[i]\n  }\n  return arr\n}",
  "completedSolution": "function stopAt2DigitNum(arr) {\n  let sum = 0\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 9 && arr[i] < 100 || arr[i] < -9 && arr[i] > -100) break;\n    sum += arr[i]\n  }\n  return sum\n}",
  "openTest": "it('Created function stopAt2DigitNum', () => {\n  expect(stopAt2DigitNum).to.be.a('function');\n});\n\nit('stopAt2DigitNum([1, 3, 5, 17]) should return 9', () => {\n  expect(stopAt2DigitNum([1, 3, 5, 17])).to.equal(9);\n});\n\nit('stopAt2DigitNum([3, 4, -11]) should return 7', () => {\n  expect(stopAt2DigitNum([3, 4, -11])).to.equal(7);\n});\n\nit('stopAt2DigitNum([15, 7, -2]) should return 0', () => {\n  expect(stopAt2DigitNum([15, 7, -2])).to.equal(0);\n});\n\nit('stopAt2DigitNum([1, 3, 4]) should return 8', () => {\n  expect(stopAt2DigitNum([1, 3, 4])).to.equal(8);\n});\n\nit('stopAt2DigitNum([-2, -4, -5, 99]) should return -11', () => {\n  expect(stopAt2DigitNum([-2, -4, -5, 99])).to.equal(-11);\n});\n\nit('stopAt2DigitNum([]) should return 0', () => {\n  expect(stopAt2DigitNum([])).to.equal(0);\n});\n\nit('stopAt2DigitNum([2, 400, 5, 99]) should return 407', () => {\n  expect(stopAt2DigitNum([2, 400, 5, 99])).to.equal(407);\n});\n\nit('stopAt2DigitNum([2000, 400, 5, 11, 100]) should return 2405', () => {\n  expect(stopAt2DigitNum([2000, 400, 5, 11, 100])).to.equal(2405);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}