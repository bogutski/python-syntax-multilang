{
  "_id": "6696c2ca763f0712c198e98a",
  "name": {
    "en": "Fix bugs in the code",
    "ru": "Исправьте ошибки в коде"
  },
  "instruction": {
    "en": "The function `stopAt7` takes one parameter - an array of numbers `arr`.\n\nThe array `arr` consists of at least two numbers.\n\nThe function will return a filled array `arr2`.\n\nThe new array is filled from `arr[0]` to `arr[arr.length - 1]`, including these values.\n\nThe filling of the array `arr2` should stop if the number `7` is encountered.\nNote that the number `7` should be included in the array `arr2` and the loop should be stopped after it.\n\nFor example,\n\n* if `arr = [2, 15]`, then `arr2 = [2, 3, 4, 5, 6, 7]`.\n\n* if `arr = [0, 10, 15, 5]`, then `arr2 = [0, 1, 2, 3, 4, 5]`.\n\n\nFix the errors in the code to make it comply with the task requirements.\n\n\nFunction execution examples:\n```javascript\nstopAt7([2, 10, 15, 3]);     // [2, 3]\nstopAt7([2, 15]);            // [2, 3, 4, 5, 6, 7]\nstopAt7([2, 5, 34, 107, 8]); // [2, 3, 4, 5, 6, 7]\nstopAt7([-2, 15]);           // [-2, -1, 0, 1, 2, 3, 4, 5, 6, 7]\nstopAt7([30, 20, 40]);       // [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40]\n```",
    "ru": "Функция `stopAt7` принимает один параметр - массив чисел `arr`.\n\nМассив `arr` состоит как минимум из двух чисел.\n\nФункция будет возвращать заполненный массив `arr2`.\n\nНовый массив заполняется от `arr[0]` до `arr[arr.length - 1]`, включая эти значения.\n\nЗаполнение массива `arr2` должно прерваться если встречается цифра `7`.\nОбратите внимание, что цифра `7` должна быть включена в массив `arr2` и после цикл должен быть прерван.\n\nНапример,\n\n* если `arr = [2, 15]`, то `arr2 = [2, 3, 4, 5, 6, 7]`.\n\n* если `arr = [0, 10, 15, 5]`, то `arr2 = [0, 1, 2, 3, 4, 5]`.\n\n\nИсправьте ошибки в коде, чтобы он соответствовал условиям задачи.\n\n\nПримеры запуска функции:\n```javascript\nstopAt7([2, 10, 15, 3]);     // [2, 3]\nstopAt7([2, 15]);            // [2, 3, 4, 5, 6, 7]\nstopAt7([2, 5, 34, 107, 8]); // [2, 3, 4, 5, 6, 7]\nstopAt7([-2, 15]);           // [-2, -1, 0, 1, 2, 3, 4, 5, 6, 7]\nstopAt7([30, 20, 40]);       // [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40]\n```"
  },
  "initialSolution": "function StopAt7(arr); {\n  Let arr2 = [];\n  for (let i = arr[1]; i = arr[arr.length - 1]; i++) {\n    arr.push(i)\n    if (i = 7) break[arr2];\n  }\n  return arr\n}",
  "completedSolution": "function stopAt7(arr) {\n  let arr2 = [];\n  for (let i = arr[0]; i <= arr[arr.length - 1]; i++) {\n    arr2.push(i)\n    if (i === 7) break;\n  }\n  return arr2\n}",
  "openTest": "it('Created function stopAt7', () => {\n  expect(stopAt7).to.be.a('function');\n});\n\nit('stopAt7([2, 15]) should return [2, 3, 4, 5, 6, 7]', () => {\n  expect(stopAt7([2, 15])).to.eql([2, 3, 4, 5, 6, 7]);\n});\n\nit('stopAt7([2, 10, 15, 3]) should return [2, 3]', () => {\n  expect(stopAt7([2, 10, 15, 3])).to.eql([2, 3]);\n});\n\nit('stopAt7([2, 5, 34, 107, 8]) should return [2, 3, 4, 5, 6, 7]', () => {\n  expect(stopAt7([2, 5, 34, 107, 8])).to.eql([2, 3, 4, 5, 6, 7]);\n});\n\nit('stopAt7([30, 20, 40]) should return [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40]', () => {\n  expect(stopAt7([30, 20, 40])).to.eql([30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40]);\n});\n\nit('stopAt7([-2, 15]) should return [-2, -1, 0, 1, 2, 3, 4, 5, 6, 7]', () => {\n  expect(stopAt7([-2, 15])).to.eql([-2, -1, 0, 1, 2, 3, 4, 5, 6, 7]);\n});\n\nit('stopAt7([-2, 0, 3, 7]) should return [-2, -1, 0, 1, 2, 3, 4, 5, 6, 7]', () => {\n  expect(stopAt7([-2, 0, 3, 7])).to.eql([-2, -1, 0, 1, 2, 3, 4, 5, 6, 7]);\n});\n\nit('stopAt7([1, -5]) should return []', () => {\n  expect(stopAt7([1, -5])).to.eql([]);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}