{
  "_id": "6696c2ca763f0712c198e990",
  "name": {
    "en": "Counting the sum of the numbers in the array is interrupted when encountering a three-digit number",
    "ru": "Подсчёт суммы чисел в массиве прерывается при встрече с трёхзначным числом"
  },
  "instruction": {
    "en": "Write a function `stopAt3DigitNum` that takes one parameter, an array of numbers.\n\nThe function returns the sum of all the numbers in the array.\n\nIf there is a positive three-digit number in the array, the summation stops and the current sum is returned.\n\nAn example of running the function:\n```javascript\nstopAt3DigitNum([1, 12, 35, 57, 123, 36, 3, 4, 2345]) // 1 + 12 + 35 + 57 = 105\nstopAt3DigitNum([1, 35, -123, 36, 3, 4]) // 1 + 35 + (-123) + 36 + 3 + 4 = -44\nstopAt3DigitNum([1, 35, 3, 4]) // 1 + 35 + 3 + 4 = 43\n```",
    "ru": "Напишите функцию `stopAt3DigitNum`, которая принимает один параметр - массив чисел.\n\nФункция возвращает сумму всех чисел в массиве.\n\nЕсли в массиве встречается положительное трёхзначное число, то суммирование прекращается и возвращается текущая сумма.\n\nПример запуска функции:\n```javascript\nstopAt3DigitNum([1, 12, 35, 57, 123, 36, 3, 4, 2345]) // 1 + 12 + 35 + 57 = 105\nstopAt3DigitNum([1, 35, -123, 36, 3, 4]) // 1 + 35 + (-123) + 36 + 3 + 4 = -44\nstopAt3DigitNum([1, 35, 3, 4]) // 1 + 35 + 3 + 4 = 43\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function stopAt3DigitNum(arr) {\n  let sum = 0\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 99 && arr[i] < 1000) break;\n    sum += arr[i]\n  }\n  return sum\n}",
  "openTest": "it('Created function stopAt3DigitNum', () => {\n  expect(stopAt3DigitNum).to.be.a('function');\n});\n\nit('stopAt3DigitNum([1, 12, 35, 57, 123, 36, 3, 4, 2345]) should return 105', () => {\n  expect(stopAt3DigitNum([1, 12, 35, 57, 123, 36, 3, 4, 2345])).to.be.equal(105);\n});\n\nit('stopAt3DigitNum([1, 35, -123, 36, 3, 4]) should return -44', () => {\n  expect(stopAt3DigitNum([1, 35, -123, 36, 3, 4])).to.be.equal(-44);\n});\n\nit('stopAt3DigitNum([1, 35, 3, 4]) should return 43', () => {\n  expect(stopAt3DigitNum([1, 35, 3, 4])).to.be.equal(43);\n});\n\nit('stopAt3DigitNum([123, 36, 3]) should return 0', () => {\n  expect(stopAt3DigitNum([123, 36, 3])).to.be.equal(0);\n});\n\nit('stopAt3DigitNum([]) should return 0', () => {\n  expect(stopAt3DigitNum([])).to.be.equal(0);\n});\n\nit('stopAt3DigitNum([1, 2, 3, 4, 303]) should return 10', () => {\n  expect(stopAt3DigitNum([1, 2, 3, 4, 303])).to.be.equal(10);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}