{
  "_id": "6696c2ca763f0712c198e98e",
  "name": {
    "en": "Interrupt the character count in the string at the letter R",
    "ru": "Прервать подсчёт символов в строке на букве R"
  },
  "instruction": {
    "en": "Write a function `stopAtR` that takes a single parameter - a string of arbitrary length.\n\nThe function should return the number of characters in the string.\n\nThe character count should stop at the first encounter with the letter `R`.\n\nAn example of running the function:\n```javascript\nstopAtR('R') // 0\nstopAtR('rftgjkfdttfjRhZKlbgf') // 12\nstopAtR('rf7 jkfd') // 8\n```",
    "ru": "Напишите функцию `stopAtR`, которая принимает один параметр - строку произвольной длины.\n\nФункция должна вернуть количество символов в строке.\n\nПодсчёт символов должен прерваться при первой встрече с буквой `R`.\n\nПример запуска функции:\n```javascript\nstopAtR('R') // 0\nstopAtR('rftgjkfdttfjRhZKlbgf') // 12\nstopAtR('rf7 jkfd') // 8\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function stopAtR(str) {\n  let count = 0;\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] === 'R') break;\n    count++\n  }\n  return count\n}",
  "openTest": "it('Created function stopAtR', () => {\n  expect(stopAtR).to.be.a('function');\n});\n\nit('stopAtR(\"R\") should return 0', () => {\n  expect(stopAtR(\"R\")).to.be.equal(0);\n});\n\nit('stopAtR(\"rftgjkfdttfjRhZKlbgf\") should return 12', () => {\n  expect(stopAtR(\"rftgjkfdttfjRhZKlbgf\")).to.be.equal(12);\n});\n\nit('stopAtR(\"rftgjkfd\") should return 8', () => {\n  expect(stopAtR(\"rftgjkfd\")).to.be.equal(8);\n});\n\nit('stopAtR(\"\") should return 0', () => {\n  expect(stopAtR(\"\")).to.be.equal(0);\n});\n\nit('stopAtR(\"rftgjkfdttfjyTWRZKlbgf\") should return 15', () => {\n  expect(stopAtR(\"rftgjkfdttfjyTWRZKlbgf\")).to.be.equal(15);\n});\n\nit('stopAtR(\"rftg dRtf RZKlbgf\") should return 6', () => {\n  expect(stopAtR(\"rftg dRtf RZKlbgf\")).to.be.equal(6);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}