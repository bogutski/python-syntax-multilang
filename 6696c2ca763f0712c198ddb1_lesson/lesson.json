{
  "_id": "6696c2ca763f0712c198ddb1",
  "content": {
    "ru": "![](https://course-qa-basics.s3.us-west-1.amazonaws.com/nan.png)\n### Сложение `+` \n```javascript\nconsole.log(3 + 4) // 7\n```\n\n### Вычитание `-` \n```javascript\nconsole.log(3 - 4) // -1\n```\n\n### Умножение `*`\n```javascript\nconsole.log(3 * 4) // 12\n```\n\n### Деление `/`\n```javascript\nconsole.log(3 / 4) // 0.75\n```\n\n### Возведение в степень `**`\n```javascript\nconsole.log(3 ** 4) // 81\n```\n\n### Остаток от деления `%`\n```javascript\nconsole.log(10 % 2) // 0\nconsole.log(9 % 2) // 1\n```\n\nС помощью оператора `%` удобно определять четное число или нечетное,\nтак как при делении четного числа на 2, остаток равен 0, а при делении\nнечетного числа на 2, остаток равен 1\n\n```javascript\nconsole.log(12 % 2) // 0\nconsole.log(91 % 2) // 1\n```\n\n### Квадратный корень \n\nЧтобы извлечь квадратный корень из числа, возведите его в степень `0.5`\n\n```javascript\nconsole.log(16 ** 0.5) // 4\nconsole.log(100 ** 0.5) // 10\nconsole.log(14 ** 0.5) // 3.7416573867739413\n```\n\n### `NaN` not a number - не число\n\n`NaN` не является числом, но относится к типу данных `number`\n\n```javascript\nconsole.log(NaN) // NaN\nconsole.log(typeof NaN) // 'number'\n```\n\nМы получим `NaN` в результате следующих операций:\n\n```javascript\nconsole.log('12a' * 2) // NaN\nconsole.log('12a' / 2) // NaN\nconsole.log('12a' - 2) // NaN\nconsole.log('12a' % 2) // NaN\nconsole.log('12a' ** 2) // NaN\n```\n\nПодумайте, почему в результате этих операций мы получаем `NaN`.\n\nЕсли сложить строковое значение с числовым, то произойдет преобразование\nчислового значения к строковому, а результатом будет слияние строк\n\n```javascript\nconsole.log('12a' + 2) // '12a2'\nconsole.log('f45' + 7) // 'f457'\n```\n",
    "en": "![](https://course-qa-basics.s3.us-west-1.amazonaws.com/nan.png)\n### Adding `+` \n```javascript\nconsole.log(3 + 4) // 7\n```\n\n### Subtraction `-` \n```javascript\nconsole.log(3 - 4) // -1\n```\n\n### Multiplication `*`\n```javascript\nconsole.log(3 * 4) // 12\n```\n\n### Division `/`\n```javascript\nconsole.log(3 / 4) // 0.75\n```\n\n### Incremental `**`\n```javascript\nconsole.log(3 ** 4) // 81\n```\n\n### The remainder of the division `%`\n```javascript\nconsole.log(10 % 2) // 0\nconsole.log(9 % 2) // 1\n```\n\nIt is convenient to use the `%` operator to determine whether a number is even or odd,\nbecause when dividing an even number by 2, the remainder is 0, and when dividing an\nan odd number by 2, the remainder is 1\n\n```javascript\nconsole.log(12 % 2) // 0\nconsole.log(91 % 2) // 1\n```\n\n### Square root \n\nTo extract the square root of a number, raise it to the power of `0.5`.\n\n```javascript\nconsole.log(16 ** 0.5) // 4\nconsole.log(100 ** 0.5) // 10\nconsole.log(14 ** 0.5) // 3.7416573867739413\n```\n\n### `NaN` not a number - not a number\n\n`NaN` is not a number, but refers to the data type `number`.\n\n```javascript\nconsole.log(NaN) // NaN\nconsole.log(typeof NaN) // 'number'\n```\n\nWe will obtain `NaN` as a result of the following operations:\n\n```javascript\nconsole.log('12a' * 2) // NaN\nconsole.log('12a' / 2) // NaN\nconsole.log('12a' - 2) // NaN\nconsole.log('12a' % 2) // NaN\nconsole.log('12a' ** 2) // NaN\n```\n\nThink about why we get `NaN` as a result of these operations.\n\nIf you add a string value to a numeric value, the\nof a numeric value to a string value, and the result will be the merging of strings\n\n```javascript\nconsole.log('12a' + 2) // '12a2'\nconsole.log('f45' + 7) // 'f457'\n```\n",
    "es": "# Математические операторы. NaN language: es"
  },
  "video": {
    "ru": "https://youtu.be/1YK6lKKWRYw",
    "en": "",
    "es": ""
  }
}