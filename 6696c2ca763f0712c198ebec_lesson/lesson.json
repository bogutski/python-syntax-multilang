{
  "_id": "6696c2ca763f0712c198ebec",
  "content": {
    "ru": "# Посчитать количество вхождений символа в строку\nВ этом занятии мы научимся считать, сколько раз символ входит в строку.\n\nРассмотрим пример:\n```javascript\nconst str = 'Hello JS';\n// нам нужно посчитать сколько раз буква 'l' входит в строку\n```\n\nСамый простой способ это сделать - это пройтись по строке циклом и посчитать сколько раз буква встречается в строке.\nДля этого создадим переменную - счетчик `count`:\n```javascript\nlet count = 0;\nconst s = 'l';                          // символ, который мы будем искать\nfor (let i = 0; i < str.length; i++) {   \n  if (str[i] === s) {                   // если символ входит в строку, то увеличиваем счетчик на 1\n    count++;\n  }\n}\n\nconsole.log(count);                     // 2\n```\nА что если мы хотим посчитать вхождения буквы, но без учета регистра?\n\nСамый простой способ это перевести искомую строку `str` в нижний регистр и потом с ней работать.\n\nЕсли по каким-то причинам перевести всю строку нельзя, то мы можем переводить в нижний регистр каждый символ\nв теле цикла, и результат будет одинаковый.\n```javascript\nconst str = 'Hello JSL';               // мы также можем перевести всю строку str.toLowerCase()\nlet count = 0;\nconst s = 'l';                          \nfor (let i = 0; i < str.length; i++) {   \n  if (str[i].toLowerCase() === s) {                   \n    count++;\n  }\n}\n\nconsole.log(count);                    // 3\n```\nТак же для решения задачи можно использовать регулярные выражения, но проходить регулярные выражения \nмы будем ближе к концу курса.\n\nРассмотрим другой случай.\n\nЕсли переменная `str` была бы не строкой, а **массивом строк**\n```javascript\nconst arr = ['aq', 'ab', 'aq', 'ac'];\n//посчитаем количество вхождений строки `aq` в массив\nlet count = 0\nconst s = 'aq';\n\nfor (let i = 0; i < arr.length; i++) {      //цикл такой же как для строки\n  if (arr[i] === s) {\n    count++;\n  }\n}\n\nconsole.log(count);                         // 2\n``` \n\nДругой пример.\n\nВ массиве есть строки и необходимо посчитать количество вхождение символа во всех строках массива.\n\nТакая задача решается уже с помощью двух циклов \n```javascript\nconst arr = ['aq', 'bta', 'aqa', 'ac'];\n//посчитаем поличество вхождений буквы 'a' во всех строках массива\nlet count = 0\nconst s = 'a'                                 // искомая буква\n\nfor (let i = 0; i < arr.length; i++){         // данный цикл будет проходится по каждому элементу массива\n  for (let j = 0; j < arr[i].length; j++) {   // данный цикл будет проходится по каждому символу в строке\n    if (arr[i][j] === s) {                    // проверяет каждый символ каждого элемента массива\n      count++;\n    }\n  }\n}\n\nconsole.log(count);                           // 5\n``` ",
    "en": "# Count the number of occurrences of a character in a string\nIn this lesson we will learn to count how many times a character enters a string.\n\nLet's look at an example:\n```javascript\nconst str = 'Hello JS';\n// we need to count how many times the letter 'l' enters the string\n```\n\nThe easiest way to do this is to loop through the string and count how many times the letter occurs in the string.\nTo do this, create a variable - counter `count`:\n```javascript\nlet count = 0;\nconst s = 'l'; // the character we will search for\nfor (let i = 0; i < str.length; i++) { \n  if (str[i] === s) { // if a character is included into the string, we increment the counter by 1\n    count++;\n  }\n}\n\nconsole.log(count); // 2\n```\nWhat if we want to count the occurrences of a letter, but not case-sensitive?\n\nThe easiest way is to convert the string `str` to lowercase and then work with it.\n\nIf for some reason we cannot translate the whole string, we can lowercase each character\nin the body of the loop and the result will be the same.\n```javascript\nconst str = 'Hello JSL'; // we can also translate the entire str.toLowerCase()\nlet count = 0;\nconst s = 'l';    \nfor (let i = 0; i < str.length; i++) { \n  if (str[i].toLowerCase() === s) { \n    count++;\n  }\n}\n\nconsole.log(count); // 3\n```\nYou can also use regular expressions to solve the problem, but we will go over regular expressions \nWe will go through regular expressions towards the end of the course.\n\nConsider another case.\n\nIf the `str` variable were not a string, but **array of strings**\n```javascript\nconst arr = ['aq', 'ab', 'aq', 'ac'];\n//count the number of occurrences of string `aq` in the array\nlet count = 0\nconst s = 'aq';\n\nfor (let i = 0; i < arr.length; i++) { //the loop is the same as for the string\n  if (arr[i] === s) {\n    count++\n  }\n}\n\nconsole.log(count); // 2\n``` \n\nAnother example.\n\nThere are lines in the array and you need to count the number of occurrences of a character in all lines of the array.\n\nThis problem is already solved with two cycles \n```javascript\nconst arr = ['aq', 'bta', 'aqa', 'ac'];\n//count the number of occurrences of the letter 'a' in all strings of the array\nlet count = 0\nconst s = 'a' //the letter we are looking for\n\nfor (let i = 0; i < arr.length; i++){ // this loop will loop through each element of the array\n  for (let j = 0; j < arr[i].length; j++) { // this loop will loop through each character in the string\n    if (arr[i][j] === s) { // it will check each character of each array element\n      count++;\n    }\n  }\n}\n\nconsole.log(count); // 5\n``` ",
    "es": "# Посчитать количество вхождений символа в строку language: es"
  },
  "video": {
    "ru": "https://youtu.be/vSbLOrrZbWQ",
    "en": "",
    "es": ""
  }
}