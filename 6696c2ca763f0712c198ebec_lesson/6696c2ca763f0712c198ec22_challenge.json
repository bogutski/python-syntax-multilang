{
  "_id": "6696c2ca763f0712c198ec22",
  "name": {
    "en": "Number of occurrences of a character in a case-sensitive string",
    "ru": "Количество вхождений символа в строку с учетом регистра"
  },
  "instruction": {
    "en": "Write a function `LowerAndUpperCase` that takes a string and a character and returns the number of occurrences of the character in the string case-sensitive.\n\nUse two checks to count the number of occurrences:\n* for character equality in lower case\n* for character equality in upper case.\n\nAn example check:\n```javascript\nif(string[i] === el.toLowerCase()) countLowerCase++;\nif(string[i] === el.toUpperCase()) countUpperCase++;\n```\n\nThe function must return a string of the form: `Number of lowercase is ${countLowerCase} and uppercase is ${countUpperCase}`.\n\nThe string and element will always be passed to the function, there is no need to check for them.\n\n```javascript\nlowerAndUpperCase('Hello World!', 'l'); // 'Number of lowercase is 3 and uppercase is 0'\nlowerAndUpperCase('Hello WORLD!', 'o'); // 'Number of lowercase is 1 and uppercase is 1'\nlowerAndUpperCase('APPLE', 'p'); // 'Number of lowercase is 0 and uppercase is 2'\n```",
    "ru": "Напишите функцию `lowerAndUpperCase`, которая принимает строку и символ и возвращает количество вхождений символа в строку с учетом регистра.\n\nДля подсчета количества вхождений используйте две проверки:\n* на равенство символа в нижнем регистре\n* на равенство символа в верхнем регистре.\n\nПример проверки:\n```javascript\nif(string[i] === el.toLowerCase()) countLowerCase++;\nif(string[i] === el.toUpperCase()) countUpperCase++;\n```\n\nФункция должна возвращать строку вида: `Number of lowercase is ${countLowerCase} and uppercase is ${countUpperCase}`.\n\nСтрока и элемент всегда будут переданы в функцию, не нужно проверять их наличие.\n\n```javascript\nlowerAndUpperCase('Hello World!', 'l');  // 'Number of lowercase is 3 and uppercase is 0'\nlowerAndUpperCase('Hello WORLD!', 'o');  // 'Number of lowercase is 1 and uppercase is 1'\nlowerAndUpperCase('APPLE', 'p');         // 'Number of lowercase is 0 and uppercase is 2'\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function lowerAndUpperCase(str, el) {\n  let countLowerCase = 0;\n  let countUpperCase = 0;\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] === el.toLocaleString()) countLowerCase++;\n    if (str[i] === el.toLocaleUpperCase()) countUpperCase++;\n  }\n  return `Number of lowercase is ${countLowerCase} and uppercase is ${countUpperCase}`;\n}",
  "openTest": "it('Created function lowerAndUpperCase', () => {\n  expect(lowerAndUpperCase).to.be.a('function');\n});\n\nit(\"lowerAndUpperCase('Hello World!', 'l') should return 'Number of lowercase is 3 and uppercase is 0'\", () => {\n  expect(lowerAndUpperCase('Hello World!', 'l')).to.be.equal('Number of lowercase is 3 and uppercase is 0');\n});\n\nit(\"lowerAndUpperCase('Hello WORLD!', 'o') should return 'Number of lowercase is 1 and uppercase is 1'\", () => {\n  expect(lowerAndUpperCase('Hello WORLD!', 'o')).to.be.equal('Number of lowercase is 1 and uppercase is 1');\n});\n\nit(\"lowerAndUpperCase('APPLE', 'p') should return 'Number of lowercase is 0 and uppercase is 2'\", () => {\n  expect(lowerAndUpperCase('APPLE', 'p')).to.be.equal('Number of lowercase is 0 and uppercase is 2');\n});\n\nit(\"lowerAndUpperCase('abcAbaCaAbBcaaAAbc', 'a') should return 'Number of lowercase is 5 and uppercase is 4'\", () => {\n  expect(lowerAndUpperCase('abcAbaCaAbBcaaAAbc', 'a')).to.be.equal('Number of lowercase is 5 and uppercase is 4');\n});\n\nit(\"lowerAndUpperCase('abcAbaCaAbBcaaAAbc', 'b') should return 'Number of lowercase is 4 and uppercase is 1'\", () => {\n  expect(lowerAndUpperCase('abcAbaCaAbBcaaAAbc', 'b')).to.be.equal('Number of lowercase is 4 and uppercase is 1');\n});\n\nit(\"lowerAndUpperCase('abc', 's') should return 'Number of lowercase is 0 and uppercase is 0'\", () => {\n  expect(lowerAndUpperCase('abc', 's')).to.be.equal('Number of lowercase is 0 and uppercase is 0');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}