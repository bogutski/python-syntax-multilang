{
  "_id": "6696c2cb763f0712c198f863",
  "name": {
    "en": "/*",
    "ru": "Найти индекс первого элемента, длина строки которого больше длины следующего элемента"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `findFirstIndexLongerThanNext`, которая принимает массив строк.\n\nФункция должна вернуть индекс первого элемента в массиве, длина строки которого больше длины следующего элемента.\n\nЕсли такого элемента нет, функция должна вернуть строку `Element not found`.\n\n\nПримеры запуска функции:\n```javascript\nfindFirstIndexLongerThanNext(['apple', 'banana', 'cherry', 'date']); // 2\nfindFirstIndexLongerThanNext(['elephant', 'cat', 'dog', 'bird']); // 0\nfindFirstIndexLongerThanNext(['hello', 'world', 'hi']); // 1\nfindFirstIndexLongerThanNext(['one', 'two', 'three']); // \"Element not found\"\n```"
  },
  "initialSolution": "function findFirstIndexLongerThanNext(){\n\n}",
  "completedSolution": "function findFirstIndexLongerThanNext(arr) {\n  const res = arr.findIndex((string, i, original) => {\n    if(i !== original.length - 1) return string.length > original[i + 1].length\n    else return false\n  })\n\n  return res !== -1 ? res : 'Element not found';\n}",
  "openTest": "it('Created function findFirstIndexLongerThanNext', () => {\n  expect(findFirstIndexLongerThanNext).to.be.a('function');\n});\n\nit('findFirstIndexLongerThanNext([\"apple\", \"banana\", \"cherry\", \"date\"]) should return 2', function() {\n  expect(findFirstIndexLongerThanNext([\"apple\", \"banana\", \"cherry\", \"date\"])).to.equal(2);\n});\n\nit('findFirstIndexLongerThanNext([\"cat\", \"dog\", \"elephant\", \"bird\"]) should return 2', function() {\n  expect(findFirstIndexLongerThanNext([\"cat\", \"dog\", \"elephant\", \"bird\"])).to.equal(2);\n});\n\nit('findFirstIndexLongerThanNext([\"hello\", \"world\", \"hi\"]) should return 1', function() {\n  expect(findFirstIndexLongerThanNext([\"hello\", \"world\", \"hi\"])).to.equal(1);\n});\n\nit('findFirstIndexLongerThanNext([\"one\", \"two\", \"three\"]) should return \"Element not found\"', function() {\n  expect(findFirstIndexLongerThanNext([\"one\", \"two\", \"three\"])).to.equal(\"Element not found\");\n});\n\nit('findFirstIndexLongerThanNext([\"short\", \"tiny\", \"small\", \"big\"]) should return 0', function() {\n  expect(findFirstIndexLongerThanNext([\"short\", \"tiny\", \"small\", \"big\"])).to.equal(0);\n});\n\nit('findFirstIndexLongerThanNext([\"long\", \"longer\", \"longest\"]) should return \"Element not found\"', function() {\n  expect(findFirstIndexLongerThanNext([\"long\", \"longer\", \"longest\"])).to.equal(\"Element not found\");\n});\n\nit('findFirstIndexLongerThanNext([\"this\", \"is\", \"a\", \"test\"]) should return 0', function() {\n  expect(findFirstIndexLongerThanNext([\"this\", \"is\", \"a\", \"test\"])).to.equal(0);\n});\n\nit('findFirstIndexLongerThanNext([\"a\", \"ab\", \"abc\", \"abcd\"]) should return \"Element not found\"', function() {\n  expect(findFirstIndexLongerThanNext([\"a\", \"ab\", \"abc\", \"abcd\"])).to.equal(\"Element not found\");\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}