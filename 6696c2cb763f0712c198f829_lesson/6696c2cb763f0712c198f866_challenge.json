{
  "_id": "6696c2cb763f0712c198f866",
  "name": {
    "en": "/*",
    "ru": "Найти индекс первого элемента, содержащего все буквы из заданного слова"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `findIndexContainingAllLetters`, которая принимает массив строк и слово.\n\nФункция должна вернуть индекс первого элемента в массиве, который содержит все буквы из заданного слова.\n\nЕсли такой строки нет, функция должна вернуть строку `Element not found`.\n\n\nПримеры запуска функции:\n```javascript\nfindIndexContainingAllLetters(['apple pie', 'banana split', 'cherry tart', 'blueberry pie'], 'berry'); // 3\nfindIndexContainingAllLetters(['cat', 'dog', 'elephant', 'bird'], 'god'); // 1\nfindIndexContainingAllLetters(['hello', 'world', 'hi'], 'hell'); // 0\nfindIndexContainingAllLetters(['one', 'two', 'three'], 'four'); // \"Element not found\"\n```"
  },
  "initialSolution": "function findIndexContainingAllLetters(){\n\n}",
  "completedSolution": "function findIndexContainingAllLetters(array, word) {\n  const result = array.findIndex(curr => {\n    for(let char of word){\n      if(!curr.includes(char)) return false\n    }\n    return true\n  })\n  return result !== -1 ? result : 'Element not found';\n}",
  "openTest": "it('Created function findIndexContainingAllLetters', () => {\n  expect(findIndexContainingAllLetters).to.be.a('function');\n});\n\nit('findIndexContainingAllLetters([\"apple pie\", \"banana split\", \"cherry tart\", \"blueberry pie\"], \"berry\") should return 3', function() {\n  expect(findIndexContainingAllLetters([\"apple pie\", \"banana split\", \"cherry tart\", \"blueberry pie\"], \"berry\")).to.equal(3);\n});\n\nit('findIndexContainingAllLetters([\"cat\", \"dog\", \"elephant\", \"bird\"], \"god\") should return 1', function() {\n  expect(findIndexContainingAllLetters([\"cat\", \"dog\", \"elephant\", \"bird\"], \"god\")).to.equal(1);\n});\n\nit('findIndexContainingAllLetters([\"hello\", \"world\", \"hi\"], \"hell\") should return 0', function() {\n  expect(findIndexContainingAllLetters([\"hello\", \"world\", \"hi\"], \"hell\")).to.equal(0);\n});\n\nit('findIndexContainingAllLetters([\"one\", \"two\", \"three\"], \"four\") should return \"Element not found\"', function() {\n  expect(findIndexContainingAllLetters([\"one\", \"two\", \"three\"], \"four\")).to.equal(\"Element not found\");\n});\n\nit('findIndexContainingAllLetters([\"lemon\", \"lime\", \"banana\", \"berry\"], \"mi\") should return 1', function() {\n  expect(findIndexContainingAllLetters([\"lemon\", \"lime\", \"banana\", \"berry\"], \"mi\")).to.equal(1);\n});\n\nit('findIndexContainingAllLetters([\"apple\", \"banana\", \"apricot\", \"blueberry\"], \"banana\") should return 1', function() {\n  expect(findIndexContainingAllLetters([\"apple\", \"banana\", \"apricot\", \"blueberry\"], \"banana\")).to.equal(1);\n});\n\nit('findIndexContainingAllLetters([\"strawberry\", \"raspberry\", \"blueberry\"], \"berry\") should return 0', function() {\n  expect(findIndexContainingAllLetters([\"strawberry\", \"raspberry\", \"blueberry\"], \"berry\")).to.equal(0);\n});\n\nit('findIndexContainingAllLetters([\"kiwi\", \"melon\", \"orange\"], \"lemon\") should return 1', function() {\n  expect(findIndexContainingAllLetters([\"kiwi\", \"melon\", \"orange\"], \"lemon\")).to.equal(1);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}