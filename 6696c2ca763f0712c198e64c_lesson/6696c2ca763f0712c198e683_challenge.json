{
  "_id": "6696c2ca763f0712c198e683",
  "name": {
    "en": "Average hotel rating",
    "ru": "Средний рейтинг гостиницы"
  },
  "instruction": {
    "en": "Write a function `getAverageRating` that takes a `hotel` object and returns the average rating for reviews by category.\n\nThe object `hotel` has the following structure:\n* `name` - name of the hotel, string\n* `cleanliness` - rating of cleanliness, number\n* `service` - service score, a number\n* `location` - evaluation of the location, a number\n* `value` - evaluation of price/quality ratio, a number\n\nThe function should return the average rating for reviews by category.\n\nAn example of running the function:\n```javascript\nconst hotel = {\nname: 'Hotel 1',\ncleanliness: 4,\nservice: 5,\nlocation: 3,\nvalue: 4,\n};\n\ngetAverageRating(hotel); // 4\n```\n\nAdd up all the ratings by category and divide by the number of categories.",
    "ru": "Напишите функцию `getAverageRating`, которая принимает объект `hotel` и возвращает средний рейтинг по отзывам по категориям.\n\nОбъект `hotel` имеет следующую структуру:\n* `name` – название гостиницы, строка\n* `cleanliness` – оценка чистоты, число\n* `service` – оценка сервиса, число\n* `location` – оценка расположения, число\n* `value` – оценка соотношения цена/качество, число\n\nФункция должна вернуть средний рейтинг по отзывам по категориям.\n\nПример запуска функции:\n```javascript\nconst hotel = {\n  name: 'Hotel 1',\n  cleanliness: 4,\n  service: 5,\n  location: 3,\n  value: 4,\n};\n\ngetAverageRating(hotel); // 4\n```\n\nСложите все оценки по категориям и разделите на количество категорий."
  },
  "initialSolution": "fun",
  "completedSolution": "function getAverageRating(hotel) {\n  const { cleanliness, service, location, value } = hotel;\n\n  return (cleanliness + service + location + value) / 4;\n}",
  "openTest": "it('Created function getAverageRating', () => {\n  expect(getAverageRating).to.be.a('function');\n});\n\nit('getAverageRating({ cleanliness: 4, service: 5, location: 3, value: 4 }) should return 4', () => {\n  const hotel = {\n    cleanliness: 4,\n    service: 5,\n    location: 3,\n    value: 4,\n  };\n\n  expect(getAverageRating(hotel)).to.equal(4);\n});\n\nit('getAverageRating({ cleanliness: 5, service: 5, location: 5, value: 5 }) should return 5', () => {\n  const hotel = {\n    cleanliness: 5,\n    service: 5,\n    location: 5,\n    value: 5,\n  };\n\n  expect(getAverageRating(hotel)).to.equal(5);\n});\n\nit('getAverageRating({ cleanliness: 1, service: 1, location: 1, value: 1 }) should return 1', () => {\n  const hotel = {\n    cleanliness: 1,\n    service: 1,\n    location: 1,\n    value: 1,\n  };\n\n  expect(getAverageRating(hotel)).to.equal(1);\n});\n\nit('getAverageRating({ cleanliness: 2, service: 3, location: 1, value: 4 }) should return 2.5', () => {\n  const hotel = {\n    cleanliness: 2,\n    service: 3,\n    location: 1,\n    value: 4,\n  };\n\n  expect(getAverageRating(hotel)).to.equal(2.5);\n});\n\nit('getAverageRating({ cleanliness: 3, service: 4, location: 3, value: 1 }) should return 2.75', () => {\n  const hotel = {\n    cleanliness: 3,\n    service: 4,\n    location: 3,\n    value: 1,\n  };\n\n  expect(getAverageRating(hotel)).to.equal(2.75);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}