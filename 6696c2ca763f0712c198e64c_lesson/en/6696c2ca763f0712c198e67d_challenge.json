{
  "name": "Are the products the same. Comparing objects",
  "instruction": "To the warehouse, a new batch of products has been delivered.\n\nYou need to write a function `isSameProduct` that should return `true` if there are identical products among the products, and `false` otherwise.\n\nThe function takes the following parameters:\n* `product1` - an object containing information about the first product\n* `product2` - an object containing information about the second product\n* `product3` - an object containing information about the third product\n\nThe products have properties:\n* `sku` - a unique identifier, string\n* `code` - product code, string\n* `name` - product name, string\n* `price` - product price, number\n\nThe function should return `true` if there are products with identical `sku` and `code` properties. Otherwise, the function should return `false`.\n\nComparison of products should only be based on the `sku` and `code` properties. Other properties should not be considered.\n\nExample function call:\n```javascript\nconst product1 = { sku: '123', code: 'abc', name: 'Product 1', price: 100 };\nconst product2 = { sku: '123', code: 'abc', name: 'Product 2', price: 200 };\nconst product3 = { sku: '124', code: 'abc', name: 'Product 3', price: 300 };\n\nisSameProduct(product1, product2, product3); // true. Products product1 and product2 are identical\n\nconst product10 = { sku: '121', code: 'abc', name: 'Product 1', price: 100 };\nconst product20 = { sku: '123', code: 'abcd', name: 'Product 2', price: 100 };\nconst product30 = { sku: '124', code: 'abc', name: 'Product 3', price: 100 };\n\nisSameProduct(product10, product20, product30); // false. All products are different\n```\n\nCompare each product with each other.\n\nIf at least one pair of products is found where the `sku` and `code` properties match, the function should return `true`, otherwise - `false`.",
  "instructions": {}
}