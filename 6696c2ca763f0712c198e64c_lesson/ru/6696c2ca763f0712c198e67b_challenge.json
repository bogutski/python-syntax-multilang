{
  "name": "Поиск дубликатов пользователей",
  "instruction": "Для участия в мероприятии пользователи должны заполнить заявку.\n\nКаждая заполненная заявка – объект с информацией о пользователе.\n\nПосле отправления заявки система будет сравнивать ее с каждой из уже отправленных заявок.\n\nЕсли эта заявка уже была отправлена ранее, то повторная отправка будет считаться дубликатом.\n\nМы сделаем только механизм сравнения одной заявки с другой.\n\nКогда пользователи оставляют заявку, они заполняют следующие поля:\n* `firstName` – имя пользователя, строка\n* `lastName` – фамилия пользователя, строка\n* `phone` – телефон пользователя, строка\n* `city` – город пользователя, строка\n\nНапишите функцию `isDuplicate`.\n\nПараметры функции:\n* `profileSaved` – объект с информацией о пользователе, который уже отправил заявку.\n* `profileNew` – объект с информацией о пользователе, который собирается отправить заявку.\n\nФункция должна вернуть `true`, если заявки совпадают, и `false`, если нет.\n\nВ отправленных и в новых заявках пользователи могут допускать следующие действия:\n* В имени и фамилии могут быть пробелы в начале и в конце строки.\n* В имени и фамилии могут быть разные регистры букв.\n* В телефоне могут быть пробелы в начале и в конце строки.\n* Номер телефона может начинаться с `+` или без него.\n\nНомера телефонов с `+` и без него считаются одинаковыми.\n\nПример запуска функции:\n```javascript\nisDuplicate({\n  firstName: ' JohN ',\n  lastName: '  Doe',\n  phone: '+4234567890',\n  city: 'Miami'\n}, {\n  firstName: '  john  ',\n  lastName: ' DOE',\n  phone: ' 4234567890   ',\n  city: '  MIAMI '\n}) // true\n```\n\nВ этом примере заявки совпадают, потому что пользователи одинаковые не смотря на разные регистры букв, пробелы и `+` в номере телефона.",
  "instructions": {}
}