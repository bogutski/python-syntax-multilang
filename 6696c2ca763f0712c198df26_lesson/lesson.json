{
  "_id": "6696c2ca763f0712c198df26",
  "content": {
    "ru": "Функция после выполнения может оставить вместо себя `результат` своей работы. \n\nЭтот результат называется `возвращаемым значением функции` – `return`.  \n\n![](https://course-qa-basics.s3.us-west-1.amazonaws.com/bluegirl.png)\n\n### Директива `return`\n\nРассмотрим пример:\n\n``` javascript\nfunction time() { \n  return '04:59'; \n}\n```\n\nФункция `time()` после вызова вернет, то есть, оставит после себя `04:59`.\n\nЧтобы увидеть возвращаемое значение в консоли, напишите:\n\n```javascript\nfunction time() {\n  return '04:59';\n}\n\nconsole.log(time()) // в консоль выводится строка '04:59'. Это результат работы функции time()\n```\n\nРассмотрим еще несколько простых примеров:\n\n```` javascript\nfunction n1() {\n  return 10;\n}\n\nfunction n2() {\n  return 5;\n}\n\nconsole.log( n1() ) // в консоль выводится число 10 ; результат работы функции n1()\nconsole.log( n1() + n1() ); // 20; результат сложения 10 + 10 = 20\nconsole.log( n1() + n2() ); // 15; результат сложения 10 + 5 = 15\nconsole.log( n1() / n2() ); // 2; результат деления 10 / 5 = 2\n````\n\nДиректива `return` — это опциональная часть в задании функции. \n\nВ случае, если `return` не применяется в теле функции, функция возвращает `undefined`.\n\n### Пример функции без `return`\n\n```javascript\nfunction season() {}\nconsole.log( season() ) //  undefined\n````\n\n### Пример функции с `return`\n\n```javascript\nfunction season() {\n  return 'Winter';\n}\n\nconsole.log( season() )  //  'Winter'\n```\n\n### Пример функции с пустым `return`\n\n```javascript\nfunction season() {\n  return;\n}\n\nconsole.log( season() ) // undefined\n```\n\nИли также с явным указанием `undefined` в `return`:\n\n```javascript\nfunction name() {\n  return undefined;\n}\n\nconsole.log( name() ) //  undefined\n```\n",
    "en": "The function may leave a `result` of its work in its place after execution. \n\nThis result is called the `return value of the function` - `return`.  \n\n![](https://course-qa-basics.s3.us-west-1.amazonaws.com/bluegirl.png)\n\n### The `return` directive\n\nLet's look at an example:\n\n``` javascript\nfunction time() { \n  return '04:59'; \n}\n```\n\nThe `time()` function will return, that is, leave behind `04:59` after it is called.\n\nTo see the return value in the console, write:\n\n```javascript\nfunction time() {\n  return '04:59';\n}\n\nconsole.log(time()) // the string '04:59' is displayed. This is the result of the time() function\n```\n\nLet's look at a few more simple examples:\n\n```` javascript\nfunction n1() {\n  return 10;\n}\n\nfunction n2() {\n  return 5;\n}\n\nconsole.log( n1() ) // number 10 is displayed; the result of n1()\nconsole.log( n1() + n1() ); // 20; result of adding 10 + 10 = 20\nconsole.log( n1() + n2() ); // 15; addition result 10 + 5 = 15\nconsole.log( n1() / n2() ); // 2; product of division 10 / 5 = 2\n````\n\nThe `return` directive is an optional part of the function statement. \n\nIf `return` is not used in the body of the function, the function returns `undefined`.\n\n### An example of a function without `return`\n\n```javascript\nfunction season() {}\nconsole.log( season() ) //  undefined\n````\n\n### Example function with `return`\n\n```javascript\nfunction season() {\n  return 'Winter';\n}\n\nconsole.log( season() )  //  'Winter'\n```\n\n### An example of a function with an empty `return`\n\n```javascript\nfunction season() {\n  return;\n}\n\nconsole.log( season() ) // undefined\n```\n\nOr also with an explicit `undefined` in `return`:\n\n```javascript\nfunction name() {\n  return undefined;\n}\n\nconsole.log( name() ) //  undefined\n```\n",
    "es": "# Возвращаемое значение language: es"
  },
  "video": {
    "ru": "https://youtu.be/BuKV6RUAPN0",
    "en": "",
    "es": ""
  }
}