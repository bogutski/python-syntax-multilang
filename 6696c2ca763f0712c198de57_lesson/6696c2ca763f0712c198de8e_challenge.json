{
  "_id": "6696c2ca763f0712c198de8e",
  "name": {
    "en": "\"Train\" attraction",
    "ru": "Аттракцион \"Поезд\""
  },
  "instruction": {
    "en": "In Disneyland, there is a wonderful attraction called \"Train\" that always has a long queue.\nThe train has 48 seats, and there are 60 people in line.\nThe clerk should only allow the number of people that can occupy the seats.\nHow many people from the queue will not ride in the first trip?\n\nCreate a variable `line` and assign it the value of 60.\n\nCreate a variable `seats` and assign it the value of the number of seats in the train.\n\nCreate a variable `unhappyRiders` and return the result: how many people will wait for the next trip?\nOnly return the number of people who did not leave in the first train.\n\nHere is an example that is fundamentally similar to what needs to be done, but adapt it to the task requirements:\n```javascript\nconst allApples = 80;\nconst placeInBasket = 64;\nconst leftOver = allApples - placeInBaskets;\n```",
    "ru": "В Disneyland есть замечательный аттракцион - \"Поезд\", на который всегда стоит большая очередь.\nВ поезде 48 мест, а в очереди стоит 60 человек.\nКлерк должен запустить только то количество людей, которое сможет занять сидячие места.\nСколько человек из очереди не поедет в первую поездку?\n\nСоздайте переменную `line` и присвойте ей значение 60.\n\nСоздайте переменную `seats` и присвойте ей значение количества мест в поезде.\n\nСоздайте переменную `unhappyRiders` и верните результат: сколько людей будет ждать следующей поездки?\nВернуть нужно только количество людей, кто не уехал в первом поезде.\n\nПриведем пример, который принципиально похож на то что нужно сделать, но адаптируйте его к требованиям задачи:\n```javascript\nconst allApples = 80;\nconst placeInBasket = 64;\nconst leftOver = allApples - placeInBaskets;\n```"
  },
  "initialSolution": "",
  "completedSolution": "const line = 60;\nconst seats = 48;\nconst unhappyRiders = line - seats;",
  "openTest": "it('Variable `line` exists and contains value ', () => {\n  expect(line).not.to.be.undefined;\n});\n\nit('The variable `seats` exists and contains the value ', () => {\n  expect(seats).not.to.be.undefined;\n});\n\nit('The value of variable `line` is a number', () => {\n  expect(line).a('number');\n});\n\nit('The value of the variable `seats` is a number', () => {\n  expect(seats).a('number');\n});\n\nit('The result of the variable `unhappyRiders` is a number', () => {\n  expect(unhappyRiders).eq(12);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "```javascript\nconst line = 60;\nconst seats = 48;\nconst unhappyRiders = line - seats;\n```",
    "ru": "```javascript\nconst line = 60;\nconst seats = 48;\nconst unhappyRiders = line - seats;\n```"
  }
}