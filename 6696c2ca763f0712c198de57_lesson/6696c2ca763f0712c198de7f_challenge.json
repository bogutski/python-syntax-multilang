{
  "_id": "6696c2ca763f0712c198de7f",
  "name": {
    "en": "Wall surface area",
    "ru": "Площадь поверхности стен"
  },
  "instruction": {
    "en": "Student Vasily decided to renovate the room and wallpaper it. But before buying the wallpaper, you first need to find out the total area of the walls (excluding the area of windows and doors).\nVasily measured the dimensions of the room: a - length, b - width, h - height.\nWrite a sequence of commands to find the surface area of the walls.\n\nSet variables `a`, `b`, `h` and assign them the values of arbitrary non-negative numbers.\n\nSet variable `area` and assign it the value of the expression for calculating the area of the walls.\n(In the room, there are 2 walls with an area of `a*h` and two walls with an area of `b*h`).\n\nHere is an example that is fundamentally similar to what needs to be done, but adapt it to the requirements of the task:\n```javascript\nconst size1 = 10;\nconst size2 = 5;\nconst height = 3;\nconst s = (size1 * height + size2 * height) * 2;\n\n```",
    "ru": "Студент Василий решил сделать ремонт в комнате и оклеить ее обоями. Но перед покупкой обоев сначала надо узнать общую площадь стен (без учета площади окон и дверей).\nВасилий измерил размеры комнаты: а – длина, b – ширина, h – высота.\nНапишите последователность команд для нахождения площади поверхности стен.\n\nЗадайте переменные `a`, `b`, `h` и присвойте им значение произвольных неотрицательных чисел.\n\nЗадайте переменную `area` и присвойте ей значение выражения для вычисления площади стен.\n(В комнате 2 стены площадью `a*h` и две стены площадью `b*h`).\n\nПриведем пример, который принципиально похож на то, что нужно сделать, но адаптируйте его к требованиям задачи:\n```javascript\nconst size1 = 10;\nconst size2 = 5;\nconst height = 3;\nconst s = (size1 * height + size2 * height) * 2;\n\n```"
  },
  "initialSolution": "",
  "completedSolution": "const a = 5;\nconst b = 10;\nconst h = 3;\nconst area = 2 * a * h + 2 * b * h;",
  "openTest": "it('Variable `a` contains a value', () => {\n  expect(a).not.undefined;\n});\n\nit('Variable type `a` is a number', () => {\n  expect(a).a('number');\n});\n\nit('the variable type `a` is not NaN', () => {\n  expect(isNaN(a)).false;\n});\n\nit('Variable `a` has value >= 0', () => {\n  expect(a >= 0).true;\n});\n\nit('Variable `b` has a value', () => {\n  expect(b).not.undefined;\n});\n\nit('the variable type `b` is a number', () => {\n  expect(b).a('number');\n});\n\nit('the variable type `b` is not NaN', () => {\n  expect(isNaN(b)).false;\n});\n\nit('Variable `b` has value >= 0', () => {\n  expect(b >= 0).true;\n});\n\nit('Variable `h` has a value', () => {\n  expect(h).not.undefined;\n});\n\nit('Variable type `h` is a number', () => {\n  expect(h).a('number');\n});\n\nit('the variable type `h` is not NaN', () => {\n  expect(isNaN(h)).false;\n});\n\nit('Variable `h` has value >= 0', () => {\n  expect(h >= 0).true;\n});\n\n\nit('Variable `area` has a value', () => {\n  expect(area).not.undefined;\n});\n\nit('the variable `area` type is a number', () => {\n  expect(area).a('number');\n});\n\nit('the variable type `area` is not NaN', () => {\n  expect(isNaN(area)).false;\n});\n\nit('the variable `area` has the correct value', () => {\n  expect(area).equal(2 * a * h + 2 * b * h);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "```javascript\nconst a = 5;\nconst b = 10;\nconst h = 3;\nconst area = 2 * a * h + 2 * b * h;\n```",
    "ru": "```javascript\nconst a = 5;\nconst b = 10;\nconst h = 3;\nconst area = 2 * a * h + 2 * b * h;\n```"
  }
}