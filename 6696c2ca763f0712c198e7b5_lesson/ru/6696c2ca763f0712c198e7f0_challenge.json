{
  "name": "Записать значения из объекта в массив.",
  "instruction": "Не задумывались ли вы, что у массивов и объектов есть некоторые общие черты?\n\nИ массивы, и объекты - это сложные (ссылочные) типы, предназначенные для упорядоченного хранения наборов данных.\n\nКаждый из них представляет собой коллекцию элементов и обеспечивает способ получения значений этих элементов.\n\nДля получения значения элемента массива нужно знать его индекс - целочисленное значение.\n\nДля получения значения элемента объекта, называемого свойством, нужно знать название этого свойства (ключ) - строковое значение.\n\n\nНужно написать функцию `objectToArray`, которая принимает один параметр - объект `obj`.\n\nУ объекта есть 4 свойства.\n\nНазвания свойств: `property1`, `property2`, `property3`, `property4`.\n\nВсе свойства присутствуют в объекте и могут принимать смешанные значения примитивных типов: `number`, `string`, `boolean`или `undefined`.\n\nФункция должна создать массив `arr` и записать в него `значения` всех свойств объекта `obj`.\n\nЗная названия свойств, можно получить их значения, используя синтаксис `.`\n\n`<object_variable>.<property_name>`\n\nДля заполнения массива используйте метод `push`\n\nВозвращаемое значение - массив `arr`.\n\nПример:\n\n```javascript\nconst obj = {\n  property1: 111,\n  property2: 'job description',\n};\nconst arr = [];\narr.push(obj.property1);\narr.push(obj.property2);\nconsole.log(arr);  // [111, \"job description\"]\n```\n\nПримеры запуска функции:\n\n```javascript\nobjectToArray({property1: 1, property2: 2, property3: 3, property4: 4});                                  // [1, 2, 3, 4]\nobjectToArray({property1: false, property2: true, property3: true, property4: false});                    // [false, true, true, false]\nobjectToArray({property1: 'name', property2: 'description', property3: 'location', property4: 'salary'}); // ['name', 'description', 'location', 'salary']\nobjectToArray({property1: 111, property2: 'job description', property3: true, property4: undefined});     // [111, 'job description', true, undefined]\n```",
  "instructions": {}
}