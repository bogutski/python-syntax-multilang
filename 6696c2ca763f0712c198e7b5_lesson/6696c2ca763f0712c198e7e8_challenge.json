{
  "_id": "6696c2ca763f0712c198e7e8",
  "name": {
    "en": "Adding two new students to the student list",
    "ru": "Добавление двух новых студентов в список студентов"
  },
  "instruction": {
    "en": "Two new students have enrolled in the JavasScript programming class.\nWe need to add two new students to the list of students attending the class.\n\nCreate a function `addTwoStudents`.\nThe function must take three parameters:\n\n* `names` - array of student names\n* `name1` and `name2` - the names of the new students to be added to the end of the `names` array\n\nThe student names are strings. Each string contains the student's first and last name.\n\nThe function should return the array resulting from adding the new elements.\n\nUse the `push` method to solve the problem.\n\nBefore adding new elements `name1` and `name2` to the array, format them by removing extra spaces at the beginning and at the end.\n\nExamples of running the function:\n\n```javascript\naddTwoStudents([\"Alice Smith\", \"Peter Johns\", \"Clint Ford\"], \"Rick Weber\", \"Tracy Purdy \"); // [\"Alice Smith\", \"Peter Johns\", \"Clint Ford\", \"Rick Weber\", \"Tracy Purdy\"]\naddTwoStudents([\"Tommie Howell\", \"Lila Stamm\"], \" Kristina Larkin \", \" Chris Thompson\"; // [\"Tommie Howell\", \"Lila Stamm\", \"Kristina Larkin\", \"Chris Thompson\"]\naddTwoStudents([\"Petr Ivanov\"], \" Owen Waters \", \" Emma King \"); // [\"Petr Ivanov\", \"Owen Waters\", \"Emma King\"]\naddTwoStudents([], \" Max Belov \", \" Kirk Cassin \"); // [\"Max Belov\", \"Kirk Cassin\"]\n```",
    "ru": "В класс по программированию на JavasScript записались двое новеньких.\nНужно добавить двух новых студентов в список студентов, посещающих класс.\n\nСоздайте функцию `addTwoStudents`.\nФункция должна принимать три параметра:\n\n* `names` – массив c именами студентов\n* `name1` и `name2` – имена новых студентов, которое должны быть добавлены в конец массива `names`\n\nИмена студентов являются строками. Каждая строка содержит имя и фамилию студента.\n\nФункция должна возвращать массив, полученный в результате добавления новых элементов.\n\nДля решения задачи используйте метод `push`.\n\nПеред добавлением новых элементов `name1` и `name2` в массив, отформатируйте их, удалив лишние пробелы в начале и в конце.\n\nПримеры запуска функции:\n\n```javascript\naddTwoStudents([\"Alice Smith\", \"Peter Johns\", \"Clint Ford\"], \"Rick Weber\", \"Tracy Purdy    \"); // [\"Alice Smith\", \"Peter Johns\", \"Clint Ford\", \"Rick Weber\", \"Tracy Purdy\"]\naddTwoStudents([\"Tommie Howell\", \"Lila Stamm\"], \" Kristina Larkin \", \"   Chris Thompson\";      // [\"Tommie Howell\", \"Lila Stamm\", \"Kristina Larkin\", \"Chris Thompson\"]\naddTwoStudents([\"Petr Ivanov\"], \" Owen Waters \", \"  Emma King  \");                             // [\"Petr Ivanov\", \"Owen Waters\", \"Emma King\"]\naddTwoStudents([], \"   Max Belov \", \" Kirk Cassin     \");                                      // [\"Max Belov\", \"Kirk Cassin\"]\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function addTwoStudents(names, name1, name2) {\n  names.push(name1.trim(), name2.trim());\n  return names\n}",
  "openTest": "it('Created function addTwoStudents', () => {\n  expect(addTwoStudents).to.be.a('function');\n});\n\nit('addTwoStudents([\"Jessica Price\", \"Byron Schroeder\", \"Jordan Kertzmann\", \"Fannie Hermann\", \"Billie Wehner\"], \" Eleanor Stamm \", \" Gene Runolfsson \")', () => {\n  expect(addTwoStudents(['Jessica Price', 'Byron Schroeder', 'Jordan Kertzmann', 'Fannie Hermann', 'Billie Wehner'], ' Eleanor Stamm ', ' Gene Runolfsson ' )).\n                     eql(['Jessica Price', 'Byron Schroeder', 'Jordan Kertzmann', 'Fannie Hermann', 'Billie Wehner', 'Eleanor Stamm', 'Gene Runolfsson']);\n});\n\nit('addTwoStudents([\"Joyce Hermann\", \"Stephen Shanahan\"], \"Nichole Sauer      \", \"Howard Pagac  \")', () => {\n  expect(addTwoStudents(['Joyce Hermann', 'Stephen Shanahan'], 'Nichole Sauer      ', 'Howard Pagac  ', )).\n                     eql(['Joyce Hermann', 'Stephen Shanahan', 'Nichole Sauer', 'Howard Pagac']);\n});\n\nit('(addTwoStudents([\"Johnathan Little\"], \"Carla Ernser\", \"Brandi Rosenbaum\")', () => {\n  expect(addTwoStudents(['Johnathan Little'], 'Carla Ernser', 'Brandi Rosenbaum')).\n                     eql(['Johnathan Little', 'Carla Ernser', 'Brandi Rosenbaum']);\n});\n\nit('addTwoStudents([], \"  Anna Wolf\", \"  Tasha Schinner\")', () => {\n  expect(addTwoStudents([], '  Anna Wolf', '  Tasha Schinner')).\n                     eql(['Anna Wolf', 'Tasha Schinner']);\n});\n\nit('(addTwoStudents([\"Johnathan Little\"], \" Carla Ernser  \", \"  Brandi Rosenbaum \")', () => {\n  expect(addTwoStudents(['Johnathan Little'], ' Carla Ernser  ', '  Brandi Rosenbaum ')).\n                     eql(['Johnathan Little', 'Carla Ernser', 'Brandi Rosenbaum']);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}