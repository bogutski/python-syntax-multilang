{
  "_id": "6696c2ca763f0712c198e8d6",
  "name": {
    "en": "Fill the array with squares of even numbers from n to n*3",
    "ru": "Заполнить массив квадратами четных чисел от n до n*3"
  },
  "instruction": {
    "en": "Write a function `squaresOfEven` that takes an integer `n` and returns an array filled with squares of even numbers from `n` to `n*3` inclusive.\n\nIf `n` is a negative number or zero, the function should return an error message: `'Error: n must be a positive number'`.\n\nYou can use the `**` operator or the function `Math.pow(x,power)` to square a number.\n\nExamples of running the function:\n\n```javascript\nsquaresOfEven(0); // \"Error: n must be a positive number\"\nsquaresOfEven(-1); // \"Error: n must be a positive number\"\nsquaresOfEven(1); // [4]\nsquaresOfEven(2); // [4, 16, 36]\nsquaresOfEven(5); // [36, 64, 100, 144, 196]\n```",
    "ru": "Напишите функцию `squaresOfEven`, которая принимает целое число `n` и возвращает массив, заполненный квадратами четных чисел от `n` до `n*3` включительно.\n\nЕсли `n` отрицательное число или ноль, то функция должна вернуть сообщение об ошибке: `'Error: n must be a positive number'`.\n\nДля возведения числа в квадрат можно использовать оператор `**` или функцию `Math.pow(x,power)`.\n\nПримеры запуска функции:\n\n```javascript\nsquaresOfEven(0);   // \"Error: n must be a positive number\"\nsquaresOfEven(-1);  // \"Error: n must be a positive number\"\nsquaresOfEven(1);   // [4]\nsquaresOfEven(2);   // [4, 16, 36]\nsquaresOfEven(5);   // [36, 64, 100, 144, 196]\n```"
  },
  "initialSolution": "function squaresOfEven(n) {",
  "completedSolution": "function squaresOfEven(n) {\n  if (n <= 0) {\n    return 'Error: n must be a positive number';\n  }\n  const result = [];\n  for (let i = n; i <= n * 3; i += 1) {\n    if (i % 2 === 0) {\n      result.push(i ** 2);\n    }\n  }\n  return result;\n}",
  "openTest": "it('Created function squaresOfEven', () => {\n  expect(squaresOfEven).to.be.a('function');\n});\n\nit(`squaresOfEven(0) should return \"Error: n must be a positive number\"`, () => {\n  expect(squaresOfEven(0)).to.equal('Error: n must be a positive number');\n});\n\nit(`squaresOfEven(-11) should return \"Error: n must be a positive number\"`, () => {\n  expect(squaresOfEven(-11)).to.equal('Error: n must be a positive number');\n});\n\nit(`squaresOfEven(1) should return [4]`, () => {\n  expect(squaresOfEven(1)).to.deep.equal([4]);\n});\n\nit(`squaresOfEven(2) should return [4, 16, 36]`, () => {\n  expect(squaresOfEven(2)).to.deep.equal([4, 16, 36]);\n});\n\nit(`squaresOfEven(10) should return [100, 144, 196, 256, 324, 400, 484, 576, 676, 784, 900]`, () => {\n  expect(squaresOfEven(10)).to.deep.equal([100, 144, 196, 256, 324, 400, 484, 576, 676, 784, 900]);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}