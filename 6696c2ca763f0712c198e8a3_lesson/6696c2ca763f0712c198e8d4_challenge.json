{
  "_id": "6696c2ca763f0712c198e8d4",
  "name": {
    "en": "Fill the array with consecutive numbers from n to m",
    "ru": "Заполнить массив последовательными числами от n до m"
  },
  "instruction": {
    "en": "Write a function `fillArray` that takes two integers `n` and `m` such that `n` <= `m`, and returns an array filled with consecutive integers from `n` to `m`.\n\nExamples of running the function:\n\n```javascript\nfillArray(1, 5); // [1, 2, 3, 4, 5]\nfillArray(-5, 1); // [-5, -4, -3, -2, -1, 0, 1]\nfillArray(5, 5); // [5]\n```",
    "ru": "Напишите функцию `fillArray`, которая принимает два целых числа `n` и `m`, таких что `n` <= `m`, и возвращает массив, заполненный целыми последовательными числами от `n` до `m`.\n\nПримеры запуска функции:\n\n```javascript\nfillArray(1, 5);   // [1, 2, 3, 4, 5]\nfillArray(-5, 1);  // [-5, -4, -3, -2, -1, 0, 1]\nfillArray(5, 5);   // [5]\n```"
  },
  "initialSolution": "function fillArray(n, m) {",
  "completedSolution": "function fillArray(n, m) {\n  const result = [];\n  for (let i = n; i <= m; i += 1) {\n    result.push(i);\n  }\n  return result;\n}",
  "openTest": "it('Created function fillArray', () => {\n  expect(fillArray).to.be.a('function');\n});\n\nit(`fillArray(1, 5) should return [1, 2, 3, 4, 5]`, () => {\n  expect(fillArray(1, 5)).to.deep.equal([1, 2, 3, 4, 5]);\n});\n\nit(`fillArray(-3, 5) should return [-3, -2, -1, 0, 1, 2, 3, 4, 5]`, () => {\n  expect(fillArray(-3, 5)).to.deep.equal([-3, -2, -1, 0, 1, 2, 3, 4, 5]);\n});\n\nit(`fillArray(1, 1) should return [1]`, () => {\n  expect(fillArray(1, 1)).to.deep.equal([1]);\n});\n\nit(`fillArray(-10, 10) should return [-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]`, () => {\n  expect(fillArray(-10, 10)).to.deep.equal([-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}