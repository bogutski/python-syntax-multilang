{
  "_id": "6696c2ca763f0712c198e8d7",
  "name": {
    "en": "Fill the array with integers divisible by 5.",
    "ru": "Заполнить массив целыми числами кратными 5.\n/*"
  },
  "instruction": {
    "en": "Create a function `multiplesOf5`.\n\nThe function takes a non-negative integer `n`.\n\nThe function must return an array filled with integers from `0` to `n` inclusive, multiples of `5`.\n\nIf there are no numbers divisible by 5 in the range, the function should return an empty array.\n\nA number is a multiple of 5 if the remainder of the division of that number by 5 is 0.\n\nExamples of running the function:\n\n```javascript\nmultiplesOf5(10); // [0, 5, 10]\nmultiplesOf5(37); // [0, 5, 10, 15, 20, 25, 30, 35]\nmultiplesOf5(0); // [0]\nmultiplesOf5(1); // [0]\n```",
    "ru": "Создайте функцию `multiplesOf5`.\n\nФункция принимает целое неотрицательное число `n`.\n\nФункция должна вернуть массив, заполненный целыми числами от `0` до `n` включительно, кратными `5`.\n\nЕсли чисел кратных 5 в диапазоне нет, то функция должна вернуть пустой массив.\n\nЧисло кратно 5, если остаток от деления этого числа на 5 равен 0.\n\nПримеры запуска функции:\n\n```javascript\nmultiplesOf5(10); // [0, 5, 10]\nmultiplesOf5(37); // [0, 5, 10, 15, 20, 25, 30, 35]\nmultiplesOf5(0);  // [0]\nmultiplesOf5(1);  // [0]\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function multiplesOf5(n) {\n  const result = [];\n  for (let i = 0; i <= n; i += 5) {\n    result.push(i);\n  }\n  return result;\n}",
  "openTest": "it('Created function multiplesOf5', () => {\n  expect(multiplesOf5).to.be.a('function');\n});\n\nit('multiplesOf5(20) should return [0, 5, 10, 15, 20]', () => {\n  expect(multiplesOf5(20)).to.deep.equal([0, 5, 10, 15, 20]);\n});\n\nit('multiplesOf5(38) should return [0, 5, 10, 15, 20, 25, 30, 35]', () => {\n  expect(multiplesOf5(38)).to.deep.equal([0, 5, 10, 15, 20, 25, 30, 35]);\n});\n\nit('multiplesOf5(0) should return [0]', () => {\n  expect(multiplesOf5(0)).to.deep.equal([0]);\n});\n\nit('multiplesOf5(4) should return [0]', () => {\n  expect(multiplesOf5(4)).to.deep.equal([0]);\n});\n\nit('multiplesOf5(5) should return [0, 5]', () => {\n  expect(multiplesOf5(5)).to.deep.equal([0, 5]);\n});\n\nit('multiplesOf5(51) should return [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50]', () => {\n  expect(multiplesOf5(51)).to.deep.equal([0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50]);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}