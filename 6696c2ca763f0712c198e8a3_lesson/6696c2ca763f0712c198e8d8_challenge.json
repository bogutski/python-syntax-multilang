{
  "_id": "6696c2ca763f0712c198e8d8",
  "name": {
    "en": "Fill the array with integers divisible by 3 and raised to a power of m",
    "ru": "Заполнить массив целыми числами кратными 3 и возведенными в степень m"
  },
  "instruction": {
    "en": "Correct errors in the `fillArray` function code.\n\nThe function accepts two non-negative integers `n` and `m`.\n\n* `n` is the upper limit of the range\n\n* `m` - degree\n\nYou need to create an array and fill it with integers from the range from `0` to `n` inclusive.\n\nThe array should include only those numbers from the specified range that are multiples of three.\n\nBefore adding a number to the array it must be raised to the power of `m`.\n\nThe function should return the resulting array.\n\nA number is a multiple of 3 if the remainder of the division of that number by 3 is 0.\n\nExamples of running the function:\n\n```javascript\nfillArray(10, 1); //[0, 3, 6, 9];\nfillArray(20, 0); //[1, 1, 1, 1, 1, 1, 1];\nfillArray(10, 2); // [0, 9, 36, 81]\nfillArray(8, 3); // [0, 27, 216]\n```",
    "ru": "Исправьте ошибки в коде функции `fillArray`.\n\nФункция принимает два целых неотрицательных числа `n` и `m`.\n\n* `n` - верхняя граница диапазона\n\n* `m` - степень\n\nНужно создать массив и заполнить его целыми числами из диапазона от `0` до `n` включительно.\n\nВ массив должны быть включены только те числа из указанного диапазона, которые кратны трем.\n\nПеред добавлением числа в массив оно должно быть возведено в степень `m`.\n\nФункция должна вернуть полученный массив.\n\nЧисло кратно 3, если остаток от деления этого числа на 3 равен 0.\n\nПримеры запуска функции:\n\n```javascript\nfillArray(10, 1);   //[0, 3, 6, 9];\nfillArray(20, 0);   //[1, 1, 1, 1, 1, 1, 1];\nfillArray(10, 2);   // [0, 9, 36, 81]\nfillArray(8, 3);    // [0, 27, 216]\n```"
  },
  "initialSolution": "function fillArrayPowers(n, m) {\n  contt result1 = [];\n  for (let j = 0; j <= n*2; j -= 1) {\n    if (i % 3 !== 0) {\n      result.push(Math.pow(i, m)\n    }\n  }\n  return arr;\n}",
  "completedSolution": "function fillArray(n, m) {\n  const result = [];\n  for (let i = 0; i <= n; i += 1) {\n    if (i % 3 === 0) {\n      result.push(Math.pow(i,m));\n    }\n  }\n  return result;\n}",
  "openTest": "it('Created function fillArray', () => {\n  expect(fillArray).to.be.a('function');\n});\n\nit('fillArray(10, 1) should return [0, 3, 6, 9]', () => {\n  expect(fillArray(10, 1)).to.deep.equal([0, 3, 6, 9]);\n});\n\nit('fillArray(20, 0) should return [1, 1, 1, 1, 1, 1, 1]', () => {\n  expect(fillArray(20, 0)).to.deep.equal([1, 1, 1, 1, 1, 1, 1]);\n});\n\nit('fillArray(12, 2) should return [ 0, 9, 36, 81, 144 ]', () => {\n  expect(fillArray(12, 2)).to.deep.equal([ 0, 9, 36, 81, 144 ]);\n});\n\nit('fillArray(15, 3) should return [ 0, 27, 216, 729, 1728,  3375 ]', () => {\n  expect(fillArray(15, 3)).to.deep.equal([ 0, 27, 216, 729, 1728,  3375 ]);\n});\n\nit('fillArray(0, 3) should return [ 0 ]', () => {\n  expect(fillArray(0, 3)).to.deep.equal([ 0 ]);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}