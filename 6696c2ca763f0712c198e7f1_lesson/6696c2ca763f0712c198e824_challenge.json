{
  "_id": "6696c2ca763f0712c198e824",
  "name": {
    "en": "Deleting the last elements of an array",
    "ru": "Удаление последних элементов массива"
  },
  "instruction": {
    "en": "The `modifyArray` function takes the `arr` array as an argument.\n\nThe function returns a modified array with the last elements of the `arr` array removed until the length of the array is a multiple of 3.\n\nIf the length of the `arr` array is a multiple of 3, then the last 3 elements of the array must be deleted.\n\nExamples of running the function:\n```javascript\nmodifyArray([1, 2, 3, 4, 5, 6, 7, 8, 9]) // [1, 2, 3, 4, 5, 6]\nmodifyArray([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) // [1, 2, 3, 4, 5, 6, 7, 8, 9]\n```",
    "ru": "Функция `modifyArray` принимает массив `arr` в качестве аргумента.\n\nФункция возвращает измененный массив, в котором удалены последние элементы массива `arr`, пока длина массива не станет кратной 3.\n\nЕсли длина массива `arr` кратна 3, то необходимо удалить последние 3 элемента массива.\n\nПримеры запуска функции:\n```javascript\nmodifyArray([1, 2, 3, 4, 5, 6, 7, 8, 9]) // [1, 2, 3, 4, 5, 6]\nmodifyArray([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) // [1, 2, 3, 4, 5, 6, 7, 8, 9]\n```"
  },
  "initialSolution": "function",
  "completedSolution": "function modifyArray(arr) {\n  if (arr.length % 3 === 1) {\n    arr.pop()\n  } else if (arr.length % 3 === 2) {\n    arr.pop();\n    arr.pop()\n  } else {\n    arr.pop();\n    arr.pop();\n    arr.pop()\n  }\n  return arr\n}",
  "openTest": "it('Created function modifyArray', () => {\n  expect(modifyArray).to.be.a('function');\n});\n\nit('modifyArray([1, 2, 3, 4, 5, 6, 7, 8, 9]) should return [1, 2, 3, 4, 5, 6]', () => {\n  expect(modifyArray([1, 2, 3, 4, 5, 6, 7, 8, 9])).to.be.eql([1, 2, 3, 4, 5, 6]);\n});\n\nit('modifyArray([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) should return [1, 2, 3, 4, 5, 6, 7, 8, 9]', () => {\n  expect(modifyArray([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])).to.be.eql([1, 2, 3, 4, 5, 6, 7, 8, 9]);\n});\n\nit('modifyArray([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) should return [1, 2, 3, 4, 5, 6, 7, 8, 9]', () => {\n  expect(modifyArray([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11])).to.be.eql([1, 2, 3, 4, 5, 6, 7, 8, 9]);\n});\n\nit('modifyArray([1, 2, 3]) should return []', () => {\n  expect(modifyArray([1, 2, 3])).to.be.eql([]);\n});\n\nit('modifyArray([1, 2, 3, 4]) should return [1, 2, 3]', () => {\n  expect(modifyArray([1, 2, 3, 4])).to.be.eql([1, 2, 3]);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}