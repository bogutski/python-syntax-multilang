{
  "_id": "6696c2ca763f0712c198e81f",
  "name": {
    "en": "Split an array into two arrays",
    "ru": "Разделить массив на два массива"
  },
  "instruction": {
    "en": "The `splitArray` function takes an array that can contain numbers and/or strings.\n\nThe array consists of an even number of elements or can be empty.\n\nYou need to return an array consisting of two elements - arrays:\n* divide the original array into 2 arrays of equal length\n\nUse the `splice` array method to perform this task.\n\nAn example of running the function:\n```javascript\nlet colors = ['white', 'red', 'orange', 'green', 'blue', 'violet']\nlet half = colors.splice(0, colors.length/2);\nconsole.log([half, colors]) // [['white', 'red', 'orange'] ['green', 'blue', 'violet']]\n\nnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]); // [[1, 2, 3, 4, 5] [6, 7, 8, 9, 10]]\n```",
    "ru": "Функция `splitArray` принимает массив, который может содержать числа и/или строки.\n\nМассив состоит из четного количества элементов или может быть пустым.\n\nНеобходимо вернуть массив, состоящий из двух элементов - массивов:\n* разделить исходный массив на 2 одинаковых по длине массива\n\nИспользуйте метод массива `splice` для выполнения этой задачи.\n\nПример запуска функции:\n```javascript\nlet colors = ['white', 'red', 'orange', 'green', 'blue', 'violet']\nlet half = colors.splice(0, colors.length/2);\nconsole.log([half, colors])                                  // [['white', 'red', 'orange'] ['green', 'blue', 'violet']]\n\nnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);                    // [[1, 2, 3, 4, 5] [6, 7, 8, 9, 10]]\n```"
  },
  "initialSolution": "function",
  "completedSolution": "function splitArray(arr) {\n  let arr1 = arr.splice(0, arr.length / 2);\n  return [arr1, arr]\n}",
  "openTest": "it('Created function splitArray', () => {\n  expect(splitArray).to.be.a('function');\n});\n\nit(`splitArray([1, 2, 3, 4, 5, 6]) should return [[1, 2, 3], [4, 5, 6]]`, () => {\n  expect(splitArray([1, 2, 3, 4, 5, 6])).to.eql([[1, 2, 3], [4, 5, 6]]);\n});\n\n\nit(`splitArray(['a', 'b']) should return [['a'], ['b']]`, () => {\n  expect(splitArray(['a', 'b'])).to.eql([['a'], ['b']]);\n});\n\nit(`splitArray(['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']) should return [['a', 'b', 'c', 'd', 'e'], ['f', 'g', 'h', 'i', 'j']]`, () => {\n  expect(splitArray(['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j'])).to.eql([['a', 'b', 'c', 'd', 'e'], ['f', 'g', 'h', 'i', 'j']]);\n});\n\nit(`splitArray([]) should return [[], []]`, () => {\n  expect(splitArray([])).to.eql([[], []]);\n});\n\nit(`splitArray([1, 2]) should return [[1], [2]]`, () => {\n  expect(splitArray([1, 2])).to.eql([[1], [2]]);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}