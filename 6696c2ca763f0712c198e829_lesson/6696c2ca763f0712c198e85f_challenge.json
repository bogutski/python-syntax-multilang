{
  "_id": "6696c2ca763f0712c198e85f",
  "name": {
    "en": "Array deployment - 'spread' operator",
    "ru": "Развертывание массива - 'spread' operator"
  },
  "instruction": {
    "en": "Write a function `spread` that takes two arrays and returns a new array consisting of the elements of the first and second array.\n\nUse the 'spread' operator to solve this problem.\n\nAn example of running the function:\n```javascript\nspread([1, 2, 3], [4, 5, 6]); // [1, 2, 3, 4, 5, 6]\n```",
    "ru": "Напишите функцию `spread`, которая принимает два массива и возвращает новый массив, состоящий из элементов первого и второго массива.\n\nИспользуйте оператор `spread` для решения этой задачи.\n\nПример запуска функции:\n```javascript\nspread([1, 2, 3], [4, 5, 6]); // [1, 2, 3, 4, 5, 6]\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function spread(arr1, arr2) {\n  return [...arr1, ...arr2];\n}",
  "openTest": "it('Created function spread', () => {\n  expect(spread).to.be.a('function');\n});\n\nit('spread([55, 66, 77], [88, 99, 100]) should return [55, 66, 77, 88, 99, 100]', () => {\n  expect(spread([55, 66, 77], [88, 99, 100])).to.deep.equal([55, 66, 77, 88, 99, 100]);\n});\n\nit(\"spread(['Hello'], ['World']) should return ['Hello', 'World']\", () => {\n  expect(spread(['Hello'], ['World'])).to.deep.equal(['Hello', 'World']);\n});\n\nit('spread([1, 2, 3], [true, false, true]) should return [1, 2, 3, true, false, true]', () => {\n  expect(spread([1, 2, 3], [true, false, true])).to.deep.equal([1, 2, 3, true, false, true]);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}