{
  "name": "Копирование массивов",
  "questions": {
    "0": {
      "name": "Выберите правильный вариант(ы) поверхностого копирования массива fruits",
      "description": "```javascript\nconst fruits = ['apple', 'grape', 'pineaple', 'banana'];\n```",
      "variants": {
        "0": {
          "name": "const products = fruits.slice();"
        },
        "1": {
          "name": "const products = [...fruits];"
        },
        "2": {
          "name": "const products = fruits;"
        },
        "3": {
          "name": "const fruitsToString = JSON.stringify(fruits);\nconst products = JSON.parse(fruitsToString);"
        }
      }
    },
    "1": {
      "name": "Что произошло в коде ниже?",
      "description": "```javascript\nconst animals = ['hors', 'cat', 'dog', 'cow', 'duck', 'goat'];\nconst wildAnimals = animals;\n```",
      "variants": {
        "0": {
          "name": "Массив wildAnimals содержит ссылку на массив animals"
        },
        "1": {
          "name": "Массив wildAnimals содержит копию массива animals"
        },
        "2": {
          "name": "Массив wildAnimals содержит поверхностную копию массива animals"
        },
        "3": {
          "name": "Массив wildAnimals содержит копию массива animals и ссылку на него"
        }
      }
    },
    "2": {
      "name": "Что произойдёт с массивом names и maleNames после выполнения кода ниже?",
      "description": "```javascript\nconst names = ['Anna', 'Jone', 'Tom', 'Lana'];\nconst maleNames = names;\nmaleNames[0] = 'Oliver';\n```",
      "variants": {
        "0": {
          "name": "Массив names останется неизменным, а в массиве maleNames первый элемент заменится на 'Oliver'"
        },
        "1": {
          "name": "Оба массива поменяют первое значение на 'Oliver'"
        },
        "2": {
          "name": "Массив names поменяет первое значение на 'Oliver', а массив maleNames останется неизменным"
        },
        "3": {
          "name": "Любые изменения в массиве maleNames не повлияют на массив names"
        }
      }
    },
    "3": {
      "name": "При методе slice() происходит копирование первого уровня вложенности. Что это значит?",
      "variants": {
        "0": {
          "name": "Метод хорошо работает только с примитивными значениями"
        },
        "1": {
          "name": "Копируется сложная структура данных: массив, объект и т.д."
        },
        "2": {
          "name": "Всегда копируется только ссылка на массив"
        },
        "3": {
          "name": "Копирование происходит до второго уровня вложенности"
        }
      }
    },
    "4": {
      "name": "Что выведет код ниже?",
      "description": "```javascript\nconst names = ['Anna', 'Jone', 'Tom', 'Lana'];\nconst maleNames = names.slice();\nmaleNames[0] = 'Oliver';\nconsole.log(names, maleNames);\n```",
      "variants": {
        "0": {
          "name": "['Oliver', 'Jone', 'Tom', 'Lana']\n['Oliver', 'Jone', 'Tom', 'Lana']"
        },
        "1": {
          "name": "['Anna', 'Jone', 'Tom', 'Lana']\n['Anna', 'Jone', 'Tom', 'Lana']"
        },
        "2": {
          "name": "['Anna', 'Jone', 'Tom', 'Lana']\n['Oliver', 'Jone', 'Tom', 'Lana']"
        },
        "3": {
          "name": "['Oliver', 'Jone', 'Tom', 'Lana']\n['Anna', 'Jone', 'Tom', 'Lana']"
        }
      }
    },
    "5": {
      "name": "Что происходит с массивом при использовании метода JSON.stringify()?",
      "variants": {
        "0": {
          "name": "Копируется массив"
        },
        "1": {
          "name": "Массив преобразуется в строку"
        },
        "2": {
          "name": "Массив преобразуется в объект"
        },
        "3": {
          "name": "Массив преобразуется в булевое значение"
        }
      }
    },
    "6": {
      "name": "Какой метод преобразует строку в массив после импользования метода JSON.stringify()?",
      "variants": {
        "0": {
          "name": "JSON.array()"
        },
        "1": {
          "name": "JSON.object()"
        },
        "2": {
          "name": "JSON.stringify(parse())"
        },
        "3": {
          "name": "JSON.parse()"
        }
      }
    },
    "7": {
      "name": "С помощью методов JSON.stringify() и JSON.parse() получается глубокая копия массива.",
      "variants": {
        "0": {
          "name": "Данное утверждение верно"
        },
        "1": {
          "name": "Данное утверждение неверно"
        }
      }
    },
    "8": {
      "name": "что выведет в консоль следующий код с использованием spread оператора?",
      "description": "```javascript\nconst animals = ['cat', 'dog', 'cow'];\nconst wildAnimals = [...animals]; \nwildAnimals[0] = 'lion'\nconsole.log(animals, wildAnimals);\n```",
      "variants": {
        "0": {
          "name": "['cat', 'dog', 'cow']\n['lion', 'dog', 'cow']"
        },
        "1": {
          "name": "['lion', 'dog', 'cow']\n['cat', 'dog', 'cow']"
        },
        "2": {
          "name": "['lion', 'dog', 'cow']\n['lion', 'dog', 'cow']"
        },
        "3": {
          "name": "['cat', 'dog', 'cow']\n['cat', 'dog', 'cow']"
        }
      }
    },
    "9": {
      "name": "Что выведет в консоль следующий код?",
      "description": "```javascript\nconst animals = ['cat', 'dog', 'cow'];\nconst wildAnimals = [...animals, ...animals]; \nconsole.log(wildAnimals);\n```",
      "variants": {
        "0": {
          "name": "['cat', 'dog', 'cow'] ['cat', 'dog', 'cow']"
        },
        "1": {
          "name": "[['cat', 'dog', 'cow'], ['cat', 'dog', 'cow']]"
        },
        "2": {
          "name": "['cat', 'dog', 'cow', 'cat', 'dog', 'cow']"
        },
        "3": {
          "name": "['cat', 'dog', 'cow', ['cat', 'dog', 'cow']]"
        }
      }
    }
  }
}