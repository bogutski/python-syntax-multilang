{
  "_id": "6696c2ca763f0712c198e85d",
  "name": {
    "en": "Copying an array element by element",
    "ru": "Копирование массива по элементам"
  },
  "instruction": {
    "en": "Write a function `copyElements` that takes two arrays: `arrFrom` and `arrTo`.\n\nThe function should copy the first and last elements from `arrFrom` to `arrTo` and return `arrTo`.\n\nA similar function is:\n```javascript\nfunction copyElements(arr1, arr2) {\narr2.push(arr1[0]);\narr2.push(arr1[1]);\narr2.push(arr1[3]);\nreturn arr2;\n}\n```\n\nAn example of running a function:\n```javascript\ncopyElements([1, 2, 3, 4, 5], []) // [1, 5]\ncopyElements(['string', 1, 2, 3, 'number'], []) // ['string', 'number']\ncopyElements(['Hello'], []) // ['Hello', 'Hello']\n```",
    "ru": "Напишите функцию `copyElements`, которая принимает два массива: `arrFrom` и `arrTo`.\n\nФункция должна скопировать первый и последний элементы из `arrFrom` в `arrTo` и вернуть `arrTo`.\n\nПохожая функция:\n```javascript\nfunction copyElements(arr1, arr2) {\n  arr2.push(arr1[0]);\n  arr2.push(arr1[1]);\n  arr2.push(arr1[3]);\n  return arr2;\n}\n```\n\nПример запуска функции:\n```javascript\ncopyElements([1, 2, 3, 4, 5], []) // [1, 5]\ncopyElements(['string', 1, 2, 3, 'number'], []) // ['string', 'number']\ncopyElements(['Hello'], []) // ['Hello', 'Hello']\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function copyElements(arrFrom, arrTo) {\n  arrTo.push(arrFrom[0]);\n  arrTo.push(arrFrom[arrFrom.length - 1]);\n  return arrTo;\n}",
  "openTest": "it('Created function copyElements', () => {\n  expect(copyElements).to.be.a('function');\n});\n\nit('copyElements([1, 2, 3, 4, 5], []) should return [1, 5]', () => {\n  expect(copyElements([1, 2, 3, 4, 5], [])).to.deep.equal([1, 5]);\n});\n\nit(\"copyElements(['string', 1, 2, 3, 'number'], []]) should return ['string', 'number']]\", () => {\n  expect(copyElements(['string', 1, 2, 3, 'number'], [])).to.deep.equal(['string', 'number']);\n});\n\nit('copyElements([true], []) should return [true, true]', () => {\n  expect(copyElements([true], [])).to.deep.equal([true, true]);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}