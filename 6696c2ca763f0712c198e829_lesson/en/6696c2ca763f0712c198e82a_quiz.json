{
  "name": "Copy arrays",
  "questions": {
    "0": {
      "name": "Choose the correct option(s) for the surface copying of the fruits array",
      "description": "```javascript\nconst fruits = ['apple', 'grape', 'pineaple', 'banana'];\n```",
      "variants": {
        "0": {
          "name": "const products = fruits.slice();"
        },
        "1": {
          "name": "const products = [...fruits];"
        },
        "2": {
          "name": "const products = fruits;"
        },
        "3": {
          "name": "const fruitsToString = JSON.stringify(fruits);\nconst products = JSON.parse(fruitsToString);"
        }
      }
    },
    "1": {
      "name": "What happened in the code below?",
      "description": "```javascript\nconst animals = ['hors', 'cat', 'dog', 'cow', 'duck', 'goat'];\nconst wildAnimals = animals;\n```",
      "variants": {
        "0": {
          "name": "The wildAnimals array contains a reference to the animals array"
        },
        "1": {
          "name": "The wildAnimals array contains a copy of the animals array."
        },
        "2": {
          "name": "The wildAnimals array contains a surface copy of the animals array."
        },
        "3": {
          "name": "The wildAnimals array contains a copy of the animals array and a link to it"
        }
      }
    },
    "2": {
      "name": "What happens to the names and maleNames array after the code below is executed?",
      "description": "```javascript\nconst names = ['Anna', 'Jone', 'Tom', 'Lana'];\nconst maleNames = names;\nmaleNames[0] = 'Oliver';\n```",
      "variants": {
        "0": {
          "name": "The names array will remain unchanged, and the first element in the maleNames array will be replaced by 'Oliver'."
        },
        "1": {
          "name": "Both arrays will change the first value to 'Oliver'"
        },
        "2": {
          "name": "The names array will change the first value to 'Oliver' and the maleNames array will remain unchanged"
        },
        "3": {
          "name": "Any changes to the maleNames array will not affect the names array"
        }
      }
    },
    "3": {
      "name": "The slice() method copies the first nesting level. What does this mean?",
      "variants": {
        "0": {
          "name": "The method works well only with primitive values"
        },
        "1": {
          "name": "A complex data structure is copied: an array, an object, etc."
        },
        "2": {
          "name": "Only the array reference is always copied"
        },
        "3": {
          "name": "Copying takes place up to the second nesting level"
        }
      }
    },
    "4": {
      "name": "What does the code below display?",
      "description": "```javascript\nconst names = ['Anna', 'Jone', 'Tom', 'Lana'];\nconst maleNames = names.slice();\nmaleNames[0] = 'Oliver';\nconsole.log(names, maleNames);\n```",
      "variants": {
        "0": {
          "name": "['Oliver', 'Jone', 'Tom', 'Lana']\n['Oliver', 'Jone', 'Tom', 'Lana']"
        },
        "1": {
          "name": "['Anna', 'Jone', 'Tom', 'Lana']\n['Anna', 'Jone', 'Tom', 'Lana']"
        },
        "2": {
          "name": "['Anna', 'Jone', 'Tom', 'Lana']\n['Oliver', 'Jone', 'Tom', 'Lana']"
        },
        "3": {
          "name": "['Oliver', 'Jone', 'Tom', 'Lana']\n['Anna', 'Jone', 'Tom', 'Lana']"
        }
      }
    },
    "5": {
      "name": "What happens to the array when using the JSON.stringify() method?",
      "variants": {
        "0": {
          "name": "An array is copied"
        },
        "1": {
          "name": "The array is converted to a string"
        },
        "2": {
          "name": "The array is converted into an object"
        },
        "3": {
          "name": "The array is converted to a boolean value"
        }
      }
    },
    "6": {
      "name": "Which method converts the string to an array after using the JSON.stringify() method?",
      "variants": {
        "0": {
          "name": "JSON.array()"
        },
        "1": {
          "name": "JSON.object()"
        },
        "2": {
          "name": "JSON.stringify(parse())"
        },
        "3": {
          "name": "JSON.parse()"
        }
      }
    },
    "7": {
      "name": "The JSON.stringify() and JSON.parse() methods produce a deep copy of the array.",
      "variants": {
        "0": {
          "name": "This statement is true"
        },
        "1": {
          "name": "This statement is false"
        }
      }
    },
    "8": {
      "name": "what will the following code output to the console using the spread operator?",
      "description": "```javascript\nconst animals = ['cat', 'dog', 'cow'];\nconst wildAnimals = [...animals]; \nwildAnimals[0] = 'lion'\nconsole.log(animals, wildAnimals);\n```",
      "variants": {
        "0": {
          "name": "['cat', 'dog', 'cow']\n['lion', 'dog', 'cow']"
        },
        "1": {
          "name": "['lion', 'dog', 'cow']\n['cat', 'dog', 'cow']"
        },
        "2": {
          "name": "['lion', 'dog', 'cow']\n['lion', 'dog', 'cow']"
        },
        "3": {
          "name": "['cat', 'dog', 'cow']\n['cat', 'dog', 'cow']"
        }
      }
    },
    "9": {
      "name": "What will the following code print to the console?",
      "description": "```javascript\nconst animals = ['cat', 'dog', 'cow'];\nconst wildAnimals = [...animals, ...animals]; \nconsole.log(wildAnimals);\n```",
      "variants": {
        "0": {
          "name": "['cat', 'dog', 'cow'] ['cat', 'dog', 'cow']"
        },
        "1": {
          "name": "[['cat', 'dog', 'cow'], ['cat', 'dog', 'cow']]"
        },
        "2": {
          "name": "['cat', 'dog', 'cow', 'cat', 'dog', 'cow']"
        },
        "3": {
          "name": "['cat', 'dog', 'cow', ['cat', 'dog', 'cow']]"
        }
      }
    }
  }
}