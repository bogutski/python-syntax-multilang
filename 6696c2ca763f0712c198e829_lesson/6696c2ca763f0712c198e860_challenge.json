{
  "_id": "6696c2ca763f0712c198e860",
  "name": {
    "en": "Copying and modifying an array",
    "ru": "Копирование и изменение массива"
  },
  "instruction": {
    "en": "Write a function `twoArrays` that takes an array.\n\nThe function should return an array of two arrays, the original one and its copy.\n\n\nCreate a second array and copy all elements from the first array into it.\nUse the `slice` method to copy the elements.\n\nChange the first element in the first array to `undefined`.\n\nReturn the array of two arrays:\n```javascript\n[ [originalArray], [copiedArray] ]\n```\n\nAn example of running a function:\n```javascript\ntwoArrays([1,2,3]) // [[undefined,2,3], [1,2,3]]\ntwoArrays(['a','b','c']) // [[undefined,'b','c'], ['a','b','c']]\n```",
    "ru": "Напишите функцию `twoArrays`, которая принимает массив.\n\nФункция должна вернуть массив из двух массивов, оригинального и его копии.\n\n\nСоздайте второй массив и скопируйте в него все элементы из первого массива.\nИспользуйте метод `slice` для копирования элементов.\n\nИзмените первый элемент в первом массиве на `undefined`.\n\nВерните массив из двух массивов:\n```javascript\n[ [originalArray], [copiedArray] ]\n```\n\nПример запуска функции:\n```javascript\ntwoArrays([1,2,3]) // [[undefined,2,3], [1,2,3]]\ntwoArrays(['a','b','c']) // [[undefined,'b','c'], ['a','b','c']]\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function twoArrays(arr){\n  const arr2 = arr.slice();\n  arr[0] = undefined;\n  return [arr, arr2];\n}",
  "openTest": "it('Created function twoArrays', () => {\n  expect(twoArrays).to.be.a('function');\n});\n\nit('twoArrays([1,2,3]) should return [[undefined,2,3], [1,2,3]]', () => {\n  expect(twoArrays([1,2,3])).to.deep.equal([[undefined,2,3], [1,2,3]]);\n});\n\nit(\"twoArrays(['q','w','e']) should return [[undefined,'w','e'], ['q','w','e']]\", () => {\n  expect(twoArrays(['q','w','e'])).to.deep.equal([[undefined,'w','e'], ['q','w','e']]);\n});\n\nit(\"twoArrays([true,false,true]) should return [[undefined,false,true], [true,false,true]]\", () => {\n  expect(twoArrays([true,false,true])).to.deep.equal([[undefined,false,true], [true,false,true]]);\n});\n\nit('twoArrays([1,2,3]) should have method slice', () => {\n  expect(twoArrays.toString()).to.have.string('slice');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}