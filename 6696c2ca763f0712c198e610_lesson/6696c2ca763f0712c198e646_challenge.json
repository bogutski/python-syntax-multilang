{
  "_id": "6696c2ca763f0712c198e646",
  "name": {
    "en": "Cocktail recipe. Removing a property from an object.",
    "ru": "Рецепт коктейля. Удаление свойства из объекта."
  },
  "instruction": {
    "en": "If you love cocktails, you probably know that you have to follow a certain recipe to make them.\n\nEach ingredient must be in a certain amount.\n\nLet's write a function `cocktailRecipe` that takes a single parameter `ingredients` - an object containing information about the ingredients.\n\nThe `ingredients` object has the following properties:\n* `name1` - name of the first ingredient, string\n* `name2` - name of the second ingredient, string\n* `name3` - name of the third ingredient, string\n* `name4` - name of the fourth ingredient, string;\n* `mix` - line containing instructions on how to make the cocktail.\n\nBy mistake, there may be repeated ingredients in the object. For example, if the key `name1` contains `orange juice`\nand the key `name2` also contains `orange juice` it is necessary to remove repeated ingredients from the object\n(in this example the property `name1` must be deleted).\n\nThe function should return an object containing only unique ingredients and instructions for making the cocktail.\n\nAn example of running the function:\n```javascript\ncocktailRecipe({\nname1: 'orange juice',\nname2: 'milk',\nname3: 'apple',\nname4: 'soda',\nmix: 'Mix all ingredients'}) // {name1: 'orange juice', name2: 'milk', name3: 'apple', name4: 'soda', mix: 'Mix all ingredients'}\n\ncocktailRecipe({\nname1: 'orange juice',\nname2: 'apple juice',\nname3: 'apple juice',\nname4: 'sparkling water',\nmix: 'Mix all ingredients'}) // {name1: 'orange juice', name3: 'apple juice', name4: 'sparkling water', mix: 'Mix all ingredients'}\n```",
    "ru": "Если вы любите коктейли, то наверняка знаете, что для их приготовления необходимо соблюдать определенный рецепт.\n\nКаждый ингредиент должен быть в определенном количестве.\n\nДавайте напишем функцию `cocktailRecipe`, которая принимает один параметр `ingredients`– объект, содержащий информацию об ингредиентах.\n\nОбъект `ingredients` имеет следующие свойства:\n* `name1` – название первого ингредиента, строка\n* `name2` – название второго ингредиента, строка\n* `name3` – название третьего ингредиента, строка\n* `name4` – название четвертого ингредиента, строка;\n* `mix` – строка, содержащая инструкцию по приготовлению коктейля.\n\nПо ошибке в объекте могут быть повторяющиеся ингредиенты. Например, если в ключе `name1` записано `orange juice`\nи в ключе `name2` также записано `orange juice` необходимо удалить из объекта повторяющиеся ингредиенты\n(в данном примере свойство `name1` необходимо удалить).\n\nФункция должна вернуть объект, содержащий только уникальные ингредиенты и инструкцию по приготовлению коктейля.\n\nПример запуска функции:\n```javascript\ncocktailRecipe({\nname1: 'orange juice',\nname2: 'milk',\nname3: 'apple',\nname4: 'soda',\nmix: 'Mix all ingredients'}) // {name1: 'orange juice', name2: 'milk', name3: 'apple', name4: 'soda', mix: 'Mix all ingredients'}\n\ncocktailRecipe({\nname1: 'orange juice',\nname2: 'apple juice',\nname3: 'apple juice',\nname4: 'sparkling water',\nmix: 'Mix all ingredients'}) // {name1: 'orange juice', name3: 'apple juice', name4: 'sparkling water', mix: 'Mix all ingredients'}\n```"
  },
  "initialSolution": "function",
  "completedSolution": "function cocktailRecipe(ingredients) {\n  if (\n    ingredients.name1 === ingredients.name2 ||\n    ingredients.name1 === ingredients.name3 ||\n    ingredients.name1 === ingredients.name4\n  ) {\n    delete ingredients.name1;\n  }\n  if (\n    ingredients.name2 === ingredients.name3 ||\n    ingredients.name2 === ingredients.name4\n  ) {\n    delete ingredients.name2;\n  }\n  if (ingredients.name3 === ingredients.name4) {\n    delete ingredients.name3;\n  }\n  return ingredients;\n}",
  "openTest": "it(`function cocktailRecipe(ingredients)`, () => {\n  expect(cocktailRecipe).to.be.a('function');\n});\n\nit(`function cocktailRecipe({name1: \"milk\", name2: \"milk\", name3: \"milk\", name4: \"milk\", mix: \"Mix all ingredients\"}) return {name4: \"milk\", mix: \"Mix all ingredients\"}`, () => {\n  expect(\n    cocktailRecipe({\n      name1: 'milk',\n      name2: 'milk',\n      name3: 'milk',\n      name4: 'milk',\n      mix: 'Mix all ingredients',\n    }),\n  ).eql({ name4: 'milk', mix: 'Mix all ingredients' });\n});\n\nit(`function cocktailRecipe({name1: \"orange juice\", name2: \"coca-cola\", name3: \"apple juice\", name4: \"sparkling water\", mix: \"Mix all ingredients\"}) return {name1: \"orange juice\", name2: \"coca-cola\", name3: \"apple juice\", name4: \"sparkling water\", mix: \"Mix all ingredients\"}`, () => {\n  expect(\n    cocktailRecipe({\n      name1: 'orange juice',\n      name2: 'coca-cola',\n      name3: 'apple juice',\n      name4: 'sparkling water',\n      mix: 'Mix all ingredients',\n    }),\n  ).eql({\n    name1: 'orange juice',\n    name2: 'coca-cola',\n    name3: 'apple juice',\n    name4: 'sparkling water',\n    mix: 'Mix all ingredients',\n  });\n});\n\nit(`function cocktailRecipe({name1: \"orange juice\", name2: \"orange juice\", name3: \"peach juice\", name4: \"coconut water\", mix: \"Mix all ingredients\"}) return {name2: \"orange juice\", name3: \"peach juice\", name4: \"coconut water\", mix: \"Mix all ingredients\"}`, () => {\n  expect(\n    cocktailRecipe({\n      name1: 'orange juice',\n      name2: 'orange juice',\n      name3: 'peach juice',\n      name4: 'coconut water',\n      mix: 'Mix all ingredients',\n    }),\n  ).eql({\n    name2: 'orange juice',\n    name3: 'peach juice',\n    name4: 'coconut water',\n    mix: 'Mix all ingredients',\n  });\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}