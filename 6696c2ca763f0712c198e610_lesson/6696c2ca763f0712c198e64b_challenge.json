{
  "_id": "6696c2ca763f0712c198e64b",
  "name": {
    "en": "Stocks of tiles in the store. Objects",
    "ru": "Запасы плитки в магазине. Объекты"
  },
  "instruction": {
    "en": "The `tileStash` function takes one parameter - the `tile` object, which contains the following properties:\n* `sold` - number of sold tiles, number;\n* `damaged` - number of damaged tiles, number;\n* `defect` - number of tiles with a defect, number;\n* `lost` - number of lost tiles, number;\n* `available` - number of available tiles, number;\n\nWe need to redo the object `tile` by combining the properties `damaged`, `defect` and `lost` into one property `nonConformance`.\n\nThe function should return an updated `tile` object with only `sold`, `nonConformance` and `available` properties.\n\nAn example of running the function:\n```javascript\ntileStash({\nsold:100,\ndamaged: 4,\ndefect: 5,\nlost: 1,\navailable: 90\n})\n\n// {sold: 100, nonConformance: 10, available: 90}\n```",
    "ru": "Функция `tileStash` принимает один параметр – объект `tile`, который содержит следующие свойства:\n* `sold` – количество проданной плитки, число;\n* `damaged` – количество поврежденной плитки, число;\n* `defect` – количество плитки с дефектом, число;\n* `lost` – количество потерянной плитки, число;\n* `available` – количество доступной плитки, число;\n\nНеобходимо переделать объект `tile`, объединив свойства `damaged`, `defect` и `lost` в одно свойство `nonConformance`.\n\nФункция должна вернуть обновленный объект `tile`, в котором будут только свойства `sold`, `nonConformance` и `available`.\n\nПример запуска функции:\n```javascript\ntileStash({\n  sold:100,\n  damaged: 4,\n  defect: 5,\n  lost: 1,\n  available: 90\n})\n\n// {sold: 100, nonConformance: 10, available: 90}\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function tileStash(tile) {\n  tile.nonConformance = tile.damaged + tile.defect + tile.lost;\n  delete tile.damaged;\n  delete tile.defect;\n  delete tile.lost;\n  return tile;\n}",
  "openTest": "it('Created function tileStash', () => {\n  expect(tileStash).to.be.a('function');\n});\n\nit('tileStash({sold:100, damaged: 4, defect: 5, lost: 1, available: 90}) // {sold: 100, nonConformance: 10, available: 90}', () => {\n  expect(tileStash({ sold: 100, damaged: 4, defect: 5, lost: 1, available: 90 })).eql({\n    sold: 100,\n    nonConformance: 10,\n    available: 90,\n  });\n});\n\nit('tileStash({sold:50, damaged: 4, defect: 5, lost: 10, available: 40}) // {sold: 50, nonConformance: 19, available: 40}', () => {\n  expect(tileStash({ sold: 50, damaged: 4, defect: 5, lost: 10, available: 40 })).eql({\n    sold: 50,\n    nonConformance: 19,\n    available: 40,\n  });\n});\n\nit('tileStash({sold:10, damaged: 40, defect: 501, lost: 41, available: 0}) // {sold: 10, nonConformance: 582, available: 0}', () => {\n  expect(tileStash({ sold: 10, damaged: 40, defect: 501, lost: 41, available: 0 })).eql({\n    sold: 10,\n    nonConformance: 582,\n    available: 0,\n  });\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}