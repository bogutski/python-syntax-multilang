{
  "_id": "6696c2ca763f0712c198e610",
  "content": {
    "ru": "Мы можем изменять и удалять свойства объекта. Для изменения свойства объекта мы можем просто обратиться к нему по имени и присвоить новое значение.\n\nНапример:\n\n```javascript\nconst car = {\n  make: \"Toyota\",\n  model: \"Sienna\",\n  year: 2078,\n  price: 789987,\n};\n\ncar.year = \"\"; // изменяем значение свойства car на пустую строку\nconsole.log(car); // { make: \"Toyota\", model: \"Sienna\", year: \"\", price: 789987 }\n\ncar.year = undefined; // изменяем значение свойства car на undefined\nconsole.log(car); // { make: \"Toyota\", model: \"Sienna\", year: undefined, price: 789987 }\n```\n\nВ JavaScript для удаления свойства объекта можно использовать оператор delete. Его синтаксис выглядит следующим образом:\n\n```javascript\ndelete objectName.propertyName;\n```\n\nгде `objectName` – это имя объекта, а `propertyName` – имя свойства, которое нужно удалить.\n\nВажно заметить, что при удалении свойства объекта оно полностью удаляется из объекта и больше не доступно для использования.\n\nРассмотрим пример:\n\n```javascript\nlet car = {\n  make: \"Toyota\",\n  model: \"Sienna\",\n  year: 2078,\n  price: 789987,\n  motor: {\n    v: 4,\n    id: 31231\n  }\n};\n\ndelete car.year; // удаляем свойство year\n\nconsole.log(car); // { make: \"Toyota\", model: \"Sienna\", price: 789987, \n                  //   motor: { v: 4, id: 31231} }\nconsole.log(car.year); // undefined\n\ndelete car.motor.id; // удаляем свойство motor.id\nconsole.log(car); // { make: \"Toyota\", model: \"Sienna\", price: 789987, motor: { v: 4 } }\n\ndelete car.motor; // удаляем свойство motor\nconsole.log(car); // { make: \"Toyota\", model: \"Sienna\", price: 789987 }\n```\n\nНапишем функцию для удаления определенного свойства у объекта:\n\n```js\nfunction cleanObject(obj, targetKey) {\n  delete obj[targetKey];\n  return obj;\n}\n\nconsole.log(cleanObject({ name: \"Bob\", age: 546 }, \"age\")); // { name: 'Bob' }\n```\n\nМы также можем присваивать свойству переменные:\n\n```js\ncar = {\n  id: 24234,\n  year: 2017,\n};\n\nconst key = 'year'\n\ncar[key] = car.id;\n\nconsole.log(car); //Вернет { id: 24234, year: 24234 }\n```\n\nЧтобы поменять местами значения двух свойств, нам надо ввести дополнительное свойство, потом поменять местами значения, и удалить введенное свойство.\nНапишем алгоритм действий для того что бы поменять местами значения двух разных свойств объекта:\n\n```js\ncar = {\n  id: 24234,\n  vin: 3432314234603,\n};\n\ncar.id_ = car.id;\ncar.id = car.vin;\ncar.vin = car.id_;\ndelete car.id_;\n\nconsole.log(car); //Вернет { id: 3432314234603, vin: 24234 }\n```\n",
    "en": "We can change and delete object properties. To change an object property, we can simply refer to it by name and assign a new value.\n\nFor example:\n\n```javascript\nconst car = {\n  make: \"Toyota\",\n  model: \"Sienna\",\n  year: 2078,\n  price: 789987,\n};\n\ncar.year = \"\"; // change the value of the car property to an empty string\nconsole.log(car); // { make: \"Toyota\", model: \"Sienna\", year: \"\", price: 789987 }\n\ncar.year = undefined; // change the value of the car property to undefined\nconsole.log(car); // { make: \"Toyota\", model: \"Sienna\", year: undefined, price: 789987 }\n```\n\nIn JavaScript you can use the delete operator to delete an object property. Its syntax looks like this\n\n```javascript\ndelete objectName.propertyName;\n```\n\nwhere `objectName` is the name of the object and `propertyName` is the name of the property to remove.\n\nIt is important to note that when you delete an object property, it is completely removed from the object and is no longer available for use.\n\nLet's look at an example:\n\n```javascript\nlet car = {\n  make: \"Toyota\",\n  model: \"Sienna\",\n  year: 2078,\n  price: 789987,\n  motor: {\n    v: 4,\n    id: 31231\n  }\n};\n\ndelete car.year; // delete the property year\n\nconsole.log(car); // { make: \"Toyota\", model: \"Sienna\", price: 789987, \n                  //   motor: { v: 4, id: 31231} }\nconsole.log(car.year); // undefined\n\ndelete car.motor.id; // delete the property motor.id\nconsole.log(car); // { make: \"Toyota\", model: \"Sienna\", price: 789987, motor: { v: 4 } }\n\ndelete car.motor; // delete the property motor\nconsole.log(car); // { make: \"Toyota\", model: \"Sienna\", price: 789987 }\n```\n\nLet's write a function to remove a certain property from an object:\n\n```js\nfunction cleanObject(obj, targetKey) {\n  delete obj[targetKey];\n  return obj;\n}\n\nconsole.log(cleanObject({ name: \"Bob\", age: 546 }, \"age\")); // { name: 'Bob' }\n```\n\nWe can also assign variables to the property:\n\n```js\ncar = {\n  id: 24234,\n  year: 2017,\n};\n\nconst key = 'year'\n\ncar[key] = car.id;\n\nconsole.log(car); // It will return { id: 24234, year: 24234 }\n```\n\nTo swap the values of two properties, we need to enter an additional property, then swap the values, and delete the entered property.\nLet's write an algorithm for swapping values of two different object properties:\n\n```js\ncar = {\n  id: 24234,\n  vin: 3432314234603,\n};\n\ncar.id_ = car.id;\ncar.id = car.vin;\ncar.vin = car.id_;\ndelete car.id_;\n\nconsole.log(car); //Вернет { id: 3432314234603, vin: 24234 }\n```\n",
    "es": "# Удаление свойств объекта language: es"
  },
  "video": {
    "ru": "https://youtu.be/1Iy7F-Xl_hA",
    "en": "",
    "es": ""
  }
}