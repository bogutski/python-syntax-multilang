{
  "_id": "6696c2ca763f0712c198e647",
  "name": {
    "en": "The sum of positive even and odd numbers. Deletion of object properties.",
    "ru": "Сумма положительных четных и нечетных чисел. Удаление свойств объекта."
  },
  "instruction": {
    "en": "The function `numberSum` takes 5 parameters: `count`, `n1`, `n2`, `n3`, `n4`.\n\nThe parameters `n1`, `n2`, `n3`, `n4` are integers. They can be positive or negative.\n\nThe object `count` has the following structure:\n* `oddPositive` - the sum of odd positive numbers, has the original value\n* `evenPositive` - the sum of even positive numbers, has an initial value\n* `fractional` - number, sum of fractional numbers.\n\nIt is necessary to remove the `fractional` property from the `count` object.\n\nThen evaluate `n1`, `n2`, `n3`, `n4` .\n\nIf the value is even and positive, then add the number to the sum of `evenPositive` object `count`.\n\nIf the values are odd and positive, then add the number to the sum of `oddPositive` object `count`.\n\nNegative numbers do not count.\n\nThe function must return the `count` object.\n\nAn example of running the function:\n```javascript\nnumberSum({oddPositive: 2, evenPositive: 6, fractional: 0}, 1, 2, 3, 4)// {oddPositive: 6, evenPositive: 12}\n```",
    "ru": "Функция `numberSum` принимает 5 параметров: `count`, `n1`, `n2`, `n3`, `n4`.\n\nПараметры `n1`, `n2`, `n3`, `n4` – это целые числа. Могут быть положительными или отрицательными.\n\nОбъект `count` имеет следующую структуру:\n* `oddPositive` – сумма нечетных положительных чисел, имеет первоначальное значение\n* `evenPositive` – сумма четных положительных чисел, имеет первоначальное значение\n* `fractional` – число, сумма дробных чисел.\n\nНеобходимо удалить свойство `fractional` из объекта `count`.\n\nЗатем оцените `n1`, `n2`, `n3`, `n4` .\n\nЕсли значение четное и положительное, то добавить число к сумме `evenPositive` объекта `count`.\n\nЕсли значение нечетные и положительные, то добавить число к сумме `oddPositive` объекта `count`.\n\nОтрицательные числа не учитывать.\n\nФункция должна вернуть объект `count`.\n\nПример запуска функции:\n```javascript\nnumberSum({oddPositive: 2, evenPositive: 6, fractional: 0}, 1, 2, 3, 4)// {oddPositive: 6, evenPositive: 12}\n```"
  },
  "initialSolution": "function\n\n}",
  "completedSolution": "function numberSum(count, n1, n2, n3, n4) {\n  delete count.fractional;\n  if (n1 > 0 && n1 % 2 === 0) {\n    count.evenPositive += n1;\n  } else if (n1 > 0 && n1 % 2 !== 0) {\n    count.oddPositive += n1;\n  }\n  if (n2 > 0 && n2 % 2 === 0) {\n    count.evenPositive += n2;\n  } else if (n2 > 0 && n2 % 2 !== 0) {\n    count.oddPositive += n2;\n  }\n  if (n3 > 0 && n3 % 2 === 0) {\n    count.evenPositive += n3;\n  } else if (n3 > 0 && n3 % 2 !== 0) {\n    count.oddPositive += n3;\n  }\n  if (n4 > 0 && n4 % 2 === 0) {\n    count.evenPositive += n4;\n  } else if (n4 > 0 && n4 % 2 !== 0) {\n    count.oddPositive += n4;\n  }\n  return count;\n}",
  "openTest": "it('Created function numberSum', () => {\n  expect(numberSum).to.be.a('function');\n});\n\nit('numberSum({oddPositive: 0, evenPositive: 0, fractional: 0}, 1, 2, 3, 4) // {oddPositive: 4, evenPositive: 6}', () => {\n  expect(numberSum({ oddPositive: 0, evenPositive: 0, fractional: 0 }, 1, 2, 3, 4)).eql({\n    oddPositive: 4,\n    evenPositive: 6,\n  });\n});\n\nit('numberSum({oddPositive: 0, evenPositive: 0, fractional: 0}, 15, -2, -7, 4) // {oddPositive: 4, evenPositive: 15}', () => {\n  expect(\n    numberSum({ oddPositive: 0, evenPositive: 0, fractional: 0 }, 15, -2, -7, 4),\n  ).eql({\n    oddPositive: 15,\n    evenPositive: 4,\n  });\n});\n\nit('numberSum({oddPositive: 7, evenPositive: 8, fractional: -6}, 0, 0, -7, -10) // {oddPositive: 7, evenPositive: 8}', () => {\n  expect(\n    numberSum({ oddPositive: 7, evenPositive: 8, fractional: -6 }, 0, 0, -7, -10),\n  ).to.deep.equal({\n    oddPositive: 7,\n    evenPositive: 8,\n  });\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}