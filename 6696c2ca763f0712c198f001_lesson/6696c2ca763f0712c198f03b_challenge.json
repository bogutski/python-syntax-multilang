{
  "_id": "6696c2ca763f0712c198f03b",
  "name": {
    "en": "",
    "ru": "Найти минимальное и максимальное число в двух массивах"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `minAndMax`, которая принимает два массива чисел.\n\nФункция должна найти минимальное число в первом массиве и максимальное во втором.\n\nФункция должна вернуть массив из двух чисел: минимальное число из первого массива, а второе - максимальное число из\n второго массива.\n\nМассивы не будут пустыми.\n\n\nПримеры запуска функции:\n```javascript\nminAndMax([1,2,3], [1,2,3]);                 // [1, 3]\nminAndMax([55, 74, 47], [9, 14, 7]);         // [47, 14]\nminAndMax([-5, 5, -15], [25, 78, 5]);        // [-15, 78]\nminAndMax([555, 741, 547], [963, 147, 369]); // [547, 963]\nminAndMax([1], [1]);                         // [1, 1]\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function minAndMax(arr1, arr2){\n  let min = arr1[0];\n  let max = arr2[0];\n  const length = arr1.length > arr2.length ? arr1.length : arr2.length;\n\n  for(let i = 0; i < length; i++){\n    if(arr1[i] < min) min = arr1[i];\n    if(arr2[i] > max) max = arr2[i];\n  }\n\n  return [min, max];\n}",
  "openTest": "it('Created function minAndMax', () => {\n  expect(minAndMax).to.be.a('function');\n});\n\nit('minAndMax([1,2,3,4,5,6,7,8,9,0], [1,2,3,4,5,6,7,8,9,0]) should return [0, 9]', () => {\n  expect(minAndMax([1,2,3,4,5,6,7,8,9,0], [1,2,3,4,5,6,7,8,9,0])).to.deep.equal([0, 9]);\n});\n\nit('minAndMax([-1, -55, 74, 23, 45, 358, -56], [55, 485, -36, -789, 147]) should return [-56, 485]', () => {\n  expect(minAndMax([-1, -55, 74, 23, 45, 358, -56], [55, 485, -36, -789, 147])).to.deep.equal([-56, 485]);\n});\n\nit('minAndMax([0], [0]) should return [0, 0]', () => {\n  expect(minAndMax([0], [0])).to.deep.equal([0, 0]);\n});\n\nit('minAndMax([555, 789, 3654, -1475, -369], [-963, 547, 5884, -698, 4231, 7892, 441]) should return [-1475, 7892]', () => {\n  expect(minAndMax([555, 789, 3654, -1475, -369], [-963, 547, 5884, -698, 4231, 7892, 441])).to.deep.equal([-1475, 7892]);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}