{
  "_id": "6696c2ca763f0712c198f035",
  "name": {
    "en": "",
    "ru": "Найти минимальное число в массиве"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `findMinNumber`, которая принимает массив положительных и отрицательных чисел и возвращает минимальное число из массива.\n\nЕсли массив пустой, то функция должна вернуть `undefined`.\n\nМетоды использовать нельзя.\n\n\nПримеры запуска функции:\n```javascript\nfindMinNumber([12, 21, 3, 0, 50, 6, 7, 8, 9, 10]); // 0\nfindMinNumber([25, 41, 25, 36, 456, 88, 25, 1]);   // 1\nfindMinNumber([52, 63, -2, -43, -5, -236, -41]);   // -236\nfindMinNumber([]); // undefined\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function findMinNumber(arr){\n  let min = arr[0];\n\n  for (let i = 1; i < arr.length; i++){\n    if (arr[i] < min) min = arr[i];\n  }\n\n  return min;\n}",
  "openTest": "it('Created function findMinNumber', () => {\n  expect(findMinNumber).to.be.a('function');\n});\n\nit('Function findMinNumber should not include Math.min', () => {\n  expect(findMinNumber.toString()).to.not.include('Math.min');\n});\n\nit('findMinNumber([1, 2, 3, 4, 50, 6, 7, 8, 9, 10, 0]) should return 0', () => {\n  expect(findMinNumber([1, 2, 3, 4, 50, 6, 7, 8, 9, 10, 0])).to.equal(0);\n});\n\nit('findMinNumber([25, 41, 25, 36, 456, 88, 25, 100]) should return 25', () => {\n  expect(findMinNumber([25, 41, 25, 36, 456, 88, 25, 100])).to.equal(25);\n});\n\nit('findMinNumber([-52, -63, -2, -43, -5,-235, -236, -41]) should return -236', () => {\n  expect(findMinNumber([-52, -63, -2, -43, -5, -235, -236, -41])).to.equal(-236);\n});\n\nit('findMinNumber([-55, 15, 36, 98, -33, -42, -57, -65]) should return -65', () => {\n  expect(findMinNumber([-55, 15, 36, 98, -33, -42, -57, -65])).to.equal(-65);\n});\n\nit('findMinNumber([5]) should return 5', () => {\n  expect(findMinNumber([5])).to.equal(5);\n});\n\nit('findMinNumber([]) should return undefined', () => {\n  expect(findMinNumber([])).to.equal(undefined);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}