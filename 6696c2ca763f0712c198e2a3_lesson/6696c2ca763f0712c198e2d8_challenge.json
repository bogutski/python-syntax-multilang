{
  "_id": "6696c2ca763f0712c198e2d8",
  "name": {
    "en": "Kind seller does not accept coins",
    "ru": "Добрый продавец не принимает монеты"
  },
  "instruction": {
    "en": "At the market, the seller only accepts bills, and coins are considered a discount.\n\nHe sells only three items at a time.\n\nWrite a function `finalPrice` that takes parameters:\n* `price1` - price of the first item\n* `price2` - price of the second item\n* `price3` - price of the third item\n\nThe prices of the goods can be integers or fractions.\n\nThe function should return the amount to be paid for all items including the discount.\n\nExamples of running the function:\n```javascript\nfinalPrice(10.5, 2.5, 3) // 16\nfinalPrice(10.5, 2.5, 3.5) // 16\nfinalPrice(10.5, 2.5, 3.5) // 16\nfinalPrice(10, 2, 3.1) // 15\n```",
    "ru": "На рынке продавец принимает только купюры, а монеты считает скидкой.\n\nПродает только по 3 товара.\n\nНапишите функцию `finalPrice`, которая принимает параметры:\n* `price1` - цена первого товара\n* `price2` - цена второго товара\n* `price3` - цена третьего товара\n\nЦены товаров могут быть целыми или дробными.\n\nФункция должна возвращать сумму, которую нужно заплатить за все товары с учетом скидки.\n\nПримеры запуска функции:\n```javascript\nfinalPrice(10.5, 2.5, 3) // 16\nfinalPrice(10.5, 2.5, 3.5) // 16\nfinalPrice(10.5, 2.5, 3.5) // 16\nfinalPrice(10, 2, 3.1) // 15\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function finalPrice(price1, price2, price3) {\n  return Math.floor(price1 + price2 + price3);\n}",
  "openTest": "it('Created function finalPrice', () => {\n  expect(finalPrice).to.be.a('function');\n});\n\nit('finalPrice(10.5, 2.5, 3) should return 16', () => {\n  expect(finalPrice(10.5, 2.5, 3)).to.equal(16);\n});\n\nit('finalPrice(10.5, 2.5, 3.5) should return 16', () => {\n  expect(finalPrice(10.5, 2.5, 3.5)).to.equal(16);\n});\n\nit('finalPrice(10, 2, 3.1) should return 15', () => {\n  expect(finalPrice(10, 2, 3.1)).to.equal(15);\n});\n\nit('finalPrice(1, 2.9, 30) should return 33', () => {\n  expect(finalPrice(1, 2.9, 30)).to.equal(33);\n});\n\nit('finalPrice(4.7, 2.1, 3.1) should return 9', () => {\n  expect(finalPrice(4.7, 2.1, 3.1)).to.equal(9);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}