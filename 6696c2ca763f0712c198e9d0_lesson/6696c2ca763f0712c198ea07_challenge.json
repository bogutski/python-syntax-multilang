{
  "_id": "6696c2ca763f0712c198ea07",
  "name": {
    "en": "Even vs. odd numbers",
    "ru": "Четные против нечетных чисел"
  },
  "instruction": {
    "en": "Write a function `evenVsOdd` that takes two numbers `num1` and `num2`.\n\nCreate two variables `sumOfOdd` and `sumOfEven` to store the sum of odd and even numbers, respectively.\n\nCreate a loop that goes through the numbers from `num1` to `num2` inclusive and sums them into the `sumOfOdd` and `sumOfEven` variables.\n\nAfter the loop ends, compare the sums of even and odd numbers and return the string:\n\n* 'Sum of even win' - if the sum of even numbers is greater,\n* 'Sum of odd win' - if the sum of odd numbers is greater,\n* 'Draw' - if the sums are equal.\n\nExamples of function call:\n```javascript\nevenVsOdd(1, 11); // 'Sum of odd win'\nevenVsOdd(1, 12); // 'Sum of even win'\nevenVsOdd(-10, 10); // 'Draw'\n```",
    "ru": "Напишите функцию `evenVsOdd`, которая принимает два числа `num1` и `num2`.\n\nСоздайте две переменные `sumOfOdd` и `sumOfEven`, которые будут хранить сумму нечетных и четных чисел соответственно.\n\nСоздайте цикл, который будет перебирать числа от `num1` до `num2` включительно и суммировать их в переменные `sumOfOdd` и `sumOfEven`.\n\nПосле завершения цикла сравните суммы четных и нечетных чисел и верните строку:\n\n* `Sum of even win` - если сумма четных чисел больше,\n* `Sum of odd win` - если сумма нечетных чисел больше,\n* `Draw` - если суммы равны.\n\nПримеры вызова функции:\n```javascript\nevenVsOdd(1, 11); // 'Sum of odd win'\nevenVsOdd(1, 12); // 'Sum of even win'\nevenVsOdd(-10, 10); // 'Draw'\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function evenVsOdd(num1, num2){\n  let sumOfOdd = 0;\n  let sumOfEven = 0;\n  for (let i = num1; i <= num2; i++) {\n    if (i % 2 === 0) sumOfEven += i;\n    else sumOfOdd += i;\n  }\n  if (sumOfEven > sumOfOdd) return 'Sum of even win';\n  else if (sumOfEven < sumOfOdd) return 'Sum of odd win';\n  else return 'Draw';\n}",
  "openTest": "it('Created function evenVsOdd', () => {\n  expect(evenVsOdd).to.be.a('function');\n});\n\nit('evenVsOdd(1, 11) should return Sum of odd win', () => {\n  expect(evenVsOdd(1, 11)).to.equal('Sum of odd win');\n});\n\nit('evenVsOdd(-1, 11) should return Sum of odd win', () => {\n  expect(evenVsOdd(-1, 11)).to.equal('Sum of odd win');\n});\n\nit('evenVsOdd(1, 12) should return Sum of even win', () => {\n  expect(evenVsOdd(1, 12)).to.equal('Sum of even win');\n});\n\nit('evenVsOdd(50, 66) should return Sum of even win', () => {\n  expect(evenVsOdd(50, 66)).to.equal('Sum of even win');\n});\n\nit('evenVsOdd(-10, 10) should return Draw', () => {\n  expect(evenVsOdd(-10, 10)).to.equal('Draw');\n});\n\nit('evenVsOdd(-17, 17) should return Draw', () => {\n  expect(evenVsOdd(-17, 17)).to.equal('Draw');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}