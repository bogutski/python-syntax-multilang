{
  "_id": "6696c2ca763f0712c198ea08",
  "name": {
    "en": "Which is bigger, n1 or n2?",
    "ru": "Что больше, n1 или n2?"
  },
  "instruction": {
    "en": "Write a function `addToArray` that takes two numbers `n1` and `n2` and returns an array.\n\nIf `n1` is less than `n2`, the function should return an array containing numbers from `n1` to `n2` inclusive.\n\nIf `n1` is greater than `n2`, the function should return an array containing numbers from `n2` to `n1` inclusive.\n\nEqual numbers `n1` and `n2` will not be passed to the function.\n\nExamples of running the function:\n```javascript\naddToArray(0, 5) // [0, 1, 2, 3, 4, 5]\naddToArray(7, 2) // [2, 3, 4, 5, 6, 7]\n```",
    "ru": "Напишите функцию `addToArray`, которая принимает два числа `n1` и `n2` и возвращает массив.\n\nЕсли `n1` меньше `n2`, то функция должна вернуть массив, в котором будут числа от `n1` до `n2` включительно.\n\nЕсли `n1` больше `n2`, то функция должна вернуть массив, в котором будут числа от `n2` до `n1` включительно.\n\nРавные числа `n1` и `n2` в функцию передаваться не будут.\n\nПримеры запуска функции:\n```javascript\naddToArray(0, 5) // [0, 1, 2, 3, 4, 5]\naddToArray(7, 2) // [2, 3, 4, 5, 6, 7]\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function addToArray(n1, n2) {\n  const arr = [];\n  let start = n1;\n  let end = n2;\n  if (n1 > n2){\n    start = n2;\n    end = n1;\n  }\n  for (let i = start; i <= end; i++) {\n    arr.push(i);\n  }\n  return arr;\n}",
  "openTest": "it('Created function addToArray', () => {\n  expect(addToArray).to.be.a('function');\n});\n\nit('addToArray(0, 5) should return [0, 1, 2, 3, 4, 5]', () => {\n  expect(addToArray(0, 5)).to.eql([0, 1, 2, 3, 4, 5]);\n});\n\nit('addToArray(-15, 5) should return [-15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]', () => {\n  expect(addToArray(-15, 5)).to.eql([-15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]);\n});\n\nit('addToArray(155, 160) should return [155, 156, 157, 158, 159, 160]', () => {\n  expect(addToArray(155, 160)).to.eql([155, 156, 157, 158, 159, 160]);\n});\n\nit('addToArray(125, 120) should return [120, 121, 122, 123, 124, 125]', () => {\n  expect(addToArray(125, 120)).to.eql([120, 121, 122, 123, 124, 125]);\n});\n\nit('addToArray(7, 2) should return [2, 3, 4, 5, 6, 7]', () => {\n  expect(addToArray(7, 2)).to.eql([2, 3, 4, 5, 6, 7]);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}