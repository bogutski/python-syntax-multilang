{
  "_id": "6696c2cb763f0712c198f24c",
  "name": {
    "en": "Array comparison",
    "ru": "Сравнение массивов"
  },
  "instruction": {
    "en": "The function `compareArrays` takes two arrays.\n\nIt is necessary to check if the first array contains all the elements of the second array.\n\nThe second array contains any number of unique elements.\n\nIf it does, the function should return `true`, if not, `false`.\n\nFix the errors in the code so that the function works correctly.\n\nThe errors can only be in the syntax.\n\nExample function calls:\n```javascript\ncompareArrays([1, 2, 3], [1, 2, 3]) // true\ncompareArrays([1, 2, 4, 14, 5, 13], [1, 2, 3, 4]) // false\ncompareArrays([1, 2, 3], [1, 2, 3, 4]) // false\n```",
    "ru": "Функция `compareArrays` принимает два массива.\n\nНеобходимо сравнить содержит ли первый массив все элементы второго массива.\n\nВторой массив содержит любое количество уникальных элементов.\n\nЕсли содержит, то функция должна вернуть `true`, если нет, то `false`.\n\nИсправьте ошибки в коде, чтобы функция работала правильно.\n\nОшибки могут быть только в синтаксисе.\n\nПример запуска функции:\n```javascript\ncompareArrays([1, 2, 3], [1, 2, 3]) // true\ncompareArrays([1, 2, 4, 14, 5, 13], [1, 2, 3, 4]) // false\ncompareArrays([1, 2, 3], [1, 2, 3, 4]) // false\n```"
  },
  "initialSolution": "function compareArrays([arr1], [arr2]) {\n  for (let i = 0, i < arr2.length, i++) {\n    let include = false;\n    for (let j = 0, j < arr1.length, j++) {\n      if (arr1[j] === arr2[i]) {\n        include = true;\n        break;\n      }\n    }\n\n    if (!include) {\n      return false;\n    }\n  }\n  return true;\n}",
  "completedSolution": "function compareArrays(arr1, arr2) {\n  for (let i = 0; i < arr2.length; i++) {\n    let include = false;\n    for (let j = 0; j < arr1.length; j++) {\n      if (arr1[j] === arr2[i]) {\n        include = true;\n        break;\n      }\n    }\n\n    if (!include) {\n      return false;\n    }\n  }\n  return true;\n}",
  "openTest": "it('Created function compareArrays', () => {\n  expect(compareArrays).to.be.a('function');\n});\n\nit('compareArrays([1, 2, 3], [1, 2, 3]) returns true', () => {\n  expect(compareArrays([1, 2, 3], [1, 2, 3])).to.be.true;\n});\n\nit('compareArrays([1, 2, 4, 14, 5, 13], [1, 2, 4]) returns true', () => {\n  expect(compareArrays([1, 2, 4, 14, 5, 13], [1, 2, 4])).to.be.true;\n});\nit('compareArrays([1, 2, 4, 14, 5, 13], [1, 2, 3, 4]) returns false', () => {\n  expect(compareArrays([1, 2, 4, 14, 5, 13], [1, 2, 3, 4])).to.be.false;\n});\n\nit('compareArrays([1, 2, 3], [1, 2, 3, 4]) returns false', () => {\n  expect(compareArrays([1, 2, 3], [1, 2, 3, 4])).to.be.false;\n});\n\nit('compareArrays([1, 2, 3, 4], []) returns true', () => {\n  expect(compareArrays([1, 2, 3, 4], [])).to.be.true;\n});\n\nit('compareArrays([], []) returns true', () => {\n  expect(compareArrays([], [])).to.be.true;\n});\n\nit('compareArrays([], [1, 2, 3, 4]) returns false', () => {\n  expect(compareArrays([], [1, 2, 3, 4])).to.be.false;\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}