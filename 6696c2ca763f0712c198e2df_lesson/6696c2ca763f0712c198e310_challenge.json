{
  "_id": "6696c2ca763f0712c198e310",
  "name": {
    "en": "Find the middle of the word",
    "ru": "Найдите середину слова"
  },
  "instruction": {
    "en": "Create a function `findMiddle`.\n\nThe function takes a string, returns the character or characters that are in the middle of the string.\n\nIf the length of the string is even, it returns two characters that are in the middle of the string.\n\nIf the length of the string is odd, it returns one character that is in the middle of the string.\n\nExamples of running the function:\n```javascript.\nfindMiddle('test') // 'es'\nfindMiddle('testing') // 't'\nfindMiddle('middle') // 'dd'\nfindMiddle('abc') // 'b'\nfindMiddle('A') // 'A'\nfindMiddle('of') // 'of'\nfindMiddle('') // ''\n```",
    "ru": "Создайте функцию `findMiddle`.\n\nФункция принимает строку, возвращает символ или символы, которые находятся в середине строки.\n\n* Если длина строки четная, то возвращаются два символа, которые находятся в середине строки.\n\n* Если длина строки нечетная, то возвращается один символ, который находится в середине строки.\n\n* Если строка пустая, то возвращается пустая строка.\n\nПримеры запуска функции:\n```javascript\nfindMiddle('test') // 'es'\nfindMiddle('testing') // 't'\nfindMiddle('middle') // 'dd'\nfindMiddle('abc') // 'b'\nfindMiddle('A') // 'A'\nfindMiddle('of') // 'of'\nfindMiddle('') // ''\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function findMiddle(str) {\n  if (str.length === 0) return '';\n  const strLength = str.length;\n  const middleIndex = Math.floor(strLength / 2);\n  if (strLength % 2 === 0) {\n    return str[middleIndex - 1] + str[middleIndex];\n  }\n  return str[middleIndex];\n}",
  "openTest": "it('Created function findMiddle', () => {\n  expect(findMiddle).to.be.a('function');\n});\n\nit('findMiddle(\"test\") should return \"es\"', () => {\n  expect(findMiddle('test')).to.equal('es');\n});\n\nit('findMiddle(\"testing\") should return \"t\"', () => {\n  expect(findMiddle('testing')).to.equal('t');\n});\n\nit('findMiddle(\"middle\") should return \"dd\"', () => {\n  expect(findMiddle('middle')).to.equal('dd');\n});\n\nit('findMiddle(\"qwe\") should return \"w\"', () => {\n  expect(findMiddle('qwe')).to.equal('w');\n});\n\nit('findMiddle(\"R\") should return \"R\"', () => {\n  expect(findMiddle('R')).to.equal('R');\n});\n\nit('findMiddle(\"\") should return \"\"', () => {\n  expect(findMiddle('')).to.equal('');\n});\n\nit('findMiddle(\"of\") should return \"of\"', () => {\n  expect(findMiddle('of')).to.equal('of');\n});\n\nit('findMiddle(\"123\") should return \"2\"', () => {\n  expect(findMiddle('123')).to.equal('2');\n});\n\nit('findMiddle(\"0093900\") should return \"3\"', () => {\n  expect(findMiddle('0093900')).to.equal('3');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}