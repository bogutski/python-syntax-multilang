{
  "_id": "6696c2ca763f0712c198e316",
  "name": {
    "en": "Buses for schoolchildren",
    "ru": "Автобусы для школьников"
  },
  "instruction": {
    "en": "The capacity of the bus for schoolchildren is 40 people.\n\nWrite a function `busForSchool` that takes one parameter - the number of schoolchildren - and returns the number of buses needed to transport schoolchildren.\n\nExamples of running the function:\n```javascript.\nbusForSchool(1) // 1\nbusForSchool(40) // 1\nbusForSchool(41) // 2\nbusForSchool(80) // 2\nbusForSchool(805) // 21\n```",
    "ru": "Вместимость автобуса для школьников - 40 человек.\n\nНапишите функцию `busForSchool`, которая принимает один параметр - количество школьников, и возвращает количество автобусов, которые нужны для перевозки школьников.\n\nПримеры запуска функции:\n```javascript\nbusForSchool(1) // 1\nbusForSchool(40) // 1\nbusForSchool(41) // 2\nbusForSchool(80) // 2\nbusForSchool(805) // 21\n```"
  },
  "initialSolution": "fun bus",
  "completedSolution": "function busForSchool(num) {\n  return Math.ceil(num / 40);\n}",
  "openTest": "it('Created function busForSchool', () => {\n  expect(busForSchool).to.be.a('function');\n});\n\nit('busForSchool(1) should return 1', () => {\n  expect(busForSchool(1)).to.equal(1);\n});\n\nit('busForSchool(40) should return 1', () => {\n  expect(busForSchool(40)).to.equal(1);\n});\n\nit('busForSchool(41) should return 2', () => {\n  expect(busForSchool(41)).to.equal(2);\n});\n\nit('busForSchool(80) should return 2', () => {\n  expect(busForSchool(80)).to.equal(2);\n});\n\nit('busForSchool(805) should return 21', () => {\n  expect(busForSchool(805)).to.equal(21);\n});\n\nit('busForSchool(0) should return 0', () => {\n  expect(busForSchool(0)).to.equal(0);\n});\n\nit('busForSchool(3907) should return 98', () => {\n  expect(busForSchool(3907)).to.equal(98);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}