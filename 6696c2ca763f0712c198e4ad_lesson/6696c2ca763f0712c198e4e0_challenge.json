{
  "_id": "6696c2ca763f0712c198e4e0",
  "name": {
    "en": "The function looks for the index of an element in a string. The case is not taken into account.",
    "ru": "Функция ищет индекс элемента в строке. Регистр не учитывается."
  },
  "instruction": {
    "en": "Write a function `searchIndex` that takes two arguments: a string and a substring.\n\nThe function should return the index of the first occurrence of the substring in the string.\n\nIf no substring is found, the function should return `-1`.\n\nThe search must be case insensitive.\n\nExamples:\n```javascript\nsearchIndex('HeLlo', 'll'); // 2\nsearchIndex('HeLlo', 'lL'); // 2\nsearchIndex('HeLlo', 'LL'); // 2\nsearchIndex('HeLlo', 'Ll'); // 2\n```",
    "ru": "Напишите функцию `searchIndex`, которая принимает два аргумента: строку и подстроку.\n\nФункция должна возвращать индекс первого вхождения подстроки в строку.\n\nЕсли подстрока не найдена, функция должна возвращать `-1`.\n\nПоиск должен быть нечувствителен к регистру.\n\nПримеры:\n```javascript\nsearchIndex('HeLlo', 'll'); // 2\nsearchIndex('HeLlo', 'lL'); // 2\nsearchIndex('HeLlo', 'LL'); // 2\nsearchIndex('HeLlo', 'Ll'); // 2\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function searchIndex(str, subStr) {\n  return str.toLowerCase()\n    .indexOf(subStr.toLowerCase())\n}",
  "openTest": "it('Created function searchIndex', () => {\n  expect(searchIndex).to.be.a('function');\n});\n\nit('searchIndex(\"HeLlo\", \"ll\") should return 2', () => {\n  expect(searchIndex(\"HeLlo\", \"ll\")).to.equal(2);\n} );\n\nit('searchIndex(\"HeLlo\", \"lL\") should return 2', () => {\n  expect(searchIndex(\"HeLlo\", \"lL\")).to.equal(2);\n} );\n\nit('searchIndex(\"HeLlo\", \"LL\") should return 2', () => {\n  expect(searchIndex(\"HeLlo\", \"LL\")).to.equal(2);\n} );\n\nit('searchIndex(\"Llo\", \"Ll\") should return 2', () => {\n  expect(searchIndex(\"Llo\", \"Ll\")).to.equal(0);\n});\n\nit('searchIndex(\"HeLlo\", \"A\") should return -1', () => {\n  expect(searchIndex(\"HeLlo\", \"A\")).to.equal(-1);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}