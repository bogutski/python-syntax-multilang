{
  "_id": "6696c2ca763f0712c198e4e4",
  "name": {
    "en": "Find the last occurrence of a substring in a string",
    "ru": "Найти последнее вхождение подстроки в строку"
  },
  "instruction": {
    "en": "Write a function `findLastIndexOf` that takes two parameters: a string and a substring.\n\nThe function should return the index of the last occurrence of the substring in the string.\n\nIf no substring is found, the function should return `-1`.\n\nThe search must be case insensitive.\n\nExamples:\n```javascript\nfindLastIndexOf('HeLlo', 'll'); // 2\nfindLastIndexOf('HeLlo new heLLo', 'lL'); // 12\nfindLastIndexOf('HeLlo heLLo', 'll'); // 8\nfindLastIndexOf('HeLlo heLLo', 'LL'); // 8\n```",
    "ru": "Напишите функцию `findLastIndexOf`, которая принимает два параметра: строку и подстроку.\n\nФункция должна возвращать индекс последнего вхождения подстроки в строку.\n\nЕсли подстрока не найдена, функция должна возвращать `-1`.\n\nПоиск должен быть нечувствителен к регистру.\n\nПримеры:\n```javascript\nfindLastIndexOf('HeLlo', 'll'); // 2\nfindLastIndexOf('HeLlo new heLLo', 'lL'); // 12\nfindLastIndexOf('HeLlo heLLo', 'll'); // 8\nfindLastIndexOf('HeLlo heLLo', 'LL'); // 8\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function findLastIndexOf(str, subStr) {\n  return str.toLowerCase().lastIndexOf(subStr.toLowerCase());\n}",
  "openTest": "it('Created function findLastIndexOf', () => {\n  expect(findLastIndexOf).to.be.a('function');\n});\n\nit('findLastIndexOf(\"HeLlo\", \"ll\") should return 2', () => {\n  expect(findLastIndexOf('HeLlo', 'll')).to.equal(2);\n});\n\nit('findLastIndexOf(\"HeLlo new heLLo\", \"lL\") should return 12', () => {\n  expect(findLastIndexOf('HeLlo new heLLo', 'lL')).to.equal(12);\n});\n\nit('findLastIndexOf(\"HeLlo heLLo\", \"ll\") should return 8', () => {\n  expect(findLastIndexOf('HeLlo heLLo', 'll')).to.equal(8);\n});\n\nit('findLastIndexOf(\"HeLlo heLLo\", \"LL\") should return 8', () => {\n  expect(findLastIndexOf('HeLlo heLLo', 'LL')).to.equal(8);\n});\n\nit('findLastIndexOf(\"HeLlo heLLo\", \"LL\") should return 9', () => {\n  expect(findLastIndexOf('HeLlo heLLo', 'LL')).to.equal(8);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}