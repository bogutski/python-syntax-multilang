{
  "_id": "6696c2ca763f0712c198e0e3",
  "name": {
    "en": "The profitCalculation function with the formula calculation",
    "ru": "Функция profitCalculation с расчетом по формуле"
  },
  "instruction": {
    "en": "Create a function `profitCalculation` that takes three arguments: `income`, `cost`, `taxPercent`.\n\nThe function should calculate profits according to the formula: `income - cost - (income - cost) * (taxPercent / 100)`.\n\nIf possible, use variables in the function to store intermediate values.\n\nCreate variables `client1` and `client2` and assign them to the results of a call to the function `profitCalculation` with different arguments.\n\n```javascript\nconst client1 = profitCalculation(1000, 500, 10);\nconst client2 = profitCalculation(1000, 500, 20);\n```",
    "ru": "Создайте функцию `profitCalculation`, которая принимает три аргумента: `income`, `cost`, `taxPercent`.\n\nФункция должна вести расчет прибыли по формуле: `income - cost - (income - cost) * (taxPercent / 100)`.\n\nПо возможности в функции используйте переменные для хранения промежуточных значений.\n\nСоздайте переменные `client1` и `client2` и присвойте им результаты вызова функции `profitCalculation` с разными аргументами.\n\n```javascript\nconst client1 = profitCalculation(1000, 500, 10);\nconst client2 = profitCalculation(1000, 500, 20);\n```"
  },
  "initialSolution": "function",
  "completedSolution": "function profitCalculation(income, cost, taxPercent) {\n  return income - cost - (income - cost) * (taxPercent / 100);\n}\n\nconst client1 = profitCalculation(1000, 500, 10);\nconst client2 = profitCalculation(1000, 500, 20);",
  "openTest": "it('Created function profitCalculation', () => {\n  expect(profitCalculation).to.be.a('function');\n});\n\nit('profitCalculation(1000, 500, 10) should return 450', () => {\n  expect(profitCalculation(1000, 500, 10)).to.be.equal(450);\n});\n\nit('profitCalculation(1000, 500, 20) should return 400', () => {\n  expect(profitCalculation(1000, 500, 20)).to.be.equal(400);\n});\n\nit('profitCalculation(1000, 500, 30) should return 350', () => {\n  expect(profitCalculation(1000, 500, 30)).to.be.equal(350);\n});\n\nit('profitCalculation(1000, 500, 40) should return 300', () => {\n  expect(profitCalculation(1000, 500, 40)).to.be.equal(300);\n});\n\nit('created variable client1', () => {\n  expect(client1).to.be.equal(450);\n});\n\nit('created variable client2', () => {\n  expect(client2).to.be.equal(400);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}