{
  "name": "Результат работы функции в переменную",
  "questions": {
    "0": {
      "name": "Результат работы функции можно присвоить в переменную",
      "variants": {
        "0": {
          "name": "Утверждение верно"
        },
        "1": {
          "name": "Утверждение неверно"
        }
      }
    },
    "1": {
      "name": "Функцию можно вызывать несколько раз и получать разные результаты, затем присвоить результаты в переменные",
      "variants": {
        "0": {
          "name": "Утверждение верно"
        },
        "1": {
          "name": "Утверждение неверно"
        }
      }
    },
    "2": {
      "name": "Если функция возвращает значение, то можно присвоить результат работы функции в переменную",
      "variants": {
        "0": {
          "name": "Утверждение верно"
        },
        "1": {
          "name": "Утверждение неверно"
        }
      }
    },
    "3": {
      "name": "Если в функции нет return, то результат работы функции можно присвоить в переменную",
      "variants": {
        "0": {
          "name": "Будет ошибка"
        },
        "1": {
          "name": "Будет присвоено undefined"
        },
        "2": {
          "name": "Присвоить не получится"
        }
      }
    },
    "4": {
      "name": "Можно ли присвоить результат работы функции в переменную объявленную с помощью const?",
      "variants": {
        "0": {
          "name": "Нет. Переменная объявленная с помощью const не может быть изменена"
        },
        "1": {
          "name": "Да. Сначала переменная объявляется, а потом присваивается результат работы функции"
        },
        "2": {
          "name": "Да. Сначала вызывается функция, а потом присваивается значение переменной"
        },
        "3": {
          "name": "Будет ошибка"
        }
      }
    },
    "5": {
      "name": "При вызове функции можно передать аргументы, а затем результат работы функции присвоить в переменную",
      "variants": {
        "0": {
          "name": "Утверждение верно"
        },
        "1": {
          "name": "Утверждение неверно"
        },
        "2": {
          "name": "Будет ошибка"
        }
      }
    },
    "6": {
      "name": "Функцию можно вызывать столько раз, сколько нужно",
      "variants": {
        "0": {
          "name": "Есть лимит в 128 вызовов"
        },
        "1": {
          "name": "Есть лимит в 1024 вызова"
        },
        "2": {
          "name": "Лимита нет"
        }
      }
    },
    "7": {
      "name": "Переменная может называться так же, как и функция",
      "variants": {
        "0": {
          "name": "Да. Если у них разные области видимости"
        },
        "1": {
          "name": "Да. Если у них одинаковые области видимости"
        },
        "2": {
          "name": "Нет. Нельзя ни при каких условиях"
        },
        "3": {
          "name": "Не рекомендуется, так как это может ввести в заблуждение"
        }
      }
    },
    "8": {
      "name": "Переменную в которую присвоили результат работы функции нельзя изменить, даже если она объявлена с помощью ключевого слова let",
      "variants": {
        "0": {
          "name": "Утверждение верно"
        },
        "1": {
          "name": "Утверждение неверно"
        }
      }
    },
    "9": {
      "name": "Какой из вариантов не вызовет ошибку? Попробуйте ответить без запуска кода",
      "variants": {
        "0": {
          "name": "function f(n) { return '2 * n'; }; const a = f();"
        },
        "1": {
          "name": "function f(n) { return 2 * n; }; const a = f(n);"
        },
        "2": {
          "name": "function f(n) return 2 * n; }; let a = f(2); a = f(3);"
        },
        "3": {
          "name": "function f(n = 1) { return 2 * n; }; let a = f(2) + f();"
        }
      }
    }
  }
}