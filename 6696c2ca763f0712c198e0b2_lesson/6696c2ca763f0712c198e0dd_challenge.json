{
  "_id": "6696c2ca763f0712c198e0dd",
  "name": {
    "en": "Which pizza is more profitable?",
    "ru": "Какая пицца выгоднее?"
  },
  "instruction": {
    "en": "In this problem we will compare which pizza is more profitable.\n\nCreate a variable `PI` and set it to `3.14`.\n\nWrite a function `circleArea` that takes the parameter `diameter` and returns the area of the circle.\n\nCreate a variable `pizza1Diameter` and give it a value of `10`.\nCreate a variable `pizza1Price` and give it a value of `18`.\n\nCreate a variable `pizza2Diameter` and give it a value of `20`.\nCreate a variable `pizza2Price` and give it a value of `24`.\n\nCreate a variable `pizza1Area` and assign it the result of a call to the function `circleArea`. Pass the value of the variable `pizza1Diameter` as an argument.\nCreate a variable `pizza2Area` and assign it the result of a call to the function `circleArea`. Pass the value of the variable `pizza2Diameter` as an argument.\n\nCreate a variable `pizza1PricePerSquare` and assign it the result of dividing `pizza1Price` by `pizza1Area`.\nCreate a variable `pizza2PricePerSquare` and assign it the result of dividing `pizza2Price` by `pizza2Area`.\n\nCreate a function `comparePizzaPrices` that takes two parameters `p1sqPrice` and `p2sqPrice`.\nLet the function return the string `Pizza 1 price per square is p1sqPrice and pizza 2 price per square is p2sqPrice`.\nWhere `p1sqPrice` and `p2sqPrice` are argument values.",
    "ru": "В этой задаче будем сравнивать какая пицца выгоднее.\n\nСоздайте переменную `PI` и присвойте ей значение `3.14`.\n\nНапишите функцию `circleArea`, которая принимает параметр `diameter` и возвращает площадь круга.\n\nСоздайте переменную `pizza1Diameter` и присвойте ей значение `10`.\nСоздайте переменную `pizza1Price` и присвойте ей значение `18`.\n\nСоздайте переменную `pizza2Diameter` и присвойте ей значение `20`.\nСоздайте переменную `pizza2Price` и присвойте ей значение `24`.\n\nСоздайте переменную `pizza1Area` и присвойте ей результат вызова функции `circleArea`. В качестве аргумента передайте значение переменной `pizza1Diameter`.\nСоздайте переменную `pizza2Area` и присвойте ей результат вызова функции `circleArea`. В качестве аргумента передайте значение переменной `pizza2Diameter`.\n\nСоздайте переменную `pizza1PricePerSquare` и присвойте ей результат деления `pizza1Price` на `pizza1Area`.\nСоздайте переменную `pizza2PricePerSquare` и присвойте ей результат деления `pizza2Price` на `pizza2Area`.\n\nСоздайте функцию `comparePizzaPrices`, которая принимает два параметра `p1sqPrice` и `p2sqPrice`.\nПусть функция возвращает строку `Pizza 1 price per square is p1sqPrice and pizza 2 price per square is p2sqPrice`.\nГде `p1sqPrice` и `p2sqPrice` - это значения аргументов."
  },
  "initialSolution": "function sum(num1, num2){\n\n}",
  "completedSolution": "const PI = 3.14;\n\nfunction circleArea(diameter) {\n  return PI * (diameter / 2) ** 2;\n}\n\nconst pizza1Diameter = 10;\nconst pizza1Price = 18;\n\nconst pizza2Diameter = 20;\nconst pizza2Price = 24;\n\nconst pizza1Area = circleArea(pizza1Diameter);\nconst pizza2Area = circleArea(pizza2Diameter);\n\nconst pizza1PricePerSquare = pizza1Price / pizza1Area;\nconst pizza2PricePerSquare = pizza2Price / pizza2Area;\n\nfunction comparePizzaPrices(p1sqPrice, p2sqPrice) {\n  return `Pizza 1 price per square is ${p1sqPrice} and pizza 2 price per square is ${p2sqPrice}`;\n}",
  "openTest": "it('Created variable PI = 3.14', () => {\n  expect(PI).to.equal(3.14);\n});\n\nit('Created function circleArea', () => {\n  expect(typeof circleArea).to.equal('function');\n});\n\nit('Created variable pizza1Diameter = 10', () => {\n  expect(pizza1Diameter).to.equal(10);\n});\n\nit('Created variable pizza1Price = 18', () => {\n  expect(pizza1Price).to.equal(18);\n});\n\nit('Created variable pizza2Diameter = 20', () => {\n  expect(pizza2Diameter).to.equal(20);\n});\n\nit('Created variable pizza2Price = 24', () => {\n  expect(pizza2Price).to.equal(24);\n});\n\nit('Created variable pizza1Area', () => {\n  expect(pizza1Area).to.equal(78.5);\n});\n\nit('Created variable pizza2Area', () => {\n  expect(pizza2Area).to.equal(314);\n});\n\nit('Created variable pizza1PricePerSquare', () => {\n  expect(pizza1PricePerSquare).to.equal(0.22929936305732485);\n});\n\nit('Created variable pizza2PricePerSquare', () => {\n  expect(pizza2PricePerSquare).to.equal(0.07643312101910828);\n});\n\nit('Created function comparePizzaPrices', () => {\n  expect(typeof comparePizzaPrices).to.equal('function');\n});\n\nit('comparePizzaPrices(pizza1PricePerSquare, pizza2PricePerSquare) returns \"Pizza 1 price per square is 0.23076923076923078 and pizza 2 price per square is 0.07643312101910828\"', () => {\n  expect(comparePizzaPrices(pizza1PricePerSquare, pizza2PricePerSquare)).to.equal('Pizza 1 price per square is 0.22929936305732485 and pizza 2 price per square is 0.07643312101910828');\n});\n\nit('comparePizzaPrices(100, 200) returns \"Pizza 1 price per square is 100 and pizza 2 price per square is 200\"', () => {\n  expect(comparePizzaPrices(100, 200)).to.equal('Pizza 1 price per square is 100 and pizza 2 price per square is 200');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}