{
  "_id": "6696c2ca763f0712c198e0b2",
  "content": {
    "ru": "![](https://course-qa-basics.s3.us-west-1.amazonaws.com/box-string-numbers-function.png)\n\nМы знаем строки, числа и функции. Рассмотрим, как можно комбинировать одно с другим.\n\nСоздадим функцию приветствия `greeting`, которая будет принимать имя `name`.\n\nВнутри функции создадим переменную `message` и присвоим ей приветствие. Выведем результат работы функции в консоль.\n\n```javascript\nfunction greeting(name) {\n  const message = 'Hello ' + name; // создали переменную и задали значение, используя склеивание строк\n  return message; // возвращаем результат работы переменной\n}\n\nconsole.log(greeting('Alice')) // Hello Alice результат работы функции\nconsole.log(greeting('Bob')) // Hello Bob результат работы функции\n```\n\nРассмотрим пример комбинирования переменных и функций на примере выше. \n\n#### Присваивание функции значение переменной\n\nЗа пределами функции создадим переменные `personName1` и `personName2`. Присвоим им значения `Alice` и `Bob` соответственно.\n\nВызовем в консоли функцию, которая будет принимать эти переменные вместо `name`:\n\n```javascript\nconst personName1 = 'Alice'; // создали переменную и присвоили ей значение\nconst personName2 = 'Bob'; // создали переменную и присвоили ей значение\n\nconsole.log(greeting(personName1)) // Hello Alice функция взяла значение переменной personName1 вместо name\nconsole.log(greeting(personName2)) // Hello Bob функция взяла значение переменной personName2 вместо name\n```\n\n#### Присваивание переменной результат работы функции\n\nСоздадим еще 2 переменные `greetingPerson1` и `greetingPerson2`. \n\nПрисвоим результат работы функции `greeting` в эти переменные (то, что в примере выше записано в консоль). \n\nВыведем результат работы переменных.\n\n```javascript\nconst greetingPerson1 = greeting(personName1); // присвоили переменной значение функции greeting, которая взяла значение переменной personName1\nconst greetingPerson2 = greeting(personName2); // присвоили переменной значение функции greeting, которая взяла значение переменной personName2\n\nconsole.log(greetingPerson1) // Hello Alice результат работы переменной, которая взяла значение функции\nconsole.log(greetingPerson2) // Hello Bob результат работы переменной, которая взяла значение функции\n```\n\nКак мы видим, результат во всех примерах один и тот же.\n\nВ переменные мы можем записывать промежуточный результат или результат работы функции. \n\nИспользовать переменные можно как внутри, так и снаружи функции. \n\nВажно помнить, что переменные, которые созданы внутри функции, не видны снаружи функции.\n\n",
    "en": "![](https://course-qa-basics.s3.us-west-1.amazonaws.com/box-string-numbers-function.png)\n\nLet's create a greeting function `greeting` that takes the name `name`.\n\nLet's create a greeting function `greeting` that takes the name `name`.\n\nInside the function, create a variable `message` and assign a greeting to it. Output the result of the function to the console.\n\n```javascript\nfunction greeting(name) {\n  const message = 'Hello ' + name; // we create a variable and set its value using string concatenation\n  return message; //return the result of the variable's work\n}\n\nconsole.log(greeting('Alice')) // Hello Alice result\nconsole.log(greeting('Bob')) // Hello Bob result of the function\n```\n\nConsider the example of combining variables and functions in the example above. \n\n#### Assigning a variable value to a function\n\nOutside the function, create variables `personName1` and `personName2`. Assign them the values `Alice` and `Bob` respectively.\n\nLet's call a function in the console that will accept these variables instead of `name`:\n\n```javascript\nconst personName1 = 'Alice'; // create a variable and assign a value to it\nconst personName2 = 'Bob'; // create a variable and assign a value to it\n\nconsole.log(greeting(personName1)) // the Hello Alice function took the value of the personName1 variable instead of name\nconsole.log(greeting(personName2)) // // the Hello Bob function took the value of the personName2 variable instead of name\n```\n\n#### Create two more variables `greetingPerson1` and `greetingPerson2`. \n\nCreate two more variables `greetingPerson1` and `greetingPerson2`. \n\nWe assign the result of the `greeting` function to these variables (what is written to the console in the example above). \n\nLet's display the result of the variables.\n\n```javascript.\nconst greetingPerson1 = greeting(personName1); // assign the variable to the value of the greeting function that took the value of the variable personName1\nconst greetingPerson2 = greeting(personName2); // assign a variable to the value of the greeting function that took the value of the personName2 variable\n\nconsole.log(greetingPerson1) // Hello Alice the result of the variable that took the value of the function\nconsole.log(greetingPerson2) // Hello Bob is the result of the variable that took the value of the function\n```\n\nIn variables we can write the intermediate result or the result of a function. \n\nIn variables we can write the intermediate result or the result of a function. \n\nYou can use variables both inside and outside the function. \n\nIt is important to remember that variables that are created inside a function are not visible outside the function.\n\n",
    "es": "# Результат работы функции в переменную language: es"
  },
  "video": {
    "ru": "https://youtu.be/50xuYihOzGM",
    "en": "",
    "es": ""
  }
}