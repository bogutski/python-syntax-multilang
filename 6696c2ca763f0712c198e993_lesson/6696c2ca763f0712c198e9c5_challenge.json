{
  "_id": "6696c2ca763f0712c198e9c5",
  "name": {
    "en": "The sum of the odd numbers in the array. Instruction continue",
    "ru": "Сумма нечетных чисел массива. Инструкция continue"
  },
  "instruction": {
    "en": "The `oddSum` function takes an array of numbers `arr` as a parameter.\n\nThe function should return the sum of odd numbers in the array.\n\nThe initial solution shows how to do this task using the `if` method.\n\nFix the code using the `continue` operator in the loop.\n\nAn example of running a function:\n```javascript\noddSum([1, 2, 3, 4, 5]) // 9\noddSum([0, 1, 2, 4, 6, 8]) // 1\n```\n\nThe task will be checked for the `continue` method.\n\nIf the array is empty, the function should return 0.",
    "ru": "Функция `oddSum` принимает массив чисел `arr` в качестве параметра.\n\nФункция должна вернуть сумму нечетных чисел в массиве.\n\nВ начальном решении показано как сделать эту задачу с помощью метода `if`.\n\nИсправьте код используя оператор `continue` в цикле.\n\nПример запуска функции:\n```javascript\noddSum([1, 2, 3, 4, 5]) // 9\noddSum([0, 1, 2, 4, 6, 8]) // 1\n```\n\nЗадача будет проверяться на использование метода `continue`.\n\nЕсли массив пустой, то функция должна вернуть 0."
  },
  "initialSolution": "function oddSum(arr) {\n  let sum = 0\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 !== 0) {sum += arr[i]}\n  }\n  return sum\n}",
  "completedSolution": "function oddSum(arr) {\n  let sum = 0\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) continue;\n    sum += arr[i];\n  }\n  return sum\n}",
  "openTest": "it('Created function oddSum', () => {\n  expect(oddSum).to.be.a('function');\n});\n\nit('function oddSum should include statement continue', () => {\n  expect(oddSum.toString()).to.include('continue');\n});\n\nit('oddSum([1, 2, 3, 4, 5]) should return 9', () => {\n  expect(oddSum([1, 2, 3, 4, 5])).to.equal(9);\n});\n\nit('oddSum([0, 1, 2, 4, 6, 8]) should return 1', () => {\n  expect(oddSum([0, 1, 2, 4, 6, 8])).to.equal(1);\n});\n\nit('oddSum([1, 3, 5, 7, 9]) should return 25', () => {\n  expect(oddSum([1, 3, 5, 7, 9])).to.equal(25);\n});\n\nit('oddSum([2, 2, 2, 2, 5, 2, 2, 2, 2]) should return 5', () => {\n  expect(oddSum([2, 2, 2, 2, 5, 2, 2, 2, 2])).to.equal(5);\n});\n\nit('oddSum([0]) should return 0', () => {\n  expect(oddSum([0])).to.equal(0);\n});\n\nit('oddSum([]) should return 0', () => {\n  expect(oddSum([])).to.equal(0);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}