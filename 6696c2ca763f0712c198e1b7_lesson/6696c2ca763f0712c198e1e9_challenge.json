{
  "_id": "6696c2ca763f0712c198e1e9",
  "name": {
    "en": "Increase by a factor of 10 all numbers divisible by three",
    "ru": "Увеличить в 10 раз все числа кратные трем"
  },
  "instruction": {
    "en": "Numbers divisible by three are numbers that are divided by 3 without a remainder.\n\nTo check, you can use the operator `%` (the remainder of division) and if it is zero, then the number is a multiple of three.\n\nWrite a function `multiplyByTen` that takes a number and returns it multiplied by a factor of 10 if it is a multiple of three.\n\nOtherwise, return the number unchanged.\n\nRun examples:\n```javascript.\nmultiplyByTen(3); // 30\nmultiplyByTen(10); // 10\nmultiplyByTen(0); // 0\nmultiplyByTen(-3); // -30\nmultiplyByTen(-10); // -10\nmultiplyByTen(-15); // -150\n```\n\nUse the `===` (strict equality) operator to compare with zero.\n```javascript\nconst num = 0;\nconsole.log(num === 0); // true\n```",
    "ru": "Числа кратные трем это числа, которые делятся на 3 без остатка.\n\nДля проверки можно использовать оператор `%` (остаток от деления) и если он равен нулю, то число кратно трем.\n\nНапишите функцию `multiplyByTen`, которая принимает число и возвращает его увеличенное в 10 раз, если оно кратно трем.\n\nИначе вернуть число без изменений.\n\nПримеры запуска:\n```javascript\nmultiplyByTen(3); // 30\nmultiplyByTen(10); // 10\nmultiplyByTen(0); // 0\nmultiplyByTen(-3); // -30\nmultiplyByTen(-10); // -10\nmultiplyByTen(-15); // -150\n```\n\nДля сравнения с нулем используйте оператор `===` (строгое равенство).\n```javascript\nconst num = 0;\nconsole.log(num === 0); // true\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function multiplyByTen(num) {\n  return num % 3 === 0 ? num * 10 : num;\n}",
  "openTest": "it('Created function multiplyByTen', () => {\n  expect(multiplyByTen).to.be.a('function');\n});\n\nit('multiplyByTen(3) should return 30', () => {\n  expect(multiplyByTen(3)).to.equal(30);\n});\n\nit('multiplyByTen(10) should return 10', () => {\n  expect(multiplyByTen(10)).to.equal(10);\n});\n\nit('multiplyByTen(0) should return 0', () => {\n  expect(multiplyByTen(0)).to.equal(0);\n});\n\nit('multiplyByTen(-3) should return -30', () => {\n  expect(multiplyByTen(-3)).to.equal(-30);\n});\n\nit('multiplyByTen(-10) should return -10', () => {\n  expect(multiplyByTen(-10)).to.equal(-10);\n});\n\nit('multiplyByTen(-15) should return -150', () => {\n  expect(multiplyByTen(-15)).to.equal(-150);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}