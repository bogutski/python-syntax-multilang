{
  "_id": "6696c2ca763f0712c198e6fb",
  "name": {
    "en": "Find the shortest array",
    "ru": "Найди самый короткий массив"
  },
  "instruction": {
    "en": "Write a function `shortArray` that takes three parameters:\n* `arr1` - array of elements,\n* `arr2` - array of elements,\n* `arr3` - array of elements.\n\nThe function should return the shortest array.\n\nAn example of running the function:\n```javascript\nshortArray([1, 2, 3], [7, 8, 9, 0], [11, 45, 34, 67, 90]);\n// [1, 2, 3]\n```\n\nCompare the lengths of the arrays with each other.",
    "ru": "Напиши функцию `shortArray`, которая принимает три параметра:\n* `arr1` - массив элементов,\n* `arr2` - массив элементов,\n* `arr3` - массив элементов.\n\nФункция должна возвращать самый короткий массив.\n\nПример запуска функции:\n```javascript\nshortArray([1, 2, 3], [7, 8, 9, 0], [11, 45, 34, 67, 90]);\n// [1, 2, 3]\n```\n\nСравнивайте длины массивов между собой."
  },
  "initialSolution": "fun",
  "completedSolution": "function shortArray(arr1, arr2, arr3) {\n  if( arr1.length < arr2.length && arr1.length < arr3.length){\n    return arr1\n  } else if (arr2.length < arr1.length && arr2.length < arr3.length){\n    return arr2\n  }\n  return arr3\n}",
  "openTest": "it('Created function shortArray', () => {\n  expect(shortArray).to.be.a('function');\n});\n\nit('Function shortArray([1, 2, 3], [1, 2, 3, 4], [1, 2, 3, 4, 5]) returns [1, 2, 3]', () => {\n  expect(shortArray([1, 2, 3], [1, 2, 3, 4], [1, 2, 3, 4, 5])).to.deep.equal([1, 2, 3]);\n});\n\nit('Function shortArray([1, 2, 3, 4, 5], [1, 2, 3], [1, 2, 3, 4]) returns [1, 2, 3]', () => {\n  expect(shortArray([1, 2, 3, 4, 5], [1, 2, 3], [1, 2, 3, 4])).to.deep.equal([1, 2, 3]);\n});\n\nit('Function shortArray([1, 2, 3, 4], [1, 2, 3, 4, 5], [1, 2, 3]) returns [1, 2, 3]', () => {\n  expect(shortArray([1, 2, 3, 4], [1, 2, 3, 4, 5], [1, 2, 3])).to.deep.equal([1, 2, 3]);\n});\n\nit('Function shortArray([1, 2, 3], [1, 2, 3, 4], [1, 2, 3]) returns [1, 2, 3]', () => {\n  expect(shortArray([1, 2, 3], [1, 2, 3, 4], [1, 2, 3])).to.deep.equal([1, 2, 3]);\n});\n\nit('Function shortArray([1, 2], [1, 2], [1, 2]) returns [1, 2, 3]', () => {\n  expect(shortArray([1, 2], [1, 2], [1, 2])).to.deep.equal([1, 2]);\n});\n\nit('Function shortArray([1, 2, 3], [1, 2], [1, 2, 3, 4]) returns [1, 2]', () => {\n  expect(shortArray([1, 2, 3], [1, 2], [1, 2, 3, 4])).to.deep.equal([1, 2]);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}