{
  "_id": "6696c2ca763f0712c198e299",
  "name": {
    "en": "Rounding up the purchase amount.",
    "ru": "Округление суммы покупки в большую сторону."
  },
  "instruction": {
    "en": "Write a function named `roundTotal` that takes a single parameter - a number.\n\nThis number represents the amount of the purchase.\n\nName the parameter as you see fit.\n\nLet the function return the number rounded up.",
    "ru": "Напишите функцию с именем `roundTotal`, которая принимает один параметр – число.\n\nЭто число представляет собой сумму покупки.\n\nПараметр назовите по своему усмотрению.\n\nПусть функция возвращает округленное в большую сторону число."
  },
  "initialSolution": "fun",
  "completedSolution": "function roundTotal(num1) {\n  return Math.ceil(num1);\n}",
  "openTest": "it('Created function roundTotal', () => {\n  expect(roundTotal).to.be.a('function');\n});\n\nit('roundTotal(1.1) should return 2', () => {\n  expect(roundTotal(1.1)).to.equal(2);\n});\n\nit('roundTotal(1.5) should return 2', () => {\n  expect(roundTotal(1.5)).to.equal(2);\n});\n\nit('roundTotal(1.9) should return 2', () => {\n  expect(roundTotal(1.9)).to.equal(2);\n});\n\nit('roundTotal(2.1) should return 3', () => {\n  expect(roundTotal(2.1)).to.equal(3);\n});\n\nit('roundTotal(2.5) should return 3', () => {\n  expect(roundTotal(2.5)).to.equal(3);\n});\n\nit('roundTotal(2.9) should return 3', () => {\n  expect(roundTotal(2.9)).to.equal(3);\n});\n\nit('roundTotal(30.1) should return 31', () => {\n  expect(roundTotal(30.1)).to.equal(31);\n});\n\nit('roundTotal(30.5) should return 31', () => {\n  expect(roundTotal(30.5)).to.equal(31);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}