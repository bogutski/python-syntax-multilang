{
  "_id": "6696c2ca763f0712c198e2a2",
  "name": {
    "en": "Rounding to the next next even number",
    "ru": "Округление до ближайшего следующего четного числа"
  },
  "instruction": {
    "en": "Write a function `roundToNearestEven` that takes one number and returns that number rounded to the nearest even number.\n\nThe numbers can be integers or fractions.\n\nTake a look at the examples to see how the function should work.\n```javascript.\nroundToNearestEven(0) // 0\nroundToNearestEven(0.1) // 2\n\nroundToNearestEven(1) // 2\nroundToNearestEven(1.1) // 2\n\nroundToNearestEven(2) // 2\nroundToNearestEven(2.1) // 4\n\nroundToNearestEven(3) // 4\nroundToNearestEven(3.1) // 4\n\nroundToNearestEven(4) // 4\nroundToNearestEven(4.1) // 6",
    "ru": "Напишите функцию `roundToNearestEven`, которая принимает одно число и возвращает это число, округленное до ближайшего четного числа.\n\nЧисла могут быть целыми или дробными.\n\nПосмотрите примеры, чтобы понять, как должна работать функция.\n```javascript\nroundToNearestEven(0) // 0\nroundToNearestEven(0.1) // 2\n\nroundToNearestEven(1) // 2\nroundToNearestEven(1.1) // 2\n\nroundToNearestEven(2) // 2\nroundToNearestEven(2.1) // 4\n\nroundToNearestEven(3) // 4\nroundToNearestEven(3.1) // 4\n\nroundToNearestEven(4) // 4\nroundToNearestEven(4.1) // 6"
  },
  "initialSolution": "fun",
  "completedSolution": "function roundToNearestEven(n) {\n  const rounded = Math.ceil(n);\n  return rounded % 2 === 0 ? rounded : rounded + 1;\n}",
  "openTest": "it('Created function roundToNearestEven', () => {\n  expect(roundToNearestEven).to.be.a('function');\n});\n\nit('roundToNearestEven(0) should return 0', () => {\n  expect(roundToNearestEven(0)).to.equal(0);\n});\n\nit('roundToNearestEven(0.1) should return 2', () => {\n  expect(roundToNearestEven(0.1)).to.equal(2);\n});\n\nit('roundToNearestEven(1) should return 2', () => {\n  expect(roundToNearestEven(1)).to.equal(2);\n});\n\nit('roundToNearestEven(1.1) should return 2', () => {\n  expect(roundToNearestEven(1.1)).to.equal(2);\n});\n\nit('roundToNearestEven(2) should return 2', () => {\n  expect(roundToNearestEven(2)).to.equal(2);\n});\n\nit('roundToNearestEven(2.1) should return 4', () => {\n  expect(roundToNearestEven(2.1)).to.equal(4);\n});\n\nit('roundToNearestEven(3) should return 4', () => {\n  expect(roundToNearestEven(3)).to.equal(4);\n});\n\nit('roundToNearestEven(3.1) should return 4', () => {\n  expect(roundToNearestEven(3.1)).to.equal(4);\n});\n\nit('roundToNearestEven(4) should return 4', () => {\n  expect(roundToNearestEven(4)).to.equal(4);\n});\n\nit('roundToNearestEven(4.1) should return 6', () => {\n  expect(roundToNearestEven(4.1)).to.equal(6);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}