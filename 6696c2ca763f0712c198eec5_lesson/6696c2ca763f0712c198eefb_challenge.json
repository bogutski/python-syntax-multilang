{
  "_id": "6696c2ca763f0712c198eefb",
  "name": {
    "en": "",
    "ru": "Сумма чисел в строке с использованием объекта"
  },
  "instruction": {
    "en": "",
    "ru": "Функция `sumOnlyNumbers` принимает строку с различными символами, включая цифры.\n\nФункция должна вернуть сумму всех цифр в строке.\n\nНапример, если строка `'1a$ 2^10*#3'`, то функция должна вернуть `16`.\n\nЕсли строка пустая, то функция должна вернуть строку `'String is empty'`.\n\nРазберите код ниже и добавьте три строки, в местах отмеченных `<code here...>`, чтобы функция работала правильно.\n\nПерепишите функцию самостоятельно.\n\n\nПримеры запуска функции:\n```javascript\nsumOnlyNumbers('1 2 3 4 5');                   // 15\nsumOnlyNumbers('0, 1, 2, 3, 4, 5');            // 15\nsumOnlyNumbers('5 a b67 c @ # $ (50)[22]{9}'); // 153\nsumOnlyNumbers('a, a, a');                     // 0\nsumOnlyNumbers('');                            // 'String is empty'\n```"
  },
  "initialSolution": "function sumOnlyNumbers(str){\n  const numbers = { 0: true, 1: true, 2: true, 3: true, 4: true, 5: true, 6: true, 7: true, 8: true, 9: true};\n\n  <code here...> return 'String is empty';          // if string is empty\n  let sum = 0;                                      // where we will store the sum\n  let acc = '';                                     // accumulator for numbers\n\n  for (let i = 0; i < str.length; i++) {            // iterate over string\n    const num = str[i];                             // current symbol\n    if (numbers[num]) acc += str[i];                // if symbol is in the object, add it to the accumulator\n    else {                                          // if it's not in the object\n      sum += Number(acc);                           // convert accumulator to number and add it to the sum\n      acc = '';                                     // reset accumulator\n    }\n  }\n  <code here...>                                    // add the last number to the sum\n  <code here...>                                    // return\n}",
  "completedSolution": "function sumOnlyNumbers(str){\n  const numbers = { 0: true, 1: true, 2: true, 3: true, 4: true, 5: true, 6: true, 7: true, 8: true, 9: true};\n\n  if (str === '') return 'String is empty';\n  let sum = 0;\n  let acc = '';\n\n  for (let i = 0; i < str.length; i++) {\n    const num = str[i];\n    if (numbers[num]) acc += str[i];\n    else {\n      sum += Number(acc);\n      acc = '';\n    }\n  }\n  sum += Number(acc);\n  return sum;\n}",
  "openTest": "it('Created function sumOnlyNumbers', () => {\n  expect(sumOnlyNumbers).to.be.a('function');\n});\n\nit(\"sumOnlyNumbers('1 2 3 4 5') should return 15\", () => {\n  expect(sumOnlyNumbers('1 2 3 4 5')).to.equal(15);\n});\n\nit(\"sumOnlyNumbers('0, 1, 2, 3, 4, 5') should return 15\", () => {\n  expect(sumOnlyNumbers('0, 1, 2, 3, 4, 5')).to.equal(15);\n});\n\nit(\"sumOnlyNumbers('5 a b c @ # $ (1)[2]{3}') should return 11\", () => {\n  expect(sumOnlyNumbers('5 a b c @ # $ (1)[2]{3}')).to.equal(11);\n});\n\nit(\"sumOnlyNumbers('a12 -+4,b3><1c*/100$%^9&7*') should return 136\", () => {\n  expect(sumOnlyNumbers('a12 -+4,b3><1c*/100$%^9&7*')).to.equal(136);\n});\n\nit(\"sumOnlyNumbers('a, b, c') should return 0\", () => {\n  expect(sumOnlyNumbers('a, b, c')).to.equal(0);\n});\n\nit(\"sumOnlyNumbers('') should return 'String is empty'\", () => {\n  expect(sumOnlyNumbers('')).to.equal('String is empty');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}