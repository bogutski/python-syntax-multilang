{
  "_id": "6696c2ca763f0712c198eeff",
  "name": {
    "en": "",
    "ru": "Найти все числа и вернуть среднее арифметическое значение"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `average`, которая принимает строку из чисел, букв и слов.\n\nВсе элементы всегда разделены одним пробелом.\n\nФункция должна найти все числовые значения и вернуть среднее арифметическое этих чисел.\n\nЕсли строка пустая или чисел не будет найдено, то функция должна вернуть строку 'No data'.\n\n\nПример запуска функции:\n```javascript\naverage('1a 2 3a 4 5w') // 3\naverage('10 20 30 40')  // 25\naverage('a bb ccc')     // 'No data'\naverage('')             // 'No data'\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function average(str){\n  if(!str) return 'No data';\n  let arr = str.split(' ');\n  let sum = 0;\n  let count = 0;\n  for(let i = 0; i < arr.length; i++){\n    if(!isNaN(Number(arr[i]))){\n      sum += Number(arr[i]);\n      count++;}\n  }\n  return count ? sum / count : 'No data';\n}",
  "openTest": "it('Created function average', () => {\n  expect(average).to.be.a('function');\n});\n\nit(\"average('1 2 3 4 5') should return 3\", () => {\n  expect(average('1 2 3 4 5')).to.equal(3);\n});\n\nit(\"average('0 1 2 3 4 5 6 7 8 9 10') should return 5\", () => {\n  expect(average('0 1 2 3 4 5 6 7 8 9 10')).to.equal(5);\n});\n\nit(\"average('a b c 5 55 105 a s d') should return 55\", () => {\n  expect(average('a b c 5 55 105 a s d')).to.equal(55);\n});\n\nit(\"average('text 1000 more text 2000') should return 1500\", () => {\n  expect(average('text 1000 more text 2000')).to.equal(1500);\n});\n\nit(\"average('0 0 0') should return 0\", () => {\n  expect(average('0 0 0')).to.equal(0);\n});\n\nit(\"average('a b c') should return 'No data'\", () => {\n  expect(average('a b c')).to.equal('No data');\n});\n\nit(\"average('') should return 'No data'\", () => {\n  expect(average('')).to.equal('No data');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}