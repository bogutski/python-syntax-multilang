{
  "_id": "6696c2ca763f0712c198effb",
  "name": {
    "en": "",
    "ru": "Найти среднее арифметическое всех трехзначных чисел в массиве"
  },
  "instruction": {
    "en": "",
    "ru": "Функция `average3Digit` принимает один параметр - массив `arr`.\n\nМассив произвольной длины и может содержать любые целые числа.\n\nФункция осуществляет подсчет суммы и количества трехзначных чисел в массиве, возвращая среднее арифметическое этих чисел.\n\nЕсли в массиве нет трехзначных чисел, функция возвращает `0`.\n\nЕсли массив пустой, то функция возвращает `'Array is empty'`.\n\nРезультат подсчета среднеарифметического значения округляется в `меньшую сторону`.\n\nИсправьте ошибки в коде, чтобы функция работала правильно.\n\nПример запуска функции:\n```javascript\naverage3Digit([100, 200, 300]); // (100 + 200 + 300) / 3 = 200\naverage3Digit([10, 2001, 3]); // 0\naverage3Digit([777, -777, 122]); // (777 + (-777) + 122) / 3 = 40\naverage3Digit([]); // 'Array is empty'\n```"
  },
  "initialSolution": "function average3Digit(arr) {\n  if (!!arr.length) return 'Array is empty';\n  let sum = 0;\n  let avr = 0;\n  let count = 0;\n  for (let i === 0; i < arr.length; i++) {\n    if (arr[i] >= 99 || arr[i] <= 1000 && arr[i] <= -99 || arr[i] >= -1000) {\n      sum += arr[i];\n      count++;\n    }\n  }\n  if (count) avr = sum / count;\n  return Math.ceil(avr);\n}",
  "completedSolution": "function average3Digit(arr) {\n  if (!arr.length) return 'Array is empty';\n  let sum = 0;\n  let avr = 0;\n  let count = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 99 && arr[i] < 1000 || arr[i] < -99 && arr[i] > -1000) {\n      sum += arr[i];\n      count++;\n    }\n  }\n  if (count) avr = sum / count;\n  return Math.floor(avr);\n}",
  "openTest": "it('Created function average3Digit', () => {\n  expect(average3Digit).to.be.a('function');\n});\n\nit(\"average3Digit([100, 200, 300]) returns 200\", () => {\n  expect(average3Digit([100, 200, 300])).to.equal(200);\n});\n\nit(\"average3Digit([10, 2001, 3]) returns 0\", () => {\n  expect(average3Digit([10, 2001, 3])).to.equal(0);\n});\n\nit(\"average3Digit([-100, -101, -202, -303]) returns -177\", () => {\n  expect(average3Digit([-100, -101, -202, -303])).to.equal(-177);\n});\n\nit(\"average3Digit([-100, -353, 10, 2345, -202, 9]) returns -219\", () => {\n  expect(average3Digit([-100, -353, 10, 2345, -202, 9])).to.equal(-219);\n});\n\nit(\"average3Digit([101, -534, -101, 534]) returns 0\", () => {\n  expect(average3Digit([101, -534, -101, 534])).to.equal(0);\n});\n\nit(\"average3Digit([777, -777, 122]) returns 40\", () => {\n  expect(average3Digit([777, -777, 122])).to.equal(40);\n});\n\nit(\"average3Digit([]) returns 'Array is empty'\", () => {\n  expect(average3Digit([])).to.equal('Array is empty');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}