{
  "_id": "6696c2ca763f0712c198effa",
  "name": {
    "en": "",
    "ru": "Найти среднее арифметическое всех десятичных дробей в массиве"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `averageDes`, которая принимает один параметр - массив чисел.\n\nМассив произвольной длины и может содержать как целые числа, так и десятичные дроби.\n\nФункция производит подсчет суммы и количества всех десятичных дробей в массиве, возвращая их среднее арифметическое значение.\n\nЕсли массив пустой, то функция должна вернуть строку `'Array is empty'`.\n\nРезультат должен быть округлен до 2-х знаков после запятой и переведен в тип данных `number`.\n\nЕсли в массиве нет десятичных дробей, то функция должна вернуть `0`.\n\nПример запуска функции:\n```javascript\naverageDes([1, 2, 3]); // 0\naverageDes([0.8, 12.1, -0.8]); // (0.8 + 12.1 + (-0.8)) / 3 = 4.03\naverageDes([3.7, -8.3]); // (3.7 + (-8.3)) / 2 = -2.3\naverageDes([3.5, 2, 7.3, -2.1, -4]); // (3.5 + 7.3 + (-2.1)) / 3 = 2.9\naverageDes([]); // 'Array is empty'\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function averageDes(arr) {\n  if (!arr.length) return 'Array is empty';\n  let sum = 0;\n  let avr = 0;\n  let count = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] - Math.floor(arr[i]) !== 0) {\n      sum += arr[i];\n      count++;\n    }\n  }\n  if (count) avr = sum / count;\n  return +avr.toFixed(2);\n}",
  "openTest": "it('Created function averageDes', () => {\n  expect(averageDes).to.be.a('function');\n});\n\nit(\"averageDes([1.1, 1.2, 1.3, 1.4]) should return 1.25\", () => {\n  expect(averageDes([1.1, 1.2, 1.3, 1.4])).to.equal(1.25);\n});\n\nit(\"averageDes([1, 2, 3]) should return 0\", () => {\n  expect(averageDes([1, 2, 3])).to.equal(0);\n});\n\nit(\"averageDes([3.5, 7.1, -3.5, -7.1]) should return 0\", () => {\n  expect(averageDes([3.5, 7.1, -3.5, -7.1])).to.equal(0);\n});\n\nit(\"averageDes([0.8, 12.1, -0.8]) should return 4.03\", () => {\n  expect(averageDes([0.8, 12.1, -0.8])).to.equal(4.03);\n});\n\nit(\"averageDes([12.5, 7.5]) should return 10\", () => {\n  expect(averageDes([12.5, 7.5])).to.equal(10);\n});\n\nit(\"averageDes([3.7, -8.3]) should return -2.3\", () => {\n  expect(averageDes([3.7, -8.3])).to.equal(-2.3);\n});\n\nit(\"averageDes([]) should return 'Array is empty'\", () => {\n  expect(averageDes([])).to.equal('Array is empty');\n});\n\nit(\"averageDes([3.5, 2, 7.3, -2.1, -4]) should return 2.9\", () => {\n  expect(averageDes([3.5, 2, 7.3, -2.1, -4])).to.equal(2.9);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}