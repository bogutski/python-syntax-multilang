{
  "name": "Arithmetic mean of the numbers in the array",
  "questions": {
    "0": {
      "name": "What does it mean to find the arithmetic mean of the numbers for the array below?",
      "description": "```javascript\nconst arr = [1, '2', 3, NaN, 'four', 5, true];\n```",
      "variants": {
        "0": {
          "name": "Add up all the elements of the array and divide by their number"
        },
        "1": {
          "name": "Add up the elements of an array with data type number, and divide them by the number of all elements in the array"
        },
        "2": {
          "name": "Add up only the numeric elements of the array and divide by the number of these elements"
        },
        "3": {
          "name": "Add only the numeric elements of the array and divide by the number of all elements in the array"
        }
      }
    },
    "1": {
      "name": "What is the result of running the code below?",
      "description": "```javascript\nconst arr = [1, '2', 3, NaN, 'four', 5, true];\nlet acc = 0;\nfor (let i = 0; i < arr.length; i++) {\n  if (!Number.isNaN(+arr[i])) acc += +arr[i];\n}\nconsole.log(acc);\n```",
      "variants": {
        "0": {
          "name": "9"
        },
        "1": {
          "name": "12"
        },
        "2": {
          "name": "11"
        },
        "3": {
          "name": "NaN"
        }
      }
    },
    "2": {
      "name": "What does the condition below mean?",
      "description": "````javascript\nif(!Number.isNaN(arr[i]))\n```",
      "variants": {
        "0": {
          "name": "If the array element is not NaN"
        },
        "1": {
          "name": "If an element of the array is NaN"
        },
        "2": {
          "name": "If an array element is a number"
        },
        "3": {
          "name": "If the array element is not a number"
        }
      }
    },
    "3": {
      "name": "Select the correct result of running the code below",
      "description": "```javascript\nconst arr = [1, '2', 3, NaN, 'four', 5, true];\nlet acc = 0;\nfor (let i = 0; i < arr.length; i++) {\n  if (typeof arr[i] === 'number' && !Number.isNaN(arr[i])) {\n      acc += arr[i];\n  }\n}\nconsole.log(acc);\n\n```",
      "variants": {
        "0": {
          "name": "15"
        },
        "1": {
          "name": "12"
        },
        "2": {
          "name": "11"
        },
        "3": {
          "name": "9"
        }
      }
    },
    "4": {
      "name": "What does the condition below mean?",
      "description": "```javascript\nif(typeof arr[i] === 'number' && !Number.isNaN(arr[i]))\n```",
      "variants": {
        "0": {
          "name": "If the array element type is number and is not NaN"
        },
        "1": {
          "name": "If the array element type is number or is NaN"
        },
        "2": {
          "name": "If the array element type is not a number and is not NaN"
        },
        "3": {
          "name": "If the array element type is not a number or is NaN"
        }
      }
    },
    "5": {
      "name": "What should be added to the code to make it calculate the arithmetic mean of only the numbers in the array?",
      "description": "```javascript\nconst arr = [NaN, 3, false, -7, true, 'five', -5, '11'];\nlet acc = 0;\nfor (let i = 0; i < arr.length; i++) {\n  if(typeof arr[i] === 'number' && !Number.isNaN(arr[i])) {\n      acc += arr[i];\n  }\n}\nconsole.log(acc);\n```",
      "variants": {
        "0": {
          "name": "Print to the console the value of the variable acc divided by the length of the array"
        },
        "1": {
          "name": "After the acc variable, create a count variable that will count the number of non-numeric elements of the array"
        },
        "2": {
          "name": "After the acc variable, create a count variable that will count the number of elements in the array"
        },
        "3": {
          "name": "After the acc variable, create a count variable that counts the number of numbers in the array"
        }
      }
    },
    "6": {
      "name": "Is it true that the result of executing the code below is 3?",
      "description": "```javascript\nconst arr = [NaN, 3, false, -7, true, 'five', -5, '11'];\nlet acc = 0;\nlet count = 0;\nfor (let i = 0; i < arr.length; i++) {\n  if (typeof arr[i] === 'number' && !Number.isNaN(arr[i])) {\n      acc += arr[i];\n      count++;\n  }\n}\nconsole.log(acc / count);\n```",
      "variants": {
        "0": {
          "name": "That's right, the result will be 3"
        },
        "1": {
          "name": "Wrong, the result will be 2.5"
        },
        "2": {
          "name": "Wrong, the result will be -3"
        },
        "3": {
          "name": "Incorrect, the result is 2"
        }
      }
    },
    "7": {
      "name": "Find the error in the code below",
      "description": "```javascript\nfunction average(arr){\n  let acc = 0;\n  let count = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (typeof arr[i] === 'number' && !Number.isNaN(arr[i])) {\n      acc += arr[i];\n      count++;\n    }\n  }\n  acc / count; \n}\nconsole.log(average([NaN, 3, false, 7, true, 'five', 5, '11']));\n```",
      "variants": {
        "0": {
          "name": "Missing return before acc += arr[i]"
        },
        "1": {
          "name": "Missing return after acc / count"
        },
        "2": {
          "name": "Missing return before acc / count"
        },
        "3": {
          "name": "It is missing return before acc += arr[i] and count++"
        }
      }
    },
    "8": {
      "name": "What does the Math.round() method do in the code below?",
      "description": "```javascript\nfunction average(arr){\n  let acc = 0;\n  let count = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (typeof arr[i] === 'number' && !Number.isNaN(arr[i])) {\n      acc += arr[i];\n      count++;\n    }\n  }\n  return Math.round(acc / count); \n}\nconsole.log(average([1, -10, 100]));\n```",
      "variants": {
        "0": {
          "name": "Returns the result rounded to the nearest whole number"
        },
        "1": {
          "name": "Returns the result rounded to the nearest smaller integer"
        },
        "2": {
          "name": "Returns the result rounded to the nearest larger integer"
        },
        "3": {
          "name": "Returns the result rounded to 1 decimal place"
        }
      }
    },
    "9": {
      "name": "What will be the result of executing the code below?",
      "description": "```javascript\nfunction average(arr){\n  let acc = 0;\n  let count = 0;\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = +arr[i];\n    if (typeof arr[i] === 'number' && !Number.isNaN(arr[i])) {\n      acc += arr[i];\n      count++;\n    }\n  }\n  return acc / count; \n}\nconsole.log(average(['1', '2', '6']));\n\n```",
      "variants": {
        "0": {
          "name": "3"
        },
        "1": {
          "name": "NaN"
        },
        "2": {
          "name": "undefined"
        },
        "3": {
          "name": "'126'"
        }
      }
    }
  }
}