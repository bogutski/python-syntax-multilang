{
  "_id": "6696c2ca763f0712c198effd",
  "name": {
    "en": "",
    "ru": "Найти среднее арифметическое всех отрицательных четных чисел в массиве"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `averageNegativeEven`, которая принимает один параметр - массив чисел.\n\nМассив произвольной длины и может содержать как положительные, так и отрицательные целые числа.\n\nФункция производит подсчет суммы и количества всех отрицательных четных чисел в массиве,\nвозвращая среднее арифметическое этих чисел.\n\nЕсли массив пустой, то функция должна вернуть строку `'Array is empty'`.\n\nРезультат подсчета среднеарифметического значения должен быть округлен в `меньшую сторону`.\n\nПеред выводом результата в `return`, сделайте проверку на ноль количества отрицательных четных чисел в массиве.\n\nПример запуска функции:\n```javascript\naverageNegativeEven([-2, -34, -548, -4]); // (-2 + (-34) + (-548) + (-4)) / 4 = -147\naverageNegativeEven([-1, -13, -783]); // 0\naverageNegativeEven([-28]); // -28\naverageNegativeEven([]); // 'Array is empty'\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function averageNegativeEven(arr) {\n  if (!arr.length) return 'Array is empty';\n  let sum = 0;\n  let avr = 0;\n  let count = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] < 0 && arr[i] % 2 === 0) {\n      sum += arr[i];\n      count++;\n    }\n  }\n  if (count) avr = sum / count;\n  return Math.floor(avr);\n}",
  "openTest": "it('Created function averageNegativeEven', () => {\n  expect(averageNegativeEven).to.be.a('function');\n});\n\nit(\"averageNegativeEven([-2, -34, -548, -4]) should return -147\", () => {\n  expect(averageNegativeEven([-2, -34, -548, -4])).to.equal(-147);\n});\n\nit(\"averageNegativeEven([-1, -13, -783]) should return 0\", () => {\n  expect(averageNegativeEven([-1, -13, -783])).to.equal(0);\n});\n\nit(\"averageNegativeEven([-4, 6, -16, 18]) should return -10\", () => {\n  expect(averageNegativeEven([-4, 6, -16, 18])).to.equal(-10);\n});\n\nit(\"averageNegativeEven([-3, -20, -301, -4000]) should return -2010\", () => {\n  expect(averageNegativeEven([-3, -20, -301, -4000])).to.equal(-2010);\n});\n\nit(\"averageNegativeEven([-12, 20, 30, 18]) should return -12\", () => {\n  expect(averageNegativeEven([-12, 20, 30, 18])).to.equal(-12);\n});\n\nit(\"averageNegativeEven([-44, -2, 0]) should return -23\", () => {\n  expect(averageNegativeEven([-44, -2, 0])).to.equal(-23);\n});\n\nit(\"averageNegativeEven([-28]) should return -28\", () => {\n  expect(averageNegativeEven([-28])).to.equal(-28);\n});\n\nit(\"averageNegativeEven([]) should return 'Array is empty'\", () => {\n  expect(averageNegativeEven([])).to.equal('Array is empty');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}