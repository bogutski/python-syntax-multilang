{
  "_id": "6696c2ca763f0712c198dc93",
  "name": {
    "en": "Mr. and Mrs. Smith",
    "ru": "Мистер и миссис Смит"
  },
  "instruction": {
    "en": "Create a variable `abbreviation` and assign it the value `'Mr. & Mrs.'`\n\nCreate a second variable `lastName` and assign it the value `'Smith'`.\n\nCreate a third variable `familyName` and assign to it the value resulting from the addition of the variables `abbreviation`, space and `lastName`\n\nHere is an example that is fundamentally similar to what you need to do, but adapt it to the requirements of the task:\n```javascript\nconst firstName = 'Ivan';\nconst lastName = 'Ivanov';\nconst name = firstName + ' ' + lastName;\n```",
    "ru": "Создайте переменную `abbreviation` и присвойте ей значение `'Mr. & Mrs.'`\n\nСоздайте вторую переменную `lastName` и присвойте ей значение `'Smith'`.\n\nСоздайте третью переменную `familyName` и присвойте ей значение, получаемое в результате сложения переменных `abbreviation`, пробела и `lastName`\n\nПриведем пример, который принципиально похож на то что нужно сделать, но адаптируйте его к требованиям задачи:\n```javascript\nconst firstName = 'Ivan';\nconst lastName = 'Ivanov';\nconst name = firstName + ' ' + lastName;\n```"
  },
  "initialSolution": "",
  "completedSolution": "const abbreviation = 'Mr. & Mrs.';\nconst lastName = 'Smith';\nconst familyName = abbreviation + ' ' + lastName;",
  "openTest": "it('The `abbreviation` variable exists ', () => {\n  expect(abbreviation).not.undefined;\n});\n\nit('The `abbreviation` variable contains data type string', () => {\n  expect(abbreviation).a('string');\n});\n\nit('The `abbreviation` variable contains the value `Mr. & Mrs.`', () => {\n  expect(abbreviation).eq('Mr. & Mrs.');\n});\n\nit('The variable `lastName` exists ', () => {\n  expect(lastName).not.undefined;\n});\n\nit('Variable `lastName` contains data type string', () => {\n  expect(lastName).a('string');\n});\n\nit('The `lastName` variable contains the value `Smith`', () => {\n  expect(lastName).eq('Smith');\n});\n\nit('The variable `familyName` exists', () => {\n  expect(familyName).not.undefined;\n});\n\nit('Variable `familyName` contains data type string', () => {\n  expect(familyName).a('string');\n});\n\nit('The `familyName` variable contains `Mr. & Mrs. Smith`', () => {\n  expect(familyName).eq('Mr. & Mrs. Smith');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "```javascript\nconst abbreviation = 'Mr. & Mrs.';\nconst lastName = 'Smith';\nconst familyName = abbreviation + ' ' + lastName;\n```",
    "ru": "```javascript\nconst abbreviation = 'Mr. & Mrs.';\nconst lastName = 'Smith';\nconst familyName = abbreviation + ' ' + lastName;\n```"
  }
}