{
  "_id": "6696c2cb763f0712c198f34b",
  "name": {
    "en": "/*",
    "ru": "Сортировка чисел"
  },
  "instruction": {
    "en": "",
    "ru": "Дан массив, содержащий как положительные, так и отрицательные числа.\n\nНапишите функцию `sortNumbers`, которая перемещает все отрицательные числа в начало массива, а положительные — в его конец.\n\nЧисло 0 считается положительным для этой задачи.\n\nФункция должна возвращать новый отсортированный массив с числами.\n\nПример запуска функции:\n```javascript\nsortNumbers([-7, -1]); // [-7, -1]\nsortNumbers([2, 0, 1]); // [2, 0, 1]\nsortNumbers([3, -2, 1, -5, 0, -3]); // [-2, -5, -3, 3, 1, 0]\n```"
  },
  "initialSolution": "function sortNumbers(){\n\n}",
  "completedSolution": "function sortNumbers(arr){\n  const neg = [];\n  const pos = [];\n\n  for(let num of arr){\n    if(num < 0) neg.push(num)\n    else pos.push(num)\n  }\n\n  return [...neg, ...pos];\n}",
  "openTest": "it('Created function sortNumbers', () => {\n  expect(sortNumbers).to.be.a('function');\n});\n\nit(\"sortNumbers([3, -2, 1, -5, 0, -3]) should return [-2, -5, -3, 3, 1, 0]\", () => {\n  expect(sortNumbers([3, -2, 1, -5, 0, -3])).to.deep.equal([-2, -5, -3, 3, 1, 0]);\n});\n\nit(\"sortNumbers([-7, -1]) should return [-7, -1]\", () => {\n  expect(sortNumbers([-7, -1])).to.deep.equal([-7, -1]);\n});\n\nit(\"sortNumbers([2, 0, 1]) should return [2, 0, 1]\", () => {\n  expect(sortNumbers([2, 0, 1])).to.deep.equal([2, 0, 1]);\n});\n\nit(\"sortNumbers([]) should return an empty array\", () => {\n  expect(sortNumbers([])).to.deep.equal([]);\n});\n\nit(\"sortNumbers([0, 0, 0]) should return [0, 0, 0]\", () => {\n  expect(sortNumbers([0, 0, 0])).to.deep.equal([0, 0, 0]);\n});\n\nit(\"sortNumbers([-5, -1, -3]) should return all negative numbers in the same order\", () => {\n  expect(sortNumbers([-5, -1, -3])).to.deep.equal([-5, -1, -3]);\n});\n\nit(\"sortNumbers([3, 1, 2]) should return all positive numbers including 0 in the same order\", () => {\n  expect(sortNumbers([3, 1, 2])).to.deep.equal([3, 1, 2]);\n});\n\nit(\"should verify that sortNumbers function is defined and is a function\", () => {\n  expect(sortNumbers).to.be.a('function');\n});\n\nit(\"sortNumbers([-2, 3, -1, 0]) should start with negative numbers followed by positive and 0\", () => {\n  expect(sortNumbers([-2, 3, -1, 0])).to.deep.equal([-2, -1, 3, 0]);\n});\n\nit(\"sortNumbers([1, -2, 3, -4, 5]) should return negative numbers followed by positive numbers\", () => {\n  expect(sortNumbers([1, -2, 3, -4, 5])).to.deep.equal([-2, -4, 1, 3, 5]);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}