{
  "_id": "6696c2ca763f0712c198e7b3",
  "name": {
    "en": "Changing an array element",
    "ru": "Изменение элемента массива"
  },
  "instruction": {
    "en": "Write a function `changeElement` that takes two parameters, an array and a number.\n\nThe array is of arbitrary length and consists of numbers.\n\nIf the desired number is in the array, the function should replace it with the opposite sign.\n\nIf the desired number is not in the array, assign the value of the sought number to the value of the last element of the array.\n\nThe function should return the changed array.\n\nAn example of running the function:\n```javascript\nchangeElement([1, 2, 3, 4, 5], 3) // [1, 2, -3, 4, 5]\nchangeElement([1, 2, 3, 4, 5], 6) // [1, 2, 3, 4, 6]\nchangeElement([1, 2, 3, 4, 5, 7, 9, 13, 8], 0) // [1, 2, 3, 4, 5, 7, 9, 13, 0]\nchangeElement([1, 2, 3, 4, 5, 7, 9, 13, 8], 8) // [1, 2, 3, 4, 5, 7, 9, 13, -8]\n```",
    "ru": "Напишите функцию `changeElement`, которая принимает два параметра - массив и число.\n\nМассив произвольной длины и состоит из чисел.\n\nЕсли нужное число есть в массиве, то функция должна заменить его на противоположное по знаку.\n\nЕсли нужного числа нет в массиве, то присвойте значению последнего элемента массива значение искомого числа.\n\nФункция должна вернуть измененный массив.\n\nПример запуска функции:\n```javascript\nchangeElement([1, 2, 3, 4, 5], 3) // [1, 2, -3, 4, 5]\nchangeElement([1, 2, 3, 4, 5], 6) // [1, 2, 3, 4, 6]\nchangeElement([1, 2, 3, 4, 5, 7, 9, 13, 8], 0) // [1, 2, 3, 4, 5, 7, 9, 13, 0]\nchangeElement([1, 2, 3, 4, 5, 7, 9, 13, 8], 8) // [1, 2, 3, 4, 5, 7, 9, 13, -8]\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function changeElement(arr, num) {\n  if (arr.indexOf(num) >= 0) {\n    arr[arr.indexOf(num)] = -num\n  } else if (arr.indexOf(num) === -1) {\n    arr[arr.length - 1] = num;\n  }\n  return arr\n}",
  "openTest": "it('Created function changeElement', () => {\n  expect(changeElement).to.be.a('function');\n});\n\nit(\"changeElement([1, 2, 3, 4, 5], 3) should return [1, 2, -3, 4, 5]\", () => {\n  expect(changeElement([1, 2, 3, 4, 5], 3)).to.eql([1, 2, -3, 4, 5]);\n});\n\nit(\"changeElement([1, 2, 3, 4, 5], 6) should return [1, 2, 3, 4, 6]\", () => {\n  expect(changeElement([1, 2, 3, 4, 5], 6)).to.eql([1, 2, 3, 4, 6]);\n});\n\nit(\"changeElement([1, 2, 3, 4, 5, 7, 9, 13, 8], 0) should return [1, 2, 3, 4, 5, 7, 9, 13, 0]\", () => {\n  expect(changeElement([1, 2, 3, 4, 5, 7, 9, 13, 8], 0)).to.eql([1, 2, 3, 4, 5, 7, 9, 13, 0]);\n});\n\nit(\"changeElement([1, 2, 3, 4, 5, 7, 9, 13, 8], 8) should return [1, 2, 3, 4, 5, 7, 9, 13, -8]\", () => {\n  expect(changeElement([1, 2, 3, 4, 5, 7, 9, 13, 8], 8)).to.eql([1, 2, 3, 4, 5, 7, 9, 13, -8]);\n});\n\nit(\"changeElement([100, 200, 300, 400, 579, 130], 400) should return [100, 200, 300, -400, 579, 130]\", () => {\n  expect(changeElement([100, 200, 300, 400, 579, 130], 400)).to.eql([100, 200, 300, -400, 579, 130]);\n});\n\nit(\"changeElement([100, 200, 300, 400, 579, 130], 105) should return [100, 200, 300, 400, 579, 105]\", () => {\n  expect(changeElement([100, 200, 300, 400, 579, 130], 105)).to.eql([100, 200, 300, 400, 579, 105]);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}