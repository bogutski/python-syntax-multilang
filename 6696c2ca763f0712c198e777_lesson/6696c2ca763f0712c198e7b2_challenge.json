{
  "_id": "6696c2ca763f0712c198e7b2",
  "name": {
    "en": "Changing or repeating an element of an array",
    "ru": "Изменение или повторение элемента массива"
  },
  "instruction": {
    "en": "Write a function `repeatOrChange` that takes two parameters, an array and an element.\n\nThe array is of arbitrary length and consists of strings.\n\nAn element is a string.\n\nIf there is an element in the array, it must be repeated inside the string 5 times.\n\nFor example, if the sought element is `Ma` and it is in the array, it must change to `MaMaMaMaMa`.\n\nIf the element is not in the array, assign the value of the searched element to the first element.\n\nThe function should return the changed array.\n\nAn example of running the function:\n\n```javascript\nrepeatOrChange(['a', 'ho', 'c'], 'ho') // ['a', 'hohohohoho', 'c']\nrepeatOrChange(['a', 'b', 'c'], 'car') // ['car', 'b', 'c']\nrepeatOrChange(['2', '08', '35', '173'], '2') // ['22222', '08', '35', '173']\nrepeatOrChange(['2', '9', '35', '173'], '08') // ['08', '9', '35', '173']\n```",
    "ru": "Напишите функцию `repeatOrChange`, которая принимает два параметра - массив и элемент.\n\nМассив произвольной длины и состоит из строк.\n\nЭлемент - это строка.\n\nЕсли элемент есть в массиве, то он должен повториться внутри строки 5 раз.\n\nНапример, если искомый элемент `Ma`, и он есть в массиве, то он должен поменяться на `MaMaMaMaMa`.\n\nЕсли элемента нет в массиве, то присвойте первому элементу значение искомого элемента.\n\nФункция должна вернуть измененный массив.\n\nПример запуска функции:\n\n```javascript\nrepeatOrChange(['a', 'ho', 'c'], 'ho') // ['a', 'hohohohoho', 'c']\nrepeatOrChange(['a', 'b', 'c'], 'car') // ['car', 'b', 'c']\nrepeatOrChange(['2', '08', '35', '173'], '2') // ['22222', '08', '35', '173']\nrepeatOrChange(['2', '9', '35', '173'], '08') // ['08', '9', '35', '173']\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function repeatOrChange(arr, el) {\n  if (arr.indexOf(el) >= 0) {\n    arr[arr.indexOf(el)] = arr[arr.indexOf(el)].repeat(5)\n  } else {\n    arr[0] = el\n  }\n  return arr\n}",
  "openTest": "it('Created function repeatOrChange', () => {\n  expect(repeatOrChange).to.be.a('function');\n});\n\nit('repeatOrChange([\"a\", \"ho\", \"c\"], \"ho\") should return [\"a\", \"hohohohoho\", \"c\"]', () => {\n  expect(repeatOrChange([\"a\", \"ho\", \"c\"], \"ho\")).to.be.eql([\"a\", \"hohohohoho\", \"c\"]);\n});\n\nit('repeatOrChange([\"a\", \"b\", \"c\"], \"car\") should return [\"car\", \"b\", \"c\"]', () => {\n  expect(repeatOrChange([\"a\", \"b\", \"c\"], \"car\")).to.be.eql([\"car\", \"b\", \"c\"]);\n});\n\nit('repeatOrChange([\"2\", \"08\", \"35\", \"173\"], \"2\") should return [\"22222\", \"08\", \"35\", \"173\"]', () => {\n  expect(repeatOrChange([\"2\", \"08\", \"35\", \"173\"], \"2\")).to.be.eql([\"22222\", \"08\", \"35\", \"173\"]);\n});\n\nit('repeatOrChange([\"2\", \"08\", \"35\", \"173\"], \"08\") should return [\"2\", \"0808080808\", \"35\", \"173\"]', () => {\n  expect(repeatOrChange([\"2\", \"08\", \"35\", \"173\"], \"08\")).to.be.eql([\"2\", \"0808080808\", \"35\", \"173\"]);\n});\n\nit('repeatOrChange([\"0\", \"set\", \"go\", \"!\"], \"ready\") should return [\"ready\", \"set\", \"go\", \"!\"]', () => {\n  expect(repeatOrChange([\"0\", \"set\", \"go\", \"!\"], \"ready\")).to.be.eql([\"ready\", \"set\", \"go\", \"!\"]);\n});\n\nit('repeatOrChange([\"butter\", \"balls\", \"cactus\", \"ship\", \"hand\", \"wood\", \"spoon\"], \"umbrella\") should return [\"umbrella\", \"balls\", \"cactus\", \"ship\", \"hand\", \"wood\", \"spoon\"]', () => {\n  expect(repeatOrChange([\"butter\", \"balls\", \"cactus\", \"ship\", \"hand\", \"wood\", \"spoon\"], \"umbrella\")).to.be.eql([\"umbrella\", \"balls\", \"cactus\", \"ship\", \"hand\", \"wood\", \"spoon\"]);\n});\n\nit('repeatOrChange([\"butter\", \"balls\", \"cactus\", \"ship\", \"hand\", \"wood\", \"spoon\"], \"butter\") should return [\"butterbutterbutterbutterbutter\", \"balls\", \"cactus\", \"ship\", \"hand\", \"wood\", \"spoon\"]', () => {\n  expect(repeatOrChange([\"butter\", \"balls\", \"cactus\", \"ship\", \"hand\", \"wood\", \"spoon\"], \"butter\")).to.be.eql([\"butterbutterbutterbutterbutter\", \"balls\", \"cactus\", \"ship\", \"hand\", \"wood\", \"spoon\"]);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}