{
  "_id": "6696c2ca763f0712c198ef0f",
  "content": {
    "ru": "В этом уроке мы еще раз разберем как пройтись по элементам массива.\n\nДля этого мы будем использовать цикл for.\n\n```javascript\nconst arr = [123, 'abc', true, null, undefined, {name: 'Jack'}];\n\nfor(let i = 0; i < arr.length; i++) {\n    console.log(arr[i]);                // выводим элементы массива\n}\n// 123\n// 'abc'\n// true\n// null\n// undefined\n// {name: 'Jack'}\n```\n\nТеперь попробуем вывести каждый третий элемент массива.\n\n```javascript\nconst arr = ['one', 2, 3, 'two', 2, 3, 'three', 2, 3];\n\nfor(let i = 0; i < arr.length; i += 3) {  // изменили шаг итерации\n    console.log(arr[i]);\n}\n// 'one'\n// 'two'\n// 'three'\n```\n\nТакже, мы можем начать проходить по массиву с определенного индекса и заканчивать на определенном индексе.\n\nВ следующем примере, нам нужно вывести в консоль только середину массива, где находятся только `true`.\n\nДля этого мы изменим условие цикла следующим образом: \n\n* `let i = 2` - первоначальное значение `i` будет равно `2`, что значит, мы начнем цикл с индекса `2`.\n* `i < arr.length - 2` - цикл будет выполняться пока `длина массива - 2` будет больше `i`.\n\n```javascript\nconst arr = [false, false, true, true, true, false, false];\n\nfor(let i = 2; i < arr.length - 2; i++) {  // изменили условие цикла\n    console.log(arr[i]);\n}\n// true\n// true\n// true\n```\n\nЕсли хотите повторить материал о переборе массива, то можете вернуться к уроку:\n`Section 12` -> `Цикл for` -> `Перебор массива`\n",
    "en": "In this tutorial, we'll look again at how to walk through the elements of an array.\n\nFor this we will use the for loop.\n\n```javascript\nconst arr = [123, 'abc', true, null, undefined, {name: 'Jack'}];\n\nfor(let i = 0; i < arr.length; i++) {\n    console.log(arr[i]);                // display the array elements\n}\n// 123\n// 'abc'\n// true\n// null\n// undefined\n// {name: 'Jack'}\n```\n\nNow let's try to output every third element of the array.\n\n```javascript\nconst arr = ['one', 2, 3, 'two', 2, 3, 'three', 2, 3];\n\nfor(let i = 0; i < arr.length; i += 3) { // changed the iteration step\n    console.log(arr[i]);\n}\n// 'one'\n// 'two'\n// 'three'\n```\n\nAlso, we can start at a certain index and end at a certain index.\n\nIn the following example, we want to output to the console only the middle of the array, where only `true` is.\n\nTo do this, we change the loop condition as follows: \n\n* `let i = 2` - the initial value of `i` will be equal to `2`, which means we will start the loop with index `2`.\n* `i < arr.length - 2` - the loop will be executed until the `length of the array - 2` is greater than `i`.\n\n```javascript\nconst arr = [false, false, true, true, true, false, false];\n\nfor(let i = 2; i < arr.length - 2; i++) {  // we changed the cycle condition\n    console.log(arr[i]);\n}\n// true\n// true\n// true\n```\n\nIf you want to repeat the material about array bruteforcing, you can go back to the lesson:\n`Section 12` -> `Cycle for` -> `Array bruteforcing`\n",
    "es": "# Перебор массива language: es"
  },
  "video": {
    "ru": "https://youtu.be/giG2R7afpa8",
    "en": "",
    "es": ""
  }
}