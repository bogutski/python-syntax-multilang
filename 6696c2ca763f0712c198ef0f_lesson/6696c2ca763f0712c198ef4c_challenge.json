{
  "_id": "6696c2ca763f0712c198ef4c",
  "name": {
    "en": "Fill array elements up to 5 characters",
    "ru": "Заполнить элементы массива до 5 символов"
  },
  "instruction": {
    "en": "Write a function `fillThemUp` that takes an array of strings of different lengths.\n\nThe function should iterate through the array and check the length of each element.\n\n* If the length of the string is less than `5`, then the string should have `#` characters added to the end until the length of the string becomes `5`.\n* If the length of the string is greater than or equal to `5`, the string should remain unchanged.\n\nThe function should return a new array with all the strings.\n\nIf the array is empty, the function should return `false`.\n\n\nExamples of function calls:\n```javascript\nfillThemUp(['1', '22', '333', '4444', '55555']) // ['1####', '22###', '333##', '4444#', '55555']\nfillThemUp(['abc', 'ab', 'a', 'abcd'])          // ['abc##', 'ab###', 'a####', 'abcd#']\nfillThemUp(['a', 'b', 'c'])                     // ['a####', 'b####', 'c####']\nfillThemUp(['', '', ''])                        // ['#####', '#####', '#####']\nfillThemUp([])                                  // false\n```",
    "ru": "Напишите функцию `fillThemUp`, которая принимает массив строк разной длинны.\n\nФункция должна пройтись по массиву и проверить длину каждого элемента.\n\n* Если длина строки меньше `5`, то в конец строки должны быть добавлены символы `#`, до тех пор пока длина строки не\n станет равна `5`.\n* Если длина строки больше или равна `5` то строка должна остаться без изменений.\n\nФункция должна вернуть новый массив со всеми строками.\n\nЕсли массив пустой, то функция должна вернуть `false`.\n\n\nПримеры запуска функции:\n```javascript\nfillThemUp(['1', '22', '333', '4444', '55555']) // ['1####', '22###', '333##', '4444#', '55555']\nfillThemUp(['abc', 'ab', 'a', 'abcd'])          // ['abc##', 'ab###', 'a####', 'abcd#']\nfillThemUp(['a', 'b', 'c'])                     // ['a####', 'b####', 'c####']\nfillThemUp(['', '', ''])                        // ['#####', '#####', '#####']\nfillThemUp([])                                  // false\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function fillThemUp(arr){\n  if (!arr.length) return false;\n  const newArr = [];\n\n  for(let i = 0; i < arr.length; i++){\n    if (arr[i].length < 5){\n      let length = arr[i].length;\n\n      for(let j = 0; j < 5 - length; j++){\n        arr[i] += '#';\n      }\n\n    }\n    newArr.push(arr[i]);\n  }\n  return newArr;\n}",
  "openTest": "it('Created function fillThemUp', () => {\n  expect(fillThemUp).to.be.a('function');\n});\n\nit(\"fillThemUp(['1', '22', '333', '4444', '55555', '666666']) should return ['1####', '22###', '333##', '4444#', '55555', '666666']\", () => {\n  expect(fillThemUp(['1', '22', '333', '4444', '55555', '666666'])).to.be.eql(['1####', '22###', '333##', '4444#', '55555', '666666']);\n});\n\nit(\"fillThemUp(['abc', 'ab', 'a', 'abcd', 'abcde', 'abcdef']) should return ['abc##', 'ab###', 'a####', 'abcd#', 'abcde', 'abcdef']\", () => {\n  expect(fillThemUp(['abc', 'ab', 'a', 'abcd', 'abcde', 'abcdef'])).to.be.eql(['abc##', 'ab###', 'a####', 'abcd#', 'abcde', 'abcdef']);\n});\n\nit(\"fillThemUp(['a', 'b', 'c']) should return ['a####', 'b####', 'c####']\", () => {\n  expect(fillThemUp(['a', 'b', 'c'])).to.be.eql(['a####', 'b####', 'c####']);\n});\n\nit(\"fillThemUp(['test', 'car', 'a', 'flower', '888', '']) should return ['test#', 'car##', 'a####', 'flower', '888##', '#####']\", () => {\n  expect(fillThemUp(['test', 'car', 'a', 'flower', '888', ''])).to.be.eql(['test#', 'car##', 'a####', 'flower', '888##', '#####']);\n});\n\nit(\"fillThemUp(['', '', '']) should return ['#####', '#####', '#####']\", () => {\n  expect(fillThemUp(['', '', ''])).to.be.eql(['#####', '#####', '#####']);\n});\n\nit(\"fillThemUp([]) should return false\", () => {\n  expect(fillThemUp([])).to.be.false;\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}