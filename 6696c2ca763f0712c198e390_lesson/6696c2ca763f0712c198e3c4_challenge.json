{
  "_id": "6696c2ca763f0712c198e3c4",
  "name": {
    "en": "",
    "ru": "Отсортировать 2 строки по длине"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `sortStringsByLength`, которая принимает две строки и возвращает строку, где первая строка будет короче, а вторая длиннее.\n\nПримеры запуска функции:\n```javascript\nsortStringsByLength('aaa', 'aa'); // 'aa, aaa'\nsortStringsByLength('aa', 'aaa'); // 'aa, aaa'\n\nsortStringsByLength('aaa', ''); // ', aaa'\nsortStringsByLength('', 'aaa'); // ', aaa'\n\nsortStringsByLength('aaa', 'bbb'); // 'aaa, bbb'\nsortStringsByLength('bbb', 'aaa'); // 'bbb, aaa'\n```\n\nЕсли строки одинаковой длины, то возвращаем их в том порядке, в котором они были переданы в функцию."
  },
  "initialSolution": "fun",
  "completedSolution": "function sortStringsByLength(str1, str2) {\n  if (str1.length <= str2.length) {\n    return `${str1}, ${str2}`;\n  }\n  return `${str2}, ${str1}`;\n}",
  "openTest": "it('Created function sortStringsByLength', () => {\n  expect(sortStringsByLength).to.be.a('function');\n});\n\nit('sortStringsByLength(\"aaa\", \"aa\") should return \"aa, aaa\"', () => {\n  expect(sortStringsByLength('aaa', 'aa')).to.equal('aa, aaa');\n});\n\nit('sortStringsByLength(\"aaa\", \"bbbbb\") should return \"aaa, bbbbb\"', () => {\n  expect(sortStringsByLength('aaa', 'bbbbb')).to.equal('aaa, bbbbb');\n});\n\nit('sortStringsByLength(\"\", \"qqq\") should return \", qqq\"', () => {\n  expect(sortStringsByLength('', 'qqq')).to.equal(', qqq');\n});\n\nit('sortStringsByLength(\"qqq\", \"\") should return \", qqq\"', () => {\n  expect(sortStringsByLength('qqq', '')).to.equal(', qqq');\n});\n\nit('sortStringsByLength(\"aaa\", \"bbb\") should return \"aaa, bbb\"', () => {\n  expect(sortStringsByLength('aaa', 'bbb')).to.equal('aaa, bbb');\n});\n\nit('sortStringsByLength(\"bbb\", \"aaa\") should return \"bbb, aaa\"', () => {\n  expect(sortStringsByLength('bbb', 'aaa')).to.equal('bbb, aaa');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}