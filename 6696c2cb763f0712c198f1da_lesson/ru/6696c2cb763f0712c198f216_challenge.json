{
  "name": "Разделить массив на 2 подмассива с одинаковой суммой элементов",
  "instruction": "Исправьте ошибки в коде, чтобы функция `splitByEqualSum` работала правильно.\n\nФункция `splitByEqualSum` принимает целочисленный массив и должна вернуть массив из двух подмассивов, сумма чисел в которых равна.\nЕсли такого разделения не существует или в функцию передан пустой массив, то функция должна вернуть пустой массив.\n\nДля решения задачи суммируйте элементы массива в том порядке, как они идут в массиве.\nВ цикле двигаясь по массиву слева направо, вычисляйте суммы элементов в левой и правой частях и сравнивайте их.\nЕсли суммы равны, запомните индекс места, где это произошло, и разделите массив на две части по этому индексу.\n\nПримеры вызовов:\n```javascript\nsplitByEqualSum([1, 2, 3, 4, 5, 5]) // [[1, 2, 3, 4], [5, 5]] => 10 === 10\nsplitByEqualSum([-1, 2, 3, -4, 5]) // [[-1, 2, 3, -4], [ 5]] => 5 === 5\nsplitByEqualSum([1, 2, 3, 4]) // [] => разделение невозможно\n```\n\nВ решении допущено несколько небольших ошибок, найдите и исправьте их.\n\nРазберите примеры и алгоритм решения, проверьте свое решение на других значениях.\n\nЭто одна из задач, которые могут попасться на собеседовании.\nПриведенный алгоритм - не единственный способ решения этой задачи, но он простой и понятный.\nМожете подумать, как можно его оптимизировать.\n\nДругой вариант этой задачи, который может попасться на интервью: разделить массив на три части так, чтобы сумма элементов в левой части была меньше суммы элементов в центральной части, а сумма элементов в центральной части была меньше суммы элементов в правой части.",
  "instructions": {}
}