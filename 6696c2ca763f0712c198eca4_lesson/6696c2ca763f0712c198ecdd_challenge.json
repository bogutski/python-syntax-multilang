{
  "_id": "6696c2ca763f0712c198ecdd",
  "name": {
    "en": "Execute the command above the line",
    "ru": "Выполнить команду над строкой"
  },
  "instruction": {
    "en": "Write a function `stringAndCommand` that takes two arguments: a string and a command.\n\nThe command can be of two kinds:\n* `'countUpperCase'` - count the number of uppercase characters in the string.\n* `'countLowerCase'` - count the number of lowercase characters in a string.\n\nThe function must return a string of the form: `Command: ${command}, result: ${count}`.\n\nIf the string is empty, it should return `'String is empty'`.\n\nThe string will contain only letters.\n\n\nExamples of running the function:\n```javascript\nstringAndCommand('', 'countLowerCase'); // 'String is empty'\nstringAndCommand('sun', 'countUpperCase'); // 'Command: countUpperCase, result: 0'\nstringAndCommand('HelloWorld', 'countLowerCase'); // 'Command: countLowerCase, result: 8'\nstringAndCommand('JAVAscript', 'countUpperCase'); // 'Command: countUpperCase, result: 4'\n```",
    "ru": "Напишите функцию `stringAndCommand`, которая принимает два аргумента: строку и команду.\n\nКоманда может быть двух видов:\n* `'countUpperCase'` - подсчитать количество символов в верхнем регистре в строке.\n* `'countLowerCase'` - подсчитать количество символов в нижнем регистре в строке.\n\nФункция должна вернуть строку вида: `Command: ${command}, result: ${count}`.\n\nЕсли строка пустая, то вернуть `'String is empty'`.\n\nВ строке будут только буквы.\n\n\nПримеры запуска функции:\n```javascript\nstringAndCommand('', 'countLowerCase');           // 'String is empty'\nstringAndCommand('sun', 'countUpperCase');        // 'Command: countUpperCase, result: 0'\nstringAndCommand('HelloWorld', 'countLowerCase'); // 'Command: countLowerCase, result: 8'\nstringAndCommand('JAVAscript', 'countUpperCase'); // 'Command: countUpperCase, result: 4'\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function stringAndCommand(str, command){\n  if(str.length === 0) return 'String is empty';\n  let count = 0;\n  if(command === 'countUpperCase'){\n    for(let i = 0; i < str.length; i++){\n      if(str[i] === str[i].toUpperCase()) count++;\n    }\n  } else if(command === 'countLowerCase'){\n    for(let i = 0; i < str.length; i++){\n      if(str[i] === str[i].toLowerCase()) count++;\n    }\n  }\n  return `Command: ${command}, result: ${count}`;\n}",
  "openTest": "it('Created function stringAndCommand', () => {\n  expect(stringAndCommand).to.be.a('function');\n});\n\nit(\"stringAndCommand('HelloWorld', 'countLowerCase') returns 'Command: countLowerCase, result: 8'\", () => {\n  expect(stringAndCommand('HelloWorld', 'countLowerCase')).to.equal('Command: countLowerCase, result: 8');\n});\n\nit(\"stringAndCommand('HelloWorld', 'countUpperCase') returns 'Command: countUpperCase, result: 2'\", () => {\n  expect(stringAndCommand('HelloWorld', 'countUpperCase')).to.equal('Command: countUpperCase, result: 2');\n});\n\nit(\"stringAndCommand('JAVAscript', 'countUpperCase') returns 'Command: countUpperCase, result: 4'\", () => {\n  expect(stringAndCommand('JAVAscript', 'countUpperCase')).to.equal('Command: countUpperCase, result: 4');\n});\n\nit(\"stringAndCommand('JAVAscript', 'countLowerCase') returns 'Command: countLowerCase, result: 6'\", () => {\n  expect(stringAndCommand('JAVAscript', 'countLowerCase')).to.equal('Command: countLowerCase, result: 6');\n});\n\nit(\"stringAndCommand('MOON', 'countLowerCase') returns 'Command: countLowerCase, result: 0'\", () => {\n  expect(stringAndCommand('MOON', 'countLowerCase')).to.equal('Command: countLowerCase, result: 0');\n});\n\nit(\"stringAndCommand('sun', 'countUpperCase') returns 'Command: countUpperCase, result: 0'\", () => {\n  expect(stringAndCommand('sun', 'countUpperCase')).to.equal('Command: countUpperCase, result: 0');\n});\n\nit(\"stringAndCommand('', 'countUpperCase') returns 'String is empty'\", () => {\n  expect(stringAndCommand('', 'countUpperCase')).to.equal('String is empty');\n});\n\nit(\"stringAndCommand('', 'countLowerCase') returns 'String is empty'\", () => {\n  expect(stringAndCommand('', 'countLowerCase')).to.equal('String is empty');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}