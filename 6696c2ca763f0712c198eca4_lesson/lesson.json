{
  "_id": "6696c2ca763f0712c198eca4",
  "content": {
    "ru": "### Посчитать количество заглавных и строчных букв в строке\n\nРассмотрим пример:\n```javascript\nconst str = 'Hello Coding JS!';\n```\nВ строке выше мы имеем 4 буквы в верхнем регистре и 9 в нижнем.\n\nДавайте напишем код, чтобы получить результат в виде\n`U:4 L:9`\nСначала посчитаем количество букв в верхнем регистре.\n\nУ нас нет никаких встроенных функций для определения регистра, поэтому мы возьмем символ,\nпереведем его в нижний регистр и если переведенная буква не равна исходной, то исходная буква была в\nверхнем регистре. Если они равны, то значит буква и была изначально в нижнем регистре.\n\nДавайте проверим эту гипотезу:\n```javascript\nlet upper = 0, lower = 0 \n// введем счетчики. Переменная `upper` будет считать заглавные буквы, `lower` - строчные буквы. Первоначальное значение счетчиков равно нулю.\n\nfor (let i = 0; i < str.length; i++){              // создаем цикл по строке\n  if(str[i].toUpperCase() === str[i]) upper++      // если символ переведенный в верхний регистр равен самому символу, то это заглавная буква и увеличиваем счетчик\n   else lower ++                                   // иначе увеличиваем счетчик строчных букв\n}\n\nconsole.log(upper, lower)\n// 7 9\n```\nПолучили, что заглавных букв 7, хотя на самом деле их 4. Количество строчных букв - правильное.\nДавайте подумаем почему?\n\nПричина в том, что мы переводим не только буквы, а вообще любые символы. Пробел, переведенный в верхний регистр никак не трансформируется и равен\nсамому пробелу. Значит счетчик увеличился, когда цикл дошел до пробела.\n\nДавайте попробуем сделать какую-то проверку, чтобы вообще знать у нас конвертируется куда-то символ или нет:\n```\n// H - h\n// h - H\n// @ - @\n```\n```javascript\nconst str = 'Hello !';\nlet upper = 0, lower = 0 \n\nfor (let i = 0; i < str.length; i++){              \n  if(str[i].toUpperCase() === str[i] && str[i].toLowerCase() !== str[i]) upper++   \n  // мы задали условие, если перевести символ в верхний регистр, то он равен себе до трансформации\n  // и этот же символ переведенный в нижний регистр не равен себе до трансформации (предполагаем, что мы работаем с заглавной буквой)  \n   else lower ++                                   \n}\n\nconsole.log(upper, lower)\n// 1 6\n```\nПолучили, что буквы верхнего регистра считаются правильно, а нижнего - нет.\n\nДавайте подумаем, как это исправить.\n\nМожет быть вместо `else` написать второй `if`\n```javascript\nconst str = 'Hello JS !';\nlet upper = 0, lower = 0 \n\nfor (let i = 0; i < str.length; i++){              \n  if(str[i].toUpperCase() === str[i] && str[i].toLowerCase() !== str[i]) upper++   \n  if(str[i].toUpperCase() !== str[i]) lower++\n}\n\nconsole.log(upper, lower)\n// 3 4\n```\nВо втором условии `if` нам хватило только одной проверки, чтобы получить правильный результат.\n\nМожет быть нам тогда и первое условие стоит упростить?\n```javascript\nconst str = 'Hello JS !';\nlet upper = 0, lower = 0 \n\nfor (let i = 0; i < str.length; i++){              \n  if(str[i].toLowerCase() !== str[i]) upper++   \n  if(str[i].toUpperCase() !== str[i]) lower++\n}\n\nconsole.log(upper, lower)\n// 3 4\n```\n\nВсё правильно работает! То есть этот вариант покрывает все случаи: и когда в строку приходят заглавные и строчные буквы,\nи пробелы, и какие-то символы.\n\nНа примере этой задачи мы попробовали выстроить логику, как можно прийти к решению той или иной задачи, даже если\nмы не знаем как ее решать. И получив решение, как можно оптимизировать код.",
    "en": "### Count the number of uppercase and lowercase letters in the string\n\nLet's look at an example:\n```javascript\nconst str = 'Hello Coding JS!';\n```\nIn the line above we have 4 letters in upper case and 9 in lower case.\n\nLet's write the code to get the result as\n`U:4 L:9`.\nFirst let's count the number of letters in uppercase.\n\nWe don't have any built-in functions to determine case, so we take a character,\nconvert it to lower case and if the converted letter is not equal to the original letter, then the original letter was in\nupper case. If they are equal, then the letter was originally in lower case.\n\nLet's test this hypothesis:\n```javascript\nlet upper = 0, lower = 0 \n// let's introduce counters. The variable `upper` will count uppercase letters, `lower` - lowercase letters. The initial value of the counters is zero.\n\nfor (let i = 0; i < str.length; i++){ // create a loop over the string\n  if(str[i].toUpperCase() === str[i]) upper++ // if the uppercase character is equal to the character itself, it is a capital letter and the counter is incremented\n   else lower + + // otherwise increment the lowercase counter\n}\n\nconsole.log(upper, lower)\n// 7 9\n```\nWe got that there are 7 capital letters, although in fact there are 4. The number of lowercase letters is correct.\nLet's think why?\n\nThe reason is that we translate not only letters, but any characters at all. A space converted to uppercase is not transformed in any way and is equal to\nto the space itself. So the counter increased when the loop reached the space.\n\nLet's try to do some kind of check to know whether or not we are converting a character somewhere:\n```\n// H - h\n// h - H\n// @ - @\n```\n```javascript\nconst str = 'Hello !';\nlet upper = 0, lower = 0\n\nfor (let i = 0; i < str.length; i++){     \n  if(str[i].toUpperCase() === str[i] && str[i].toLowerCase() !== str[i]) upper++   \n  // we have specified the condition that if we translate a character into upper case, it is equal to itself before the transformation\n  // and the same character converted to lower case is not equal to itself before the transformation (we assume that we are working with a capital letter)  \n   else lower ++  \n}\n\nconsole.log(upper, lower)\n// 1 6\n```\nWe got that the upper case letters are counted correctly, but the lower case letters are not.\n\nLet's think about how to fix it.\n\nMaybe instead of `else` write a second `if`\n```javascript\nconst str = 'Hello JS !';\nlet upper = 0, lower = 0 \n\nfor (let i = 0; i < str.length; i++){              \n  if(str[i].toUpperCase() === str[i] && str[i].toLowerCase() !== str[i]) upper++   \n  if(str[i].toUpperCase() !== str[i]) lower++\n}\n\nconsole.log(upper, lower)\n// 3 4\n```\nIn the second `if` condition, we only needed one check to get the correct result.\n\nMaybe we should simplify the first condition, too.\n```javascript\nconst str = 'Hello JS !';\nlet upper = 0, lower = 0 \n\nfor (let i = 0; i < str.length; i++){              \n  if(str[i].toLowerCase() !== str[i]) upper++   \n  if(str[i].toUpperCase() !== str[i]) lower++\n}\n\nconsole.log(upper, lower)\n// 3 4\n```\n\nEverything works correctly! That is, this variant covers all cases: when upper and lower case letters come into the string,\nand spaces, and some symbols.\n\nUsing this problem as an example, we have tried to build a logic for how we can arrive at a solution to a problem, even if\nwe don't know how to solve it. And having got the solution, how we can optimize the code.",
    "es": "# Посчитать количество заглавных и строчных букв в строке language: es"
  },
  "video": {
    "ru": "https://youtu.be/Zgnq8YhZRDY",
    "en": "",
    "es": ""
  }
}