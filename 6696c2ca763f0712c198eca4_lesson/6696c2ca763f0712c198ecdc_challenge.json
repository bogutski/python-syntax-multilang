{
  "_id": "6696c2ca763f0712c198ecdc",
  "name": {
    "en": "Which line has more capital letters?",
    "ru": "В какой строке больше заглавных букв?"
  },
  "instruction": {
    "en": "Write a function `twoStringsBattle` that takes two strings.\n\nThe function should count how many capital letters are in the first and second lines and return a string of the form:\n\n* `${str1} has won with number of ${countStr1}` - if the first line has more capital letters\n* `${str2} has won with number of ${countStr2}` - if the second line has more capital letters\n* `Draw` - if the number of capital letters in both lines is equal or the lines are empty\n\nBefore the loop, check which line is longer and use its length in the loop.\n\n\nExamples of function execute:\n```javascript\ntwoStringsBattle('AAA', 'Hello'); // 'AAA has won with number of 3'\ntwoStringsBattle('', 'aBc'); // 'aBc has won with number of 1'\ntwoStringsBattle('', ''); // 'Draw'\n```",
    "ru": "Напишите функцию `twoStringsBattle`, которая принимает две строки.\n\nФункция должна посчитать сколько заглавных букв в первой и второй строке и вернуть строку вида:\n\n* `${str1} has won with number of ${countStr1}` - если в первой строке больше заглавных букв\n* `${str2} has won with number of ${countStr2}` - если во второй строке больше заглавных букв\n* `Draw` - если количество заглавных букв в обеих строках равно или строки пустые\n\nПеред циклом проверьте какая строка длиннее и используйте ее длину в цикле.\n\n\nПримеры запуска функции:\n```javascript\ntwoStringsBattle('AAA', 'Hello'); // 'AAA has won with number of 3'\ntwoStringsBattle('', 'aBc'); // 'aBc has won with number of 1'\ntwoStringsBattle('', ''); // 'Draw'\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function twoStringsBattle(str1, str2){\n  let countStr1 = 0;\n  let countStr2 = 0;\n  let length = str1.length > str2.length ? str1.length : str2.length;\n  for(let i = 0; i < length; i++){\n    if(str1[i] !== undefined && str1[i] === str1[i].toUpperCase()) countStr1++;\n    if(str2[i] !== undefined && str2[i] === str2[i].toUpperCase()) countStr2++;\n  }\n  if(countStr1 > countStr2) return `${str1} has won with number of ${countStr1}`;\n  if(countStr1 < countStr2) return `${str2} has won with number of ${countStr2}`;\n  else return 'Draw';\n}",
  "openTest": "it('Created function twoStringsBattle', () => {\n  expect(twoStringsBattle).to.be.a('function');\n});\n\nit(\"twoStringsBattle('HellO', 'WorLD') returns 'WorLD has won with number of 3'\", () => {\n  expect(twoStringsBattle('HellO', 'WorLD')).to.be.equal('WorLD has won with number of 3');\n});\n\nit(\"twoStringsBattle('AAA', 'Hello') returns 'AAA has won with number of 3'\", () => {\n  expect(twoStringsBattle('AAA', 'Hello')).to.be.equal('AAA has won with number of 3');\n});\n\nit(\"twoStringsBattle('aBcfwfWAffeDeF', 'aBcDDeFEesdlkfJ') returns 'aBcDDeFEesdlkfJ has won with number of 6'\", () => {\n  expect(twoStringsBattle('aBcfwfWAffeDeF', 'aBcDDeFEesdlkfJ')).to.be.equal('aBcDDeFEesdlkfJ has won with number of 6');\n});\n\nit(\"twoStringsBattle('', 'abc') returns 'Draw'\", () => {\n  expect(twoStringsBattle('', 'abc')).to.be.equal('Draw');\n});\n\nit(\"twoStringsBattle('abc', '') returns 'Draw'\", () => {\n  expect(twoStringsBattle('abc', '')).to.be.equal('Draw');\n});\n\nit(\"twoStringsBattle('', '') returns 'Draw'\", () => {\n  expect(twoStringsBattle('', '')).to.be.equal('Draw');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}