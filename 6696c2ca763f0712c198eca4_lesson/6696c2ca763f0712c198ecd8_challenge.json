{
  "_id": "6696c2ca763f0712c198ecd8",
  "name": {
    "en": "Find letters in lowercase and uppercase",
    "ru": "Найти буквы в нижнем и верхнем регистре"
  },
  "instruction": {
    "en": "Write a function `strOfLowerAndUpperCase` that takes a string.\n\nCreate a loop that goes through the string and writes all the uppercase letters in one variable and all the lowercase letters in another.\n\n* If the string is empty, return the string 'string is empty'.\n* If there are no uppercase letters in the string, return the string with lowercase letters\n* If there are no lowercase letters in the string, return the string with capital letters\n* If the string has both uppercase and lowercase letters, return the string with both uppercase and lowercase letters separated by a space\n\nOnly letters will be passed to the function.\n\n\nAn example of running the function:\n```javascript\nstrOfLowerAndUpperCase('lowerCASE') // 'lower CASE'\nstrOfLowerAndUpperCase('UPPERCASE') // 'UPPERCASE'\nstrOfLowerAndUpperCase('alllower') // 'alllower'\nstrOfLowerAndUpperCase('') // 'string is empty'\n```",
    "ru": "Напишите функцию `strOfLowerAndUpperCase`, которая принимает строку.\n\nСоздайте цикл, который пройдется по строке и запишет все заглавные буквы в одну переменную, а все строчные в другую.\n\n* Если строка пустая, то верните строку 'string is empty'\n* Если в строке нет заглавных букв, то верните строку со строчными буквами\n* Если в строке нет строчных букв, то верните строку с заглавными буквами\n* Если в строке есть заглавные и строчные буквы, то верните строку со строчными и заглавными буквами через пробел\n\nВ функцию будут передаваться только буквы.\n\n\nПример запуска функции:\n```javascript\nstrOfLowerAndUpperCase('lowerCASE') // 'lower CASE'\nstrOfLowerAndUpperCase('UPPERCASE') // 'UPPERCASE'\nstrOfLowerAndUpperCase('alllower') // 'alllower'\nstrOfLowerAndUpperCase('') // 'string is empty'\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function strOfLowerAndUpperCase(str){\n    if(str.length === 0) return 'string is empty'\n    let lowerCase = '';\n    let upperCase = '';\n    for (let i = 0; i < str.length; i++){\n        if (str[i] === str[i].toLowerCase()) lowerCase += str[i]\n        else upperCase += str[i]\n    }\n    if(lowerCase.length === 0) return upperCase\n    if(upperCase.length === 0) return lowerCase\n    return lowerCase + ' ' + upperCase\n}",
  "openTest": "it('Created function strOfLowerAndUpperCase', () => {\n  expect(strOfLowerAndUpperCase).to.be.a('function');\n});\n\nit(\"strOfLowerAndUpperCase('lowerCASE') returns 'lower CASE'\", () => {\n  expect(strOfLowerAndUpperCase('lowerCASE')).to.equal('lower CASE');\n});\n\nit(\"strOfLowerAndUpperCase('UPPERcase') returns 'case UPPER'\", () => {\n  expect(strOfLowerAndUpperCase('UPPERcase')).to.equal('case UPPER');\n});\n\nit(\"strOfLowerAndUpperCase('ALLCAPS') returns 'ALLCAPS'\", () => {\n  expect(strOfLowerAndUpperCase('ALLCAPS')).to.equal('ALLCAPS');\n});\n\nit(\"strOfLowerAndUpperCase('alllower') returns 'alllower'\", () => {\n  expect(strOfLowerAndUpperCase('alllower')).to.equal('alllower');\n});\n\nit(\"strOfLowerAndUpperCase('mIxEdCase') returns 'mxdase IEC'\", () => {\n  expect(strOfLowerAndUpperCase('mIxEdCase')).to.equal('mxdase IEC');\n});\n\nit(\"strOfLowerAndUpperCase('') returns 'string is empty'\", () => {\n  expect(strOfLowerAndUpperCase('')).to.equal('string is empty');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}