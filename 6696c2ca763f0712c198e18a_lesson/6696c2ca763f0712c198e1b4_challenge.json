{
  "_id": "6696c2ca763f0712c198e1b4",
  "name": {
    "en": "Counting the most profitable pizza again",
    "ru": "Опять считаем самую выгодную пиццу"
  },
  "instruction": {
    "en": "The function `pizzaCompetition` takes:\n- `pizza1Name` - the name of the first pizza\n- `pizza1Price` - the price of the first pizza\n- `pizza1Diameter` - the diameter of the first pizza in inches\n\n- `pizza2Name` - the name of the second pizza\n- `pizza2Price` - the price of the second pizza\n- `pizza2Diameter` - the diameter of the second pizza in inches\n\nThe function should return a string in the format `MarioPizza cheaper than LuigiPizza.`\n\nAs you understood from the example, the name of the cheaper pizza should be at the beginning of the string.\n\nIf the pizzas cost the same, then return the string `Both pizzas are equally cheap.`\n\nTo calculate the area of the pizza, use the formula for the area of a circle. PI = 3.14\n\nCompare the cost of the pizza based on the price per square inch.",
    "ru": "Функция `pizzaCompetition` принимает:\n- `pizza1Name` - название первой пиццы\n- `pizza1Price` - цену первой пиццы\n- `pizza1Diameter` - диаметр первой пиццы в дюймах\n\n- `pizza2Name` - название второй пиццы\n- `pizza2Price` - цену второй пиццы\n- `pizza2Diameter` - диаметр второй пиццы в дюймах\n\nФункция должна вернуть строку вида `MarioPizza cheaper than LuigiPizza.`\n\nКак вы поняли из примера, в начале строки должно быть название пиццы, которая дешевле.\n\nЕсли пиццы стоят одинаково, то возвращаем строку `Both pizzas are equally cheap.`\n\nДля расчета площади пиццы используйте формулу площади круга. PI = 3.14\n\nСравниваем стоимость пиццы по цене за квадратный дюйм."
  },
  "initialSolution": "fun",
  "completedSolution": "function pizzaCompetition(pizza1Name, pizza1Price, pizza1Diameter, pizza2Name, pizza2Price, pizza2Diameter) {\n  const pizza1Area = 3.14 * (pizza1Diameter / 2) ** 2;\n  const pizza2Area = 3.14 * (pizza2Diameter / 2) ** 2;\n\n  const pizza1PricePerInch = pizza1Price / pizza1Area;\n  const pizza2PricePerInch = pizza2Price / pizza2Area;\n\n  if (pizza1PricePerInch === pizza2PricePerInch) {\n    return 'Both pizzas are equally cheap.';\n  }\n\n  const winner = pizza1PricePerInch < pizza2PricePerInch ? pizza1Name : pizza2Name;\n  const loser =  pizza1PricePerInch < pizza2PricePerInch ? pizza2Name : pizza1Name;\n\n  return `${winner} cheaper than ${loser}.`;\n}",
  "openTest": "it('Created function pizzaCompetition', () => {\n  expect(pizzaCompetition).to.be.a('function');\n});\n\nit('pizzaCompetition(\"MarioPizza\", 100, 10, \"LuigiPizza\", 100, 10) should return \"Both pizzas are equally cheap.\"', () => {\n  expect(pizzaCompetition(\"MarioPizza\", 100, 10, \"LuigiPizza\", 100, 10)).to.equal(\"Both pizzas are equally cheap.\");\n} );\n\nit('pizzaCompetition(\"MarioPizza\", 100, 10, \"LuigiPizza\", 200, 10) should return \"MarioPizza cheaper than LuigiPizza.\"', () => {\n  expect(pizzaCompetition(\"MarioPizza\", 100, 10, \"LuigiPizza\", 200, 10)).to.equal(\"MarioPizza cheaper than LuigiPizza.\");\n} );\n\nit('pizzaCompetition(\"MarioPizza\", 100, 10, \"LuigiPizza\", 200, 20) should return \"LuigiPizza cheaper than MarioPizza.\"', () => {\n  expect(pizzaCompetition(\"MarioPizza\", 100, 10, \"LuigiPizza\", 200, 20)).to.equal(\"LuigiPizza cheaper than MarioPizza.\");\n} );\n\nit('pizzaCompetition(\"MarioPizza\", 100, 10, \"LuigiPizza\", 200, 5) should return \"MarioPizza cheaper than LuigiPizza.\"', () => {\n  expect(pizzaCompetition(\"MarioPizza\", 100, 10, \"LuigiPizza\", 200, 5)).to.equal(\"MarioPizza cheaper than LuigiPizza.\");\n} );",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}