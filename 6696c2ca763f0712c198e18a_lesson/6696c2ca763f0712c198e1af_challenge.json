{
  "_id": "6696c2ca763f0712c198e1af",
  "name": {
    "en": "Distribution of children by grade at school by age",
    "ru": "Распределение детей по классам в школе по возрасту"
  },
  "instruction": {
    "en": "Write a function `getSchoolClass` that helps you assign children to classes in the school by age.\n\nThe function takes the age of the child and returns the number of the class the child should be in.\n\n* If the age is less than 6 years old, it returns the string `Kindergarten`.\n* If the age is between 6 and 7 years old, we return the string `1st grade`.\n* If the age is between 7 and 8 years old, the string `2nd grade` is returned.\n* If age 8 to 9, return the string `3rd grade`.\n* If age 9 and up, return the string `4th grade or higher`.\n\nA similar example:\n```javascript\nfunction getLevel(altitude) {\nif (altitude < 1000) {\nreturn 'low level';\n} else if (altitude < 5000) {\nreturn 'mid level';\n} else {\nreturn 'high level';\n}\n}\n```",
    "ru": "Напишите функцию `getSchoolClass`, которая поможет распределить детей по классам в школе по возрасту.\n\nФункция принимает возраст ребенка и возвращает номер класса, в который он должен попасть.\n\n* Если возраст меньше 6 лет, то возвращаем строку `Kindergarten`.\n* Если возраст от 6 до 7 лет, то возвращаем строку `1st grade`.\n* Если возраст от 7 до 8 лет, то возвращаем строку `2nd grade`.\n* Если возраст от 8 до 9 лет, то возвращаем строку `3rd grade`.\n* Если возраст от 9 лет и выше, то возвращаем строку `4th grade or higher`.\n\nПохожий пример:\n```javascript\nfunction getLevel(altitude) {\n  if (altitude < 1000) {\n    return 'low level';\n  } else if (altitude < 5000) {\n    return 'mid level';\n  } else {\n    return 'high level';\n  }\n}\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function getSchoolClass(age) {\n  if (age < 6) {\n    return 'Kindergarten';\n  } else if (age < 7) {\n    return '1st grade';\n  } else if (age < 8) {\n    return '2nd grade';\n  } else if (age < 9) {\n    return '3rd grade';\n  } else {\n    return '4th grade or higher';\n  }\n}",
  "openTest": "it('Created function getSchoolClass', () => {\n  expect(getSchoolClass).to.be.a('function');\n});\n\nit('getSchoolClass(4) returns \"Kindergarten\"', () => {\n  expect(getSchoolClass(4)).to.equal('Kindergarten');\n});\n\nit('getSchoolClass(5) returns \"Kindergarten\"', () => {\n  expect(getSchoolClass(5)).to.equal('Kindergarten');\n});\n\nit('getSchoolClass(6) returns \"1st grade\"', () => {\n  expect(getSchoolClass(6)).to.equal('1st grade');\n});\n\nit('getSchoolClass(6.5) returns \"1st grade\"', () => {\n  expect(getSchoolClass(6.5)).to.equal('1st grade');\n});\n\nit('getSchoolClass(7) returns \"2nd grade\"', () => {\n  expect(getSchoolClass(7)).to.equal('2nd grade');\n});\n\nit('getSchoolClass(7.5) returns \"2nd grade\"', () => {\n  expect(getSchoolClass(7.5)).to.equal('2nd grade');\n});\n\nit('getSchoolClass(8) returns \"3rd grade\"', () => {\n  expect(getSchoolClass(8)).to.equal('3rd grade');\n});\n\nit('getSchoolClass(8.5) returns \"3rd grade\"', () => {\n  expect(getSchoolClass(8.5)).to.equal('3rd grade');\n});\n\nit('getSchoolClass(9) returns \"4th grade or higher\"', () => {\n  expect(getSchoolClass(9)).to.equal('4th grade or higher');\n});\n\nit('getSchoolClass(10) returns \"4th grade or higher\"', () => {\n  expect(getSchoolClass(10)).to.equal('4th grade or higher');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}