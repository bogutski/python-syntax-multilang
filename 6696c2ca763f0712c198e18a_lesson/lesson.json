{
  "_id": "6696c2ca763f0712c198e18a",
  "content": {
    "ru": "![](https://course-qa-basics.s3.us-west-1.amazonaws.com/if-else-girl.png)\n\nВетвление позволяет изменять ход выполнения программы в зависимости от условий.\n\nЕсть три комбинации условных операторов:\n\n* `if`\n* `if...else`\n* `if...else if...else`\n\n### Одиночный оператор `if`\n\nОператор `if` позволяет запускать блок кода, когда указанное условие истинно.\n\n\n```javascript\nif (условие){\n  // выполнить код, если условие истинно (true)\n}\n```\n\nНапример, нам нужно написать код, который позволит определить, можно ли выдать человеку пропуск в ночной клуб, на основе данных о возрасте.\n\n```javascript\nconst age = 20;\n\nif(age >= 21){\n  console.log('Welcome') // код не сработает, если возраст меньше 21\n}\n\n// программа продолжит выполняться\nconsole.log('The end');\n\n```\n### Комбинация операторов `if...else`\nА что, если мы хотим сделать что-то еще, если условие ложно? Нам пригодится оператор `else`.\n\nОператор `if...else` используется когда нам нужно выполнить разные инструкции в зависимости от того или условие истинно, или ложно.\n\n```javascript\nif (условие) {\n  // выполнить код, если условие истинно (true)\n} else {\n  // выполнить код, если условие ложно (false)\n}\n```\n\nИспользуя оператор `else`, вы можете запустить блок кода, только если предыдущие условные операторы были ложными.\n\n```javascript\nconst age = 20;\n\nif(age >= 21){\n  console.log('Welcome') // код сработает, если возраст больше 21\n} else {\n  console.log('Sorry, no') // код сработает, если возраст меньше 21\n}\n```\n\nПреобразуем этот код в функцию, и добавим окошко `prompt` с вопросом **What is your age?** для ввода пользователем своего возраста.\n\nТак как `prompt` возвращает строку `string`, нам надо преобразовать переменную `age` к числу.\n\nСделать это можно с помощью `Number()`, или просто добавить `+` перед `prompt`.\n\n```javascript\nfunction door(){\n  const age = +prompt('What is your age?');\n\n  if(age >= 21){\n    return 'Welcome';\n  } else {\n    return 'Sorry, no';\n  }\n}\n\nconst answer = door();\n\nconsole.log(answer); // допустим пользователь ввел 30 в окошко, в консоль выведет 'Welcome'\n```\n\nПредставим, что в нашем ночном клубе есть несколько комнат:\n\n1. от 21 до 55 лет (55 включительно)\n2. от 55 до 80 лет (80 включительно)\n3. от 80 лет\n\nПопробуем написать эти условия с помощью оператора `if...else`\n\n```javascript\nfunction door(){\n  const age = +prompt('What is your age?');\n\n  if(age >= 21){\n    if(age > 55){\n      if(age > 80){\n        return 'Room 3'; // больше 80, комната 3\n      } else {\n        return 'Room 2'; // от 55 до 80, комната 2\n      }\n    } else {\n      return 'Room 1'; // от 21 до 55, комната 1\n    }\n  } else {\n    return 'Sorry, no';\n  }\n}\n\nconst answer = door();\n\nconsole.log(answer);\n```\n\nПоявилось несколько уровней вложенности, и код стал плохо читаемым.\n\n### Комбинация операторов `if...else if...else`\n\nПерепишем наш код с тремя комнатами с помощью оператора `if...else if...else`\n\n```javascript\nfunction door(){\n  const age = +prompt('What is your age?');\n\n  if(age >= 21){ \n    return 'Room 1'; // от 21 до 55, комната 1\n  } else if (age > 55){\n    return 'Room 2'; // от 55 до 80, комната 2\n  } else if (age > 80){\n    return 'Room 1'; // больше 80, комната 3\n  } else {\n    return 'Sorry, no';\n  }\n}\n\nconst answer = door();\nconsole.log(answer); // если пользователь ввел 56, в консоль выведет 'Room 1'\n                     // а должно было 'Room 2'\n```\n\nПочему же так произошло? Потому, что `56 >= 21`, получается первое условие истинно.\n\nУсловия проверяются сверху вниз. Как только одно из условий становится истинным, выполняется код, внутри соответствующего `if`, и остальная часть оператора `if...else if...else` игнорируется. Если ни одно из условий не выполняется, будет выполнен последний оператор `else`.\n\nПопробуем переписать код, чтобы нам возвращались правильные номера комнат\n\n```javascript\nfunction door(){\n  const age = +prompt('What is your age?');\n\n  if(age > 80){ \n    return 'Room 3'; // больше 80, комната 3\n  } else if (age > 55){\n    return 'Room 2'; // от 55 до 80, комната 2\n  } else if (age >= 21){\n    return 'Room 1'; // от 21 до 55, комната 1\n  } else {\n    return 'Sorry, no';\n  }\n}\n\nconst answer = door();\n\nconsole.log(answer); \n\n// Если пользователь ввел 80, в консоль выведет 'Room 3'\n// Если пользователь ввел 56, в консоль выведет 'Room 2'\n// Если пользователь ввел 25, в консоль выведет 'Room 1'\n// Если пользователь ввел 18, в консоль выведет 'Sorry, no'\n```\n\nПробуйте разные варианты, чтобы понять, как работает оператор `if...else if...else`.\n",
    "en": "![](https://course-qa-basics.s3.us-west-1.amazonaws.com/if-else-girl.png)\n\nBranching allows you to change the course of program execution depending on the conditions.\n\nThere are three combinations of conditional operators:\n\n* `if`\n* `if...else`\n* `if...else if...else`\n\n### Single operator `if`\n\nThe `if` operator allows you to run a block of code when the specified condition is true.\n\n\n```javascript\nif (condition){\n  // execute the code if the condition is true\n}\n```\n\nFor example, we need to write code to determine whether a person can be issued a nightclub pass based on their age.\n\n```javascript\nconst age = 20;\n\nif(age >= 21){\n  console.log('Welcome') // the code will not work if age is less than 21\n}\n\n// the program will continue executing\nconsole.log('The end');\n\n```\n### Combination of operators `if...else`\nWhat if we want to do something else if the condition is false? The `else` operator comes in handy.\n\nThe `if...else` operator is used when we need to execute different instructions depending on whether the condition is true or false.\n\n```javascript\nif (condition) {\n  // execute the code if the condition is true\n} else {\n  // execute code if condition is false\n}\n```\n\nUsing the `else` operator you can run a block of code only if the previous conditional statements were false.\n\n```javascript\nconst age = 20;\n\nif(age >= 21){\n  console.log('Welcome') // the code will work if age is greater than 21\n} else {\n  console.log('Sorry, no') // the code will work if age is below 21\n}\n```\n\nConvert this code to a function, and add a `prompt` box with a question **What is your age?** for the user to enter his age.\n\nSince `prompt` returns a string `string`, we need to convert the variable `age` to a number.\n\nYou can do this with `Number()`, or just add `+` before `prompt`.\n\n```javascript\nfunction door(){\n  const age = +prompt('What is your age?');\n\n  if(age >= 21){\n    return 'Welcome';\n  } else {\n    return 'Sorry, no';\n  }\n}\n\nconst answer = door();\n\nconsole.log(answer); // let's assume the user entered 30 into the window, the console will display 'Welcome'\n```\n\nLet's imagine that our nightclub has several rooms:\n\n1. 21 to 55 years old (55 inclusive)\n2. 55 to 80 years old (80 inclusive)\n3. From 80 years old\n\nLet's try to write these conditions using the `if...else` operator\n\n```javascript\nfunction door(){\n  const age = +prompt('What is your age?');\n\n  if(age >= 21){\n    if(age > 55){\n      if(age > 80){\n        return 'Room 3'; // over 80, room 3\n      } else {\n        return 'Room 2'; // between 55 and 80, Room 2\n      }\n    } else {\n      return 'Room 1'; // from 21 to 55, room 1\n    }\n  } else {\n    return 'Sorry, no';\n  }\n}\n\nconst answer = door();\n\nconsole.log(answer);\n```\n\nSeveral nesting levels appeared and the code became hard to read.\n\n### Combination of operators `if...else if...else`\n\nLet's rewrite our code with three rooms using the `if...else if...else` operator\n\n```javascript\nfunction door(){\n  const age = +prompt('What is your age?');\n\n  if(age >= 21){ \n    return 'Room 1'; // 21 to 55, room 1\n  } else if(age > 55){\n    return 'Room 2'; // from 55 to 80, Room 2\n  } else if (age > 80){\n    return 'Room 1'; // over 80, Room 3\n  } else {\n    return 'Sorry, no';\n  }\n}\n\nconst answer = door();\nconsole.log(answer); // if the user entered 56, the console will print 'Room 1'\n                     // it should have been 'Room 2'\n```\n\nWhy did this happen? Because `56 >= 21`, so the first condition is true.\n\nThe conditions are checked from top to bottom. As soon as one of the conditions becomes true, the code within the corresponding `if` is executed and the rest of the `if...else if...else` operator is ignored. If none of the conditions are true, the last `else` operator will be executed.\n\nLet's try to rewrite the code so that the correct room numbers are returned to us\n\n```javascript\nfunction door(){\n  const age = +prompt('What is your age?');\n\n  if(age > 80){ \n    return 'Room 3'; // over 80, room 3\n  } else if(age > 55){\n    return 'Room 2'; // between 55 and 80, Room 2\n  } else if (age >= 21){\n    return 'Room 1'; // from 21 to 55, Room 1\n  } else {\n    return 'Sorry, no';\n  }\n}\n\nconst answer = door();\n\nconsole.log(answer); \n\n// If the user entered 80, the console will print 'Room 3'.\n// If the user entered 56, the console will output 'Room 2'\n// If the user entered 25, the console will output 'Room 1'.\n// If the user entered 18, the console will output 'Sorry, no'\n```\n\nTry different variants to understand how the `if...else if...else` operator works.\n",
    "es": "# Ветвление. Операторы if, else, else if language: es"
  },
  "video": {
    "ru": "https://youtu.be/hQF3p27Hdq4",
    "en": "",
    "es": ""
  }
}