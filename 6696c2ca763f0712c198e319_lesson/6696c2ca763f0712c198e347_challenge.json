{
  "_id": "6696c2ca763f0712c198e347",
  "name": {
    "en": "Format a number. Two decimal places. toFixed",
    "ru": "Отформатировать число. Два знака после запятой. toFixed"
  },
  "instruction": {
    "en": "The `formatNumber` function takes one number as input.\n\nThis number must be returned rounded to two decimal places.\n\nUse `toFixed` for rounding. Convert the result to a number using unary plus.\n\n```javascript\nconst num = 1.111;\nconst numStr = num.toFixed(2); // string '1.11'\nconst numNum = +numStr; // the number 1.11\n```\n\nExamples of running the function:\n```javascript\nformatNumber(1) // 1\nformatNumber(1.1) // 1.1\nformatNumber(1.11) // 1.11\nformatNumber(1.111) // 1.11\n\nformatNumber(1.99) // 1.99\nformatNumber(1.999) // 2\n```",
    "ru": "На вход функция `formatNumber` принимает одно число.\n\nНеобходимо вернуть это число, округленное до двух знаков после запятой.\n\nИспользуйте для округления `toFixed`. Преобразуйте результат в число с помощью унарного плюса.\n\n```javascript\nconst num = 1.111;\nconst numStr = num.toFixed(2); // строка '1.11'\nconst numNum = +numStr; // число 1.11\n```\n\nПримеры запуска функции:\n```javascript\nformatNumber(1) // 1\nformatNumber(1.1) // 1.1\nformatNumber(1.11) // 1.11\nformatNumber(1.111) // 1.11\n\nformatNumber(1.99) // 1.99\nformatNumber(1.999) // 2\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function formatNumber(num) {\n  return +num.toFixed(2);\n}",
  "openTest": "it('Created function formatNumber', () => {\n  expect(formatNumber).to.be.a('function');\n});\n\nit('formatNumber(1) should return 1.00', () => {\n  expect(formatNumber(1)).to.equal(1.0);\n});\n\nit('formatNumber(1.1) should return 1.10', () => {\n  expect(formatNumber(1.1)).to.equal(1.1);\n});\n\nit('formatNumber(1.11) should return 1.11', () => {\n  expect(formatNumber(1.11)).to.equal(1.11);\n});\n\nit('formatNumber(1.111) should return 1.11', () => {\n  expect(formatNumber(1.111)).to.equal(1.11);\n});\n\nit('formatNumber(1.1111) should return 1.11', () => {\n  expect(formatNumber(1.1111)).to.equal(1.11);\n});\n\nit('formatNumber(1.99) should return 1.99', () => {\n  expect(formatNumber(1.99)).to.equal(1.99);\n});\n\nit('formatNumber(1.999) should return 2.00', () => {\n  expect(formatNumber(1.999)).to.equal(2.0);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}