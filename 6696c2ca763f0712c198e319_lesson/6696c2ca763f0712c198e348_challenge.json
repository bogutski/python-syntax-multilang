{
  "_id": "6696c2ca763f0712c198e348",
  "name": {
    "en": "Format a number. Three decimal places. toFixed",
    "ru": "Форматировать число. Три знака после запятой. toFixed"
  },
  "instruction": {
    "en": "Write a function `formatNumber` that takes one number and returns it rounded to three decimal places.\n\nUse `toFixed` for rounding. Convert the result to a number using unary plus.\n\nExamples of running a function:\n```javascript\nformatNumber(1) // 1\nformatNumber(1.1) // 1.1\nformatNumber(1.11) // 1.11\nformatNumber(1.1111) // 1.111\nformatNumber(1.231) // 1.231\nformatNumber(1.2398) // 1.24\n```",
    "ru": "Напишите функцию `formatNumber`, которая принимает одно число и возвращает его, округленное до трех знаков после запятой.\n\nИспользуйте для округления `toFixed`. Преобразуйте результат в число с помощью унарного плюса.\n\nПримеры запуска функции:\n```javascript\nformatNumber(1) // 1\nformatNumber(1.1) // 1.1\nformatNumber(1.11) // 1.11\nformatNumber(1.1111) // 1.111\nformatNumber(1.231) // 1.231\nformatNumber(1.2398) // 1.24\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function formatNumber(num) {\n  return +num.toFixed(3);\n}",
  "openTest": "it('Created function formatNumber', () => {\n  expect(formatNumber).to.be.a('function');\n});\n\nit('formatNumber(1) should return 1.000', () => {\n  expect(formatNumber(1)).to.equal(1.0);\n});\n\nit('formatNumber(1.1) should return 1.100', () => {\n  expect(formatNumber(1.1)).to.equal(1.1);\n});\n\nit('formatNumber(1.11) should return 1.110', () => {\n  expect(formatNumber(1.11)).to.equal(1.11);\n});\n\nit('formatNumber(1.111) should return 1.111', () => {\n  expect(formatNumber(1.111)).to.equal(1.111);\n});\n\nit('formatNumber(1.1111) should return 1.111', () => {\n  expect(formatNumber(1.1111)).to.equal(1.111);\n});\n\nit('formatNumber(1.11111) should return 1.111', () => {\n  expect(formatNumber(1.11111)).to.equal(1.111);\n});\n\nit('formatNumber(1.2391) should return 1.239', () => {\n  expect(formatNumber(1.2391)).to.equal(1.239);\n});\n\nit('formatNumber(1.2398) should return 1.24', () => {\n  expect(formatNumber(1.2398)).to.equal(1.24);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}