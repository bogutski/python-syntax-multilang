{
  "_id": "6696c2ca763f0712c198e349",
  "name": {
    "en": "Percentage of number with formatting",
    "ru": "Процент от числа с форматированием"
  },
  "instruction": {
    "en": "Write a function `getPercent` that takes two numbers: `num` and `percent`.\n\nThe function should return the percentage of `num` rounded to two decimal places.\n\nExamples of running the function:\n```javascript\ngetPercent(100, 10) // 10\ngetPercent(100, 20) // `` 20\ngetPercent(99, 32) // 31.68\ngetPercent(8, 17) // 1.36\ngetPercent(40, 25) // 10\ngetPercent(40, 13) // 5.2\n```",
    "ru": "Напишите функцию `getPercent`, которая принимает два числа: `num` и `percent`.\n\nФункция должна возвращать процент от `num`, округленный до двух знаков после запятой.\n\nПримеры запуска функции:\n```javascript\ngetPercent(100, 10) // 10\ngetPercent(100, 20) // 20\ngetPercent(99, 32) // 31.68\ngetPercent(8, 17) // 1.36\ngetPercent(40, 25) // 10\ngetPercent(40, 13) // 5.2\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function getPercent(num, percent) {\n  return +(num * (percent / 100)).toFixed(2);\n}",
  "openTest": "it('Created function getPercent', () => {\n  expect(getPercent).to.be.a('function');\n});\n\nit('getPercent(100, 10) should return 10', () => {\n  expect(getPercent(100, 10)).to.equal(10);\n});\n\nit('getPercent(90, 33) should return 29.7', () => {\n  expect(getPercent(90, 33)).to.equal(29.7);\n});\n\nit('getPercent(99, 32) should return 31.68', () => {\n  expect(getPercent(99, 32)).to.equal(31.68);\n});\n\nit('getPercent(40, 13) should return 5.2', () => {\n  expect(getPercent(40, 13)).to.equal(5.2);\n});\n\nit('getPercent(8, 17) should return 1.36', () => {\n  expect(getPercent(8, 17)).to.equal(1.36);\n});\n\nit('getPercent(11, 2.71) should return 0.3', () => {\n  expect(getPercent(11, 2.71)).to.equal(0.3);\n});\n\nit('getPercent(7, 11) should return 0.77', () => {\n  expect(getPercent(7, 11)).to.equal(0.77);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}