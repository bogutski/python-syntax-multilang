{
  "_id": "6696c2cb763f0712c198f729",
  "name": {
    "en": "/*",
    "ru": "Поиск первого положительного нечетного числа в массиве"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `findFirstPositiveOdd`, которая принимает массив чисел в качестве аргумента и возвращает первое положительное нечетное число в массиве.\n\nЕсли такое число не найдено, функция должна вернуть строку `Positive odd number hasn't been found`.\n\n\nПример запуска функции:\n```javascript\nfindFirstPositiveOdd([0, 1, 2, -3, -4]); // 1\nfindFirstPositiveOdd([-2, -4, -1, 0, 2, 4]); // \"Positive odd number hasn't been found\"\n```"
  },
  "initialSolution": "function findFirstPositiveOdd(){\n\n}",
  "completedSolution": "function findFirstPositiveOdd(numbers) {\n  return numbers.find(n => n > 0 && n % 2) || \"Positive odd number hasn't been found\";\n}",
  "openTest": "it('Created function findFirstPositiveOdd', () => {\n  expect(findFirstPositiveOdd).to.be.a('function');\n});\n\nit(\"Function findFirstPositiveOdd should include find method\", () => {\n  const result = findFirstPositiveOdd.toString();\n  expect(result).to.include('.find(');\n});\n\nit(\"findFirstPositiveOdd([0, -1, 2, 3, 4]) should return 3\", () => {\n  expect(findFirstPositiveOdd([0, -1, 2, 3, 4])).to.equal(3);\n});\n\nit(\"findFirstPositiveOdd([-2, -4, 0, 2, 4]) should return 'Positive odd number hasn't been found'\", () => {\n  expect(findFirstPositiveOdd([-2, -4, 0, 2, 4])).to.equal(\"Positive odd number hasn't been found\");\n});\n\nit(\"findFirstPositiveOdd([1, 2, 3, 4, 5]) should return 1\", () => {\n  expect(findFirstPositiveOdd([1, 2, 3, 4, 5])).to.equal(1);\n});\n\nit(\"findFirstPositiveOdd([2, 4, 6, 8, 10]) should return 'Positive odd number hasn't been found'\", () => {\n  expect(findFirstPositiveOdd([2, 4, 6, 8, 10])).to.equal(\"Positive odd number hasn't been found\");\n});\n\nit(\"findFirstPositiveOdd([-1, -3, -5, 7, -9, 11]) should return 7\", () => {\n  expect(findFirstPositiveOdd([-1, -3, -5, 7, -9, 11])).to.equal(7);\n});\n\nit(\"findFirstPositiveOdd([]) should return 'Positive odd number hasn't been found'\", () => {\n  expect(findFirstPositiveOdd([])).to.equal(\"Positive odd number hasn't been found\");\n});\n\nit(\"findFirstPositiveOdd([-2, -4, 0, 2, 3]) should return 3\", () => {\n  expect(findFirstPositiveOdd([-2, -4, 0, 2, 3])).to.equal(3);\n});\n\nit(\"findFirstPositiveOdd([2, -4, 6, -8, 10]) should return 'Positive odd number hasn't been found'\", () => {\n  expect(findFirstPositiveOdd([2, -4, 6, -8, 10])).to.equal(\"Positive odd number hasn't been found\");\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}