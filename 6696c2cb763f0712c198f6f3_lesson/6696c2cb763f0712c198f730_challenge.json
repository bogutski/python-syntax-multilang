{
  "_id": "6696c2cb763f0712c198f730",
  "name": {
    "en": "/*",
    "ru": "Поиск ближайшего к числу элемента в массиве"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `findClosestNumber`, которая принимает массив чисел и число в качестве аргументов и возвращает значение элемента массива, которое находится ближе всего к указанному числу.\n\nЕсли таких элементов несколько, вернуть первый из них.\n\n\nПример запуска функции:\n```javascript\nfindClosestNumber([1, 2, 4, 6, 8], 5);    // 4\nfindClosestNumber([-3, 0, 2, 7, 10], -1); // 0\nfindClosestNumber([-5, -3, 0, 3, 5], -2); // -3\n```"
  },
  "initialSolution": "function findClosestNumber(){\n\n}",
  "completedSolution": "function findClosestNumber(numbers, n) {\n  let obj = {}\n\n  for(let i = 0; i < numbers.length; i++){\n    obj[numbers[i]] = Math.abs(n - numbers[i])\n  }\n\n  let sortedArray = Object.entries(obj).sort((a, b) => a[1] - b[1])\n\n  return +sortedArray[0][0];\n}",
  "openTest": "it('Created function findClosestNumber', () => {\n  expect(findClosestNumber).to.be.a('function');\n});\n\nit(\"findClosestNumber([1, 2, 4, 6, 8], 5) should return 4\", () => {\n  expect(findClosestNumber([1, 2, 4, 6, 8], 5)).to.equal(4);\n});\n\nit(\"findClosestNumber([-3, 0, 2, 7, 10], -1) should return 0\", () => {\n  expect(findClosestNumber([-3, 0, 2, 7, 10], -1)).to.equal(0);\n});\n\nit(\"findClosestNumber([5, 7, 9, 11, 13], 9) should return 9\", () => {\n  expect(findClosestNumber([5, 7, 9, 11, 13], 9)).to.equal(9);\n});\n\nit(\"findClosestNumber([5, 7, 9, 11, 13], 12) should return 11\", () => {\n  expect(findClosestNumber([5, 7, 9, 11, 13], 12)).to.equal(11);\n});\n\nit(\"findClosestNumber([-5, -3, 0, 3, 5], -2) should return -3\", () => {\n  expect(findClosestNumber([-5, -3, 0, 3, 5], -2)).to.equal(-3);\n});\n\nit(\"findClosestNumber([100, 200, 300, 400, 500], 350) should return 300\", () => {\n  expect(findClosestNumber([100, 200, 300, 400, 500], 350)).to.equal(300);\n});\n\nit(\"findClosestNumber([1, 2, 3, 4, 5], 3.5) should return 3\", () => {\n  expect(findClosestNumber([1, 2, 3, 4, 5], 3.5)).to.equal(3);\n});\n\nit(\"findClosestNumber([10, 20, 30, 40, 50], 55) should return 50\", () => {\n  expect(findClosestNumber([10, 20, 30, 40, 50], 55)).to.equal(50);\n});\n\nit(\"findClosestNumber([-10, -20, -30, -40, -50], -45) should return -40\", () => {\n  expect(findClosestNumber([-10, -20, -30, -40, -50], -45)).to.equal(-40);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}