{
  "_id": "6696c2cb763f0712c198f192",
  "name": {
    "en": "",
    "ru": "Проверка массива на симметричность с помощью цикла"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `isArraySymmetrical`, которая принимает массив с различными элементами.\n\nФункция должна вернуть `true`, если массив симметричный и `false` если не симметричный.\n\nЕсли массив пустой, то функция должна вернуть строку `Array is empty`.\n\nHint:\n* Для решения задачи используйте цикл `for`.\n* Сравните первый и последний элементы массива, второй и предпоследний и т.д.\n* Если хоть одна пара элементов не равна, то массив не симметричный.\n* Если по окончанию цикла все пары элементов равны, то массив симметричный.\n* Для оптимизации решения задачи используйте цикл `for` с условием `i < arr.length / 2`.\n\n\nПримеры запуска функции:\n```javascript\nisArraySymmetrical([1, 2, 3, 2, 1]);           // true\nisArraySymmetrical([1, 2, 3, 2, 2]);           // false\nisArraySymmetrical([false, true, false]);      // true\nisArraySymmetrical(['a', 'b', 'c', 't', 'a']); // false\nisArraySymmetrical([]);                        // 'Array is empty'\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function isArraySymmetrical(arr){\n  if(!arr.length) return 'Array is empty';\n  for(let i = 0; i < arr.length / 2; i++){\n    if(arr[i] !== arr[arr.length - 1 - i]){\n      return false\n    }\n  }\n  return true;\n}",
  "openTest": "it('Created function isArraySymmetrical', () => {\n  expect(isArraySymmetrical).to.be.a('function');\n});\n\nit(\"Function isArraySymmetrical does not include 'reverse' method\", () => {\n  expect(isArraySymmetrical.toString()).to.not.include('reverse');\n});\n\nit(\"Function isArraySymmetrical does not include 'join' method\", () => {\n  expect(isArraySymmetrical.toString()).to.not.include('join');\n});\n\nit(\"isArraySymmetrical([1,2,3,4,4,3,2,1]) should return true\", () => {\n  expect(isArraySymmetrical([1,2,3,4,4,3,2,1])).to.be.true;\n});\n\nit(\"isArraySymmetrical([1,2,3,2,1]) should return true\", () => {\n  expect(isArraySymmetrical([1,2,3,2,1])).to.be.true;\n});\n\nit(\"isArraySymmetrical([1,2,3,2,2]) should return false\", () => {\n  expect(isArraySymmetrical([1,2,3,2,2])).to.be.false;\n});\n\nit(\"isArraySymmetrical([true, false, true]) should return true\", () => {\n  expect(isArraySymmetrical([true, false, true])).to.be.true;\n});\n\nit(\"isArraySymmetrical(['a', 'b', 'c', 'b', 'a']) should return true\", () => {\n  expect(isArraySymmetrical(['a', 'b', 'c', 'b', 'a'])).to.be.true;\n});\n\nit(\"isArraySymmetrical(['a', 'bb', 'c', 'b', 'a', 'a']) should return false\", () => {\n  expect(isArraySymmetrical(['a', 'bb', 'c', 'b', 'a', 'a'])).to.be.false;\n});\n\nit(\"isArraySymmetrical([]) should return 'Array is empty'\", () => {\n  expect(isArraySymmetrical([])).to.equal('Array is empty');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}