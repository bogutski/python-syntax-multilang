{
  "_id": "6696c2cb763f0712c198f19a",
  "name": {
    "en": "",
    "ru": "Проверка массива на симметричность с использованием методов"
  },
  "instruction": {
    "en": "",
    "ru": "Исправьте функцию `isArraySymmetrical`, которая принимает массив с числами и строками.\n\nФункция должна вернуть `true`, если массив симметричный и `false`, если нет.\n\nВ данной задаче были использованы методы `join`, `reverse` и `toLowerCase`.\n\nВ этой задаче 3 ошибки, исправьте их и перепишите код самостоятельно.\n\n\nПримеры запуска функции:\n```javascript\nisArraySymmetrical(['a', 'b', 'c', 'c', 'b', 'a']); // true\nisArraySymmetrical(['A', 'b', 'c', 'b', 'o']);      // false\nisArraySymmetrical(['A', 'a', 'd', 'b']);           // false\nisArraySymmetrical([]);                             // 'Array is empty'\n```"
  },
  "initialSolution": "function isArraySymmetrical(arr) {\n  if(!arr.length) return 'Array is empty';\n  const str = arr.join('').toUpperCase()\n  const reversed = arr.reverse().join(' ').toLowerCase()\n  return reversed !== str\n}",
  "completedSolution": "function isArraySymmetrical(arr) {\n  if(!arr.length) return 'Array is empty';\n  const str = arr.join('').toLowerCase()\n  const reversed = arr.reverse().join('').toLowerCase()\n  return reversed === str\n}",
  "openTest": "it('Created function isArraySymmetrical', () => {\n  expect(isArraySymmetrical).to.be.a('function');\n});\n\nit(\"Function isArraySymmetrical includes 'reverse' method\", () => {\n  expect(isArraySymmetrical.toString()).to.include('reverse');\n});\n\nit(\"Function isArraySymmetrical includes 'join' method\", () => {\n  expect(isArraySymmetrical.toString()).to.include('join');\n});\n\nit(\"isArraySymmetrical(['A', 'b', 'c', 'b', 'a']) should return true\", () => {\n  expect(isArraySymmetrical(['A', 'b', 'c', 'b', 'a'])).to.be.true;\n});\n\nit(\"isArraySymmetrical(['A', 'a', 'd', 'b']) should return false\", () => {\n  expect(isArraySymmetrical(['A', 'a', 'd', 'b'])).to.be.false;\n});\n\nit(\"isArraySymmetrical(['b', 'e', 'k', 't', 't', 'k', 'e', 'b']) should return true\", () => {\n  expect(isArraySymmetrical(['b', 'e', 'k', 't', 't', 'k', 'e', 'b'])).to.be.true;\n});\n\nit(\"isArraySymmetrical(['5', '4', '7', '5', '3', '4', '5']) should return false\", () => {\n  expect(isArraySymmetrical(['5', '4', '7', '5', '3', '4', '5'])).to.be.false;\n});\n\nit(\"isArraySymmetrical([9, 4, 3, 6, 3, 4, 9]) should return true\", () => {\n  expect(isArraySymmetrical([9, 4, 3, 6, 3, 4, 9])).to.be.true;\n});\n\nit(\"isArraySymmetrical([]) should return 'Array is empty'\", () => {\n  expect(isArraySymmetrical([])).to.equal('Array is empty');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}