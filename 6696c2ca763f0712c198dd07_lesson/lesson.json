{
  "_id": "6696c2ca763f0712c198dd07",
  "video": {
    "ru": "https://youtu.be/DiWyD0PjdaQ",
    "en": "https://youtu.be/DiWyD0PjdaQ",
    "es": ""
  },
  "content": {
    "ru": "Специальное значение **undefined**  означает, что «значение не было присвоено».\nЕсли переменная объявлена, но ей не присвоено никакого значения, то её значением будет undefined. ![](https://course-qa-basics.s3.us-west-1.amazonaws.com/create-a-variable-with-the-value-undefined.png)\nНапример,\n```\nlet x; \nconsole.log(x);        // в консоль будет выведено undefined\nconsole.log(typeof x); // в консоль будет выведено \"undefined\"\n \nlet y;     // переменной y не присвоено значение\nlet z = y; // переменной z присвоено значение y\nconsole.log(z);        // в консоль будет выведено undefined\nconsole.log(typeof z); // в консоль будет выведено \"undefined\"\n \nlet abc = undefined; // можно явно присваивать переменной значение undefined, но встречается это редко\nconsole.log(abc);    // в консоль будет выведено undefined\n``` \n![](https://course-qa-basics.s3.us-west-1.amazonaws.com/assign-the-value-undefined-to-the-variable.png)\nСравнение undefined с другими значениями вернет следующие результаты: ![](https://course-qa-basics.s3.us-west-1.amazonaws.com/compare-undefined-and-null.png)\n```\nconsole.log(undefined === undefined); // true\nconsole.log(undefined === null);      // false\nconsole.log(undefined == null);       // true\nconsole.log(undefined > 0);           // false\nconsole.log(undefined <= 0);          // false\n```\n\nОбычно `undefined` используется для проверок, была ли переменная назначена.\nСпециальное значение **null** означает «ничего», «пусто» или «значение намеренно отсутствует».\nПодробно о null мы поговорим в следующем уроке. \n\n![](https://course-qa-basics.s3.us-west-1.amazonaws.com/the-sum-of-undefined-and-numbers.png)",
    "en": "The special value **undefined** means \"value has not been assigned\". If a variable is declared but not assigned any value, its value will be undefined. ![](https://course-qa-basics.s3.us-west-1.amazonaws.com/create-a-variable-with-the-value-undefined.png)\nFor example,\n```\nlet x; \nconsole.log(x);        // undefined will be printed to the console\nconsole.log(typeof x); // \"undefined\" will be printed to the console\n\nlet y;     // y variable is not assigned a value\nlet z = y; // z variable is assigned the value of y\nconsole.log(z);        // undefined will be printed to the console\nconsole.log(typeof z); // \"undefined\" will be printed to the console\n\nlet abc = undefined; // it is possible to explicitly assign the value undefined to a variable, but this is rare\nconsole.log(abc);    // undefined will be printed to the console\n```\n![](https://course-qa-basics.s3.us-west-1.amazonaws.com/assign-the-value-undefined-to-the-variable.png)\nComparing undefined with other values will return the following results: ![](https://course-qa-basics.s3.us-west-1.amazonaws.com/compare-undefined-and-null.png)\n```\nconsole.log(undefined === undefined); // true\nconsole.log(undefined === null);      // false\nconsole.log(undefined == null);       // true\nconsole.log(undefined > 0);           // false\nconsole.log(undefined <= 0);          // false\n```\n\nNormally `undefined` is used to check if a variable has been assigned.\nThe special value **null** means \"nothing\", \"empty\", or \"the value is intentionally missing\".\nWe will talk about null in detail in the next lesson. \n\n![](https://course-qa-basics.s3.us-west-1.amazonaws.com/the-sum-of-undefined-and-numbers.png)",
    "es": "\n"
  }
}