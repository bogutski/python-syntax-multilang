{
  "_id": "6696c2ca763f0712c198eab6",
  "name": {
    "en": "The sum of odd numbers in the array",
    "ru": "Сумма нечетных чисел в массиве"
  },
  "instruction": {
    "en": "Write a function `sumOdd` that takes one parameter, an array.\n\nAn array of arbitrary length, containing positive and/or negative integers.\n\nThe function should return the sum of all odd numbers in the array.\n\nAn example of running the function:\n```javascript\nsumOdd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) // 1 + 3 + 5 + 7 + 9 = 25\nsumOdd([-1, 2, 3, 4, -5, 6, 7, 8, 11]) // (-1) + 3 + (-5) + 7 + 11 = 15\n```",
    "ru": "Напишите функцию `sumOdd`, которая принимает один параметр - массив.\n\nМассив произвольной длины, содержит положительные и/или отрицательные целые числа.\n\nФункция должна вернуть сумму всех нечетных чисел в массиве.\n\nПример запуска функции:\n```javascript\nsumOdd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) // 1 + 3 + 5 + 7 + 9 = 25\nsumOdd([-1, 2, 3, 4, -5, 6, 7, 8, 11]) // (-1) + 3 + (-5) + 7 + 11 = 15\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function sumOdd(arr) {\n  let sum = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 !== 0) {\n      sum += arr[i]\n    }\n  }\n  return sum\n}",
  "openTest": "it('Created function sumOdd', () => {\n  expect(sumOdd).to.be.a('function');\n});\n\nit('sumOdd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) should return 25', () => {\n  expect(sumOdd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])).to.be.equal(25);\n});\n\nit('sumOdd([-1, 2, 3, 4, -5, 6, 7, 8, 11]) should return 15', () => {\n  expect(sumOdd([-1, 2, 3, 4, -5, 6, 7, 8, 11])).to.be.equal(15);\n});\n\nit('sumOdd([10, 2, 50, 3, 11]) should return 14', () => {\n  expect(sumOdd([10, 2, 50, 3, 11])).to.be.equal(14);\n});\n\nit('sumOdd([100, 201, 32, 54, 73, -5]) should return 269', () => {\n  expect(sumOdd([100, 201, 32, 54, 73, -5])).to.be.equal(269);\n});\n\nit('sumOdd([1, 3, 5, 7, 9, 11, 13, 15]) should return 64', () => {\n  expect(sumOdd([1, 3, 5, 7, 9, 11, 13, 15])).to.be.equal(64);\n});\n\nit('sumOdd([2, 4, 6, 8, 10, 12, 14]) should return 0', () => {\n  expect(sumOdd([2, 4, 6, 8, 10, 12, 14])).to.be.equal(0);\n});\n\nit('sumOdd([2, 4, 6, 7, 10, 12, 14]) should return 7', () => {\n  expect(sumOdd([2, 4, 6, 7, 10, 12, 14])).to.be.equal(7);\n});\n\nit('sumOdd([]) should return 0', () => {\n  expect(sumOdd([])).to.be.equal(0);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}