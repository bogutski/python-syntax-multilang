{
  "_id": "6696c2ca763f0712c198eaba",
  "name": {
    "en": "The sum of even positive and odd negative numbers of the array",
    "ru": "Сумма четных положительных и нечетных отрицательных чисел массива"
  },
  "instruction": {
    "en": "Write a function `sumEvenPositiveOddNegative` that takes one parameter - an array.\n\nThe array is of arbitrary length and consists of positive and negative integers.\n\nThe function should return the sum of even positive and odd negative integers in the array.\n\nAn example of running the function:\n```javascript\nsumEvenPositiveOddNegative([-21, 24, -25, 28]) // (-21) + 24 + (-25) + 28 = 6\nsumEvenPositiveOddNegative([-17, -18, -19, -20]) // (-17) + (-19) = -36\nsumEvenPositiveOddNegative([-2, -4, 5, 7]) // 0\n```",
    "ru": "Напишите функцию `sumEvenPositiveOddNegative`, которая принимает один параметр - массив.\n\nМассив произвольной длины и состоит из положительных и отрицательных целых чисел.\n\nФункция должна вернуть сумму четных положительных и нечетных отрицательных чисел массива.\n\nПример запуска функции:\n```javascript\nsumEvenPositiveOddNegative([-21, 24, -25, 28]) // (-21) + 24 + (-25) + 28 = 6\nsumEvenPositiveOddNegative([-17, -18, -19, -20]) // (-17) + (-19) = -36\nsumEvenPositiveOddNegative([-2, -4, 5, 7]) // 0\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function sumEvenPositiveOddNegative(arr) {\n  let sum = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] > 0 || arr[i] % 2 !== 0 && arr[i] < 0) {\n      sum += arr[i]\n    }\n  }\n  return sum\n}",
  "openTest": "it('Created function sumEvenPositiveOddNegative', () => {\n  expect(sumEvenPositiveOddNegative).to.be.a('function');\n});\n\nit('sumEvenPositiveOddNegative([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) should return 30', () => {\n  expect(sumEvenPositiveOddNegative([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])).to.be.equal(30);\n});\n\nit('sumEvenPositiveOddNegative([11, 12, 13, 14, 15, 16]) should return 42', () => {\n  expect(sumEvenPositiveOddNegative([11, 12, 13, 14, 15, 16])).to.be.equal(42);\n});\n\nit('sumEvenPositiveOddNegative([-17, -18, -19, -20]) should return -36', () => {\n  expect(sumEvenPositiveOddNegative([-17, -18, -19, -20])).to.be.equal(-36);\n});\n\nit('sumEvenPositiveOddNegative([-21, 24, -25, 28]) should return 6', () => {\n  expect(sumEvenPositiveOddNegative([-21, 24, -25, 28])).to.be.equal(6);\n});\n\nit('sumEvenPositiveOddNegative([-2, -4, 5, 7]) should return 0', () => {\n  expect(sumEvenPositiveOddNegative([-2, -4, 5, 7])).to.be.equal(0);\n});\n\nit('sumEvenPositiveOddNegative([10, 20, 30]) should return 60', () => {\n  expect(sumEvenPositiveOddNegative([10, 20, 30])).to.be.equal(60);\n});\n\nit('sumEvenPositiveOddNegative([-41, -53, -75]) should return -169', () => {\n  expect(sumEvenPositiveOddNegative([-41, -53, -75])).to.be.equal(-169);\n});\n\nit('sumEvenPositiveOddNegative([]) should return 0', () => {\n  expect(sumEvenPositiveOddNegative([])).to.be.equal(0);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}