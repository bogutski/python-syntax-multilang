{
  "_id": "6696c2cb763f0712c198f1d1",
  "name": {
    "en": "",
    "ru": "Перевернуть массив с использованием метода push"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `reverseArray`, которая принимает массив с разными типами данных.\n\nФункция должна вернуть новый массив, в котором элементы будут расположены в обратном порядке.\n\nЕсли массив пустой, то вернуть строку 'Array is empty'.\n\nИспользуйте метод `push`, для решения этой задачи.\n\n\nПримеры запуска функции:\n```javascript\nreverseArray([1, 2, 3]);       // [3, 2, 1]\nreverseArray([10, 9, 8]);      // [8, 9, 10]\nreverseArray(['a', 'b', 'c']); // ['c', 'b', 'a']\nreverseArray([]);              // 'Array is empty'\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function reverseArray(arr){\n  if(!arr.length) return 'Array is empty';\n  let newArr = [];\n  for(let i = arr.length - 1; i >= 0; i--){\n    newArr.push(arr[i]);\n  }\n  return newArr;\n}",
  "openTest": "it('Created function reverseArray', () => {\n  expect(reverseArray).to.be.a('function');\n});\n\nit('Function reverseArray does not include method \".reverse\"', () => {\n  expect(reverseArray.toString()).to.not.include('.reverse');\n});\n\nit('Function reverseArray includes method \"push\"', () => {\n  expect(reverseArray.toString()).to.include('push');\n});\n\nit('reverseArray([1, 2, 3, 4, 5]) should return [5, 4, 3, 2, 1]', () => {\n  expect(reverseArray([1, 2, 3, 4, 5])).to.deep.equal([5, 4, 3, 2, 1]);\n});\n\nit('reverseArray([10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]) should return [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]', () => {\n  expect(reverseArray([10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0])).to.deep.equal([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n});\n\nit(\"reverseArray(['a', 'b', 'c', 'd', 'e']) should return ['e', 'd', 'c', 'b', 'a']\", () => {\n  expect(reverseArray(['a', 'b', 'c', 'd', 'e'])).to.deep.equal(['e', 'd', 'c', 'b', 'a']);\n});\n\nit(\"reverseArray(['a', 1, 'b', 2, 'c', 3]) should return [3, 'c', 2, 'b', 1, 'a']\", () => {\n  expect(reverseArray(['a', 1, 'b', 2, 'c', 3])).to.deep.equal([3, 'c', 2, 'b', 1, 'a']);\n});\n\nit(\"reverseArray([]) should return 'Array is empty'\", () => {\n  expect(reverseArray([])).to.equal('Array is empty');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}