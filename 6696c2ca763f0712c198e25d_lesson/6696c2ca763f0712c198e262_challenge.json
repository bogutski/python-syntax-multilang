{
  "_id": "6696c2ca763f0712c198e262",
  "name": {
    "en": "",
    "ru": "Определяем какое число"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `defineNumber`, которая принимает параметр – число. Параметр назовите как угодно.\n\nПусть функция возвращает строку, в зависимости от того, какое число передано:\n* если число больше нуля, то функция должна вернуть строку `'positive'`\n* если число меньше нуля, то функция должна вернуть строку `'negative'`\n* если число равно нулю, то функция должна вернуть строку `'zero'`\n* если передано не число, то функция должна вернуть строку `'not a number'`"
  },
  "initialSolution": "fun",
  "completedSolution": "function defineNumber(number) {\n  // if not a number\n  if (typeof number !== 'number') {\n    return 'not a number';\n  }\n\n  if (number > 0) {\n    return 'positive';\n  } else if (number < 0) {\n    return 'negative';\n  } else {\n    return 'zero';\n  }\n}",
  "openTest": "it('Created function defineNumber', () => {\n  expect(defineNumber).to.be.a('function');\n});\n\nit('defineNumber(1) returns \"positive\"', () => {\n  expect(defineNumber(1)).to.be.equal('positive');\n});\n\nit('defineNumber(20) returns \"positive\"', () => {\n  expect(defineNumber(20)).to.be.equal('positive');\n});\n\nit('defineNumber(-1) returns \"negative\"', () => {\n  expect(defineNumber(-1)).to.be.equal('negative');\n});\n\nit('defineNumber(-3) returns \"negative\"', () => {\n  expect(defineNumber(-3)).to.be.equal('negative');\n});\n\nit('defineNumber(0) returns \"zero\"', () => {\n  expect(defineNumber(0)).to.be.equal('zero');\n});\n\nit('defineNumber(\"1\") returns \"not a number\"', () => {\n  expect(defineNumber('1')).to.be.equal('not a number');\n});\n\nit('defineNumber(true) returns \"not a number\"', () => {\n  expect(defineNumber(true)).to.be.equal('not a number');\n});\n\nit('defineNumber(null) returns \"not a number\"', () => {\n  expect(defineNumber(null)).to.be.equal('not a number');\n});\n\nit('defineNumber(undefined) returns \"not a number\"', () => {\n  expect(defineNumber(undefined)).to.be.equal('not a number');\n});\n\nit('defineNumber() returns \"not a number\"', () => {\n  expect(defineNumber()).to.be.equal('not a number');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}