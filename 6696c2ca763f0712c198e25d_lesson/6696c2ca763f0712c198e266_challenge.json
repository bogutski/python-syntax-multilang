{
  "_id": "6696c2ca763f0712c198e266",
  "name": {
    "en": "The area of a circle, rectangle, and triangle",
    "ru": "Площадь круга, прямоугольника и треугольника"
  },
  "instruction": {
    "en": "Let's write a universal function `getArea` that will calculate the area of ​​figures.\n\nThe function takes the following parameters:\n* `shape` - the name of the figure for which the area needs to be calculated. Allowed values: `circle`, `rectangle`, `triangle`.\n* `param1` - the first parameter required to calculate the area of ​​the figure. For a circle, it is the radius, for a rectangle, it is the length of a side, for a triangle, it is the length of the first side.\n* `param2` - the second parameter required to calculate the area of ​​the figure. For a circle, it is not used, for a rectangle, it is the length of a side, for a triangle, it is the length of the second side.\n* `param3` - the third parameter required to calculate the area of ​​the figure. For a circle, it is not used, for a rectangle, it is not used, for a triangle, it is the length of the third side.\n\nIf the first parameter is not equal to `circle`, `rectangle`, or `triangle`, then the function should return the string `Wrong Shape`.\n\nIf the first parameter is equal to `circle`, the function should return the area of ​​the circle, calculated using the formula `3.14 * (radius ** 2)`.\nIf the first parameter is equal to `rectangle`, the function should return the area of ​​the rectangle, calculated using the formula `side1 * side2`.\nIf the first parameter is equal to `triangle`, the function should return the area of ​​the triangle, calculated using the Heron's formula.\n\nKnowing the lengths of the three sides of a triangle, you can find the area of ​​the triangle using Heron's formula:\n\n```javascript\ns = (p * (p - a) * (p - b) * (p - c)) ** 0.5\n```\n\nwhere `p` is the semiperimeter of the triangle, equal to half the sum of the lengths of the three sides of the triangle, `a`, `b`, `c` - the lengths of the sides of the triangle.\nTo calculate the semiperimeter, add the lengths of the three sides of the triangle and divide by 2.\n\n* `** 0.5` - this is the square root.\n\nExamples of function calls:\n```javascript\ngetArea('circle', 5); // 78.5\ngetArea('rectangle', 5, 10); // 50\ngetArea('triangle', 6, 10, 15); // 20.123058912600737\n```",
    "ru": "Напишем универсальную функцию `getArea`, которая будет вычислять площадь фигур.\n\nФункция принимает параметры:\n* `shape` - название фигуры, для которой необходимо вычислить площадь. Допустимые значения: `circle`, `rectangle`, `triangle`.\n* `param1` - первый параметр, необходимый для вычисления площади фигуры. Для круга - это радиус, для прямоугольника - это длина стороны, для треугольника - это длина первой стороны.\n* `param2` - второй параметр, необходимый для вычисления площади фигуры. Для круга - это не используется, для прямоугольника - это длина стороны, для треугольника - это длина второй стороны.\n* `param3` - третий параметр, необходимый для вычисления площади фигуры. Для круга - это не используется, для прямоугольника - это не используется, для треугольника - это длина третьей стороны.\n\nЕсли первый параметр не равен `circle`, `rectangle` или `triangle`, то функция должна вернуть строку `Wrong Shape`.\n\nЕсли первый параметр равен `circle`, то функция должна вернуть площадь круга, вычисленную по формуле `3.14 * (radius ** 2)`.\nЕсли первый параметр равен `rectangle`, то функция должна вернуть площадь прямоугольника, вычисленную по формуле `side1 * side2`.\nЕсли первый параметр равен `triangle`, то функция должна вернуть площадь треугольника, вычисленную по формуле Герона.\n\nЗная длины трех сторон треугольника, можно найти площадь треугольника по формуле Герона:\n\n```javascript\ns = (p * (p - a) * (p - b) * (p - c)) ** 0.5\n```\n\nгде `p` – полупериметр треугольника, равный половине суммы длин трех сторон треугольника, `a`, `b`, `c` - длины сторон треугольника.\nДля вычисления полупериметра сложите длины трех сторон треугольника и разделите на 2.\n\n* `** 0.5` – это извлечение квадратного корня.\n\n\nПримеры запуска функции:\n```javascript\ngetArea('circle', 5); // 78.5\ngetArea('rectangle', 5, 10); // 50\ngetArea('triangle', 6, 10, 15); // 20.123058912600737\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function getArea(shape, param1, param2, param3) {\n  if (shape === 'circle') {\n    return 3.14 * (param1 ** 2);\n  }\n\n  if (shape === 'rectangle') {\n    return param1 * param2;\n  }\n\n  if (shape === 'triangle') {\n    const p = (param1 + param2 + param3) / 2;\n    return (p * (p - param1) * (p - param2) * (p - param3)) ** 0.5;\n  }\n\n  return 'Wrong Shape';\n}",
  "openTest": "it('Created function getArea', () => {\n  expect(getArea).to.be.a('function');\n});\n\nit('getArea(\"circle\", 5) should return 78.5', () => {\n  expect(getArea('circle', 5)).to.be.equal(78.5);\n});\n\nit('getArea(\"circle\", 10) should return 314', () => {\n  expect(getArea('circle', 10)).to.be.equal(314);\n});\n\nit('getArea(\"rectangle\", 5, 10) should return 50', () => {\n  expect(getArea('rectangle', 5, 10)).to.be.equal(50);\n});\n\nit('getArea(\"rectangle\", 10, 10) should return 100', () => {\n  expect(getArea('rectangle', 10, 10)).to.be.equal(100);\n});\n\nit('getArea(\"triangle\", 5, 10, 11) should return 24.979991993593593', () => {\n  expect(getArea('triangle', 5, 10, 11)).to.be.equal(24.979991993593593);\n});\n\nit('getArea(\"triangle\", 3, 4, 5) should return 6', () => {\n  expect(getArea('triangle', 3, 4, 5)).to.be.equal(6);\n});\n\nit('getArea(\"oval\", 5) should return \"Wrong Shape\"', () => {\n  expect(getArea('oval', 5)).to.be.equal('Wrong Shape');\n});\n\nit('getArea(\"cone\", 5) should return \"Wrong Shape\"', () => {\n  expect(getArea('cone', 5)).to.be.equal('Wrong Shape');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}