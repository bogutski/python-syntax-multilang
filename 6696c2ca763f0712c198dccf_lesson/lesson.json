{
  "_id": "6696c2ca763f0712c198dccf",
  "video": {
    "ru": "https://youtu.be/E0E9OELYOHs",
    "en": "https://youtu.be/E0E9OELYOHs",
    "es": ""
  },
  "content": {
    "ru": "Булевый тип (**boolean**) может принимать только два значения: **true (истина)** и **false (ложь)**.\nНапример:\n```javascript\nlet fieldIsDisplayed = true; // переменной fieldIsDisplayed присвоено значение true\nlet jsIsFun = true;          // переменной jsIsFun присвоено значение true\nlet sunIsHot = true;         // переменной sunIsHot присвоено значение true\nlet carOn = true;            // переменной carOn присвоено значение true\nlet carOff = false;          // переменной carOff присвоено значение false\nlet turtleIsFast = false;    // переменной turtleIsFast присвоено значение false\nlet isAdult = false;         // переменной isAdult присвоено значение false\nlet oldAddress = false;      // переменной oldAddress присвоено значение false\n\n```\nБулевые значения также могут быть результатом **сравнений**.\n\nРазберемся с операторами `сравнения`:\n\n* `>` - больше\n* `<` - меньше\n* `==` - не строгое равенство\n* `===` - строгое равенство \n\nС операторами `больше` или `меньше` достаточно просто разобраться.\nНапример: `5 > 3` - это `true`, а `5 < 3` - это `false`.![](https://course-qa-basics.s3.us-west-1.amazonaws.com/the-first-number-is-less-than-the-second.png) ![](https://course-qa-basics.s3.us-west-1.amazonaws.com/the-first-number-is-greater-than-the-second.png)\n\n\nВ чем разница между `==` и `===`?\n\nОператор `не строгого равенства` (`==`) проверяет только значения, не учитывая тип данных. При сравнении разных типов данных, они приводятся к числу. ![](https://course-qa-basics.s3.us-west-1.amazonaws.com/non---strict-equality-of-two-numbers.png)\nНапример: `5 == '5'` - это `true`, а `5 == '6'` - это `false`.\n\nОператор `строгого равенства` (`===`) проверяет значения и тип данных.\nНапример: `5 === '5'` - это `false`, а `5 === 5` - это `true`. ![](https://course-qa-basics.s3.us-west-1.amazonaws.com/a-variable-with-the-value-true.png) ![](https://course-qa-basics.s3.us-west-1.amazonaws.com/a-variable-with-the-value-false.png)\n\nРазберем больше примеров с операторами сравнения:\n\n```javascript\nlet a = 56;                 // переменной a присвоено значение 56\nlet b = 23;                 // переменной b присвоено значение 23\nlet comparison = a > b;     // переменной comparison присвоено значение a > b\nconsole.log( comparison );  // в консоль будет выведено true\nconsole.log ( a === b );    // в консоль будет выведено false\n\nlet x = 10;           // переменной x присвоено значение 10\nlet y = x * 8;        // переменной y присвоено значение x * 8\nconsole.log( x < y ); // в консоль будет выведено true\n\nlet giraffeHeight = 5.5;                         // переменной giraffeHeight присвоено значение 5.5\nlet elephantHeight = 3.5;                        // переменной elephantHeight присвоено значение 3.5\nconsole.log( giraffeHeight > elephantHeight );   // в консоль будет выведено true\nconsole.log( giraffeHeight === elephantHeight ); // в консоль будет выведено false\n\n\nconst bulbOn = 1;                   // переменной bulbOn присвоено значение 1\nconst switchOn = true;              // переменной switchOn присвоено значение true\nconsole.log( bulbOn === switchOn ); // в консоль будет выведено false\nconsole.log( bulbOn == switchOn );  // в консоль будет выведено true\n\nconst num = 55;            // переменной num присвоено значение 55\nconst str = '5' + 5;       // переменной str присвоено значение '55'\nconsole.log(str === num);  // false, так как сравниваются разные типы данных\nconsole.log(str == num);   // true, так как сравниваются только значения\n```\n![](https://course-qa-basics.s3.us-west-1.amazonaws.com/which-word-is-bigger.png)\nВ дальнейших уроках мы рассмотрим подробней операторы сравнения, познакомимся и разберем примеры с другими операторами.![](https://course-qa-basics.s3.us-west-1.amazonaws.com/which-of-the-friends-collected-more-mushrooms.png) ![](https://course-qa-basics.s3.us-west-1.amazonaws.com/the-string-starts-with-'a'.png) ![](https://course-qa-basics.s3.us-west-1.amazonaws.com/the-first-character-of-the-string-is-equal-to-the-last-character.png)\n",
    "en": "Boolean type (**boolean**) can take only two values: **true** and **false**.\nFor example:\n```javascript\nlet fieldIsDisplayed = true; // fieldIsDisplayed is set to true\nlet jsIsFun = true; // the jsIsFun variable is set to true\nlet sunIsHot = true; // the sunIsHot variable is set to true\nlet carOn = true; // the value is set to true in the carOn variable\nlet carOff = false; // the value false is assigned to the carOff variable\nlet turtleIsFast = false; // false value has been assigned to the turtleIsFast variable\nlet isAdult = false; // the isAdult variable has false value\nlet oldAddress = false; // false value is assigned to the oldAddress variable\n\n```\nBoolean values can also be the result of **comparisons**.\n\nLet's deal with the `comparison` operators:\n\n* `>` - more.\n* `<` - less.\n* `==` is not a strict equality\n* `===` - strict equality\n\nThe `more` or `less` operators are easy enough to deal with.\nFor example: `5 > 3` is `true` and `5 < 3` is `false`.![](https://course-qa-basics.s3.us-west-1.amazonaws.com/the-first-number-is-less-than-the-second.png) ![](https://course-qa-basics.s3.us-west-1.amazonaws.com/the-first-number-is-greater-than-the-second.png)\n\n\nWhat is the difference between `==` and `===`?\n\nThe `non-strict equality` (`==`) operator checks only values without considering the data type. When comparing different data types, they are reduced to a number. ![](https://course-qa-basics.s3.us-west-1.amazonaws.com/non---strict-equality-of-two-numbers.png)\nFor example: `5 == '5'` is `true` and `5 == '6'` is `false`.\n\nThe `Strict Equality` (`===`) operator checks values and data type.\nFor example: `5 === '5'` is `false` and `5 === 5` is `true`.![](https://course-qa-basics.s3.us-west-1.amazonaws.com/a-variable-with-the-value-true.png) ![](https://course-qa-basics.s3.us-west-1.amazonaws.com/a-variable-with-the-value-false.png)\n\nLet's break down more examples with comparison operators:\n\n```javascript\nlet a = 56; // value 56 is assigned to the a variable\nlet b = 23; // the value is assigned to b\nlet comparison = a > b; // the value of a > b is assigned to the comparison variable\nconsole.log( comparison ); // console will print true\nconsole.log ( a === b ); // console will print false\n\nlet x = 10; // the x variable will be assigned the value 10\nlet y = x * 8; // the x * 8 value will be assigned to the y variable\nconsole.log( x < y ); // console will print true\n\nlet giraffeHeight = 5.5; // the value is assigned to the giraffeHeight variable\nlet elephantHeight = 3.5; // the value is assigned to the elephantHeight variable\nconsole.log( giraffeHeight > elephantHeight ); // the console will print true\nconsole.log( giraffeHeight === elephantHeight ); // false will be output\n\n\nconst bulbOn = 1; // the value 1 is assigned to the bulbOn variable\nconst switchOn = true; // the switchOn variable is set to true\nconsole.log( bulbOn === switchOn ); // false will be output\nconsole.log( bulbOn == switchOn ); // the console will output true\n\nconst num = 55; // the value is assigned to the num variable\nconst str = '5' + 5; // the value '55' is assigned to the str variable\nconsole.log(str === num); // false, because different data types are being compared\nconsole.log(str == num); // true, as only values are compared\n```\n![](https://course-qa-basics.s3.us-west-1.amazonaws.com/which-word-is-bigger.png)\nIn the next lessons we will take a closer look at comparison operators, get acquainted with them and analyze examples of other operators. ![](https://course-qa-basics.s3.us-west-1.amazonaws.com/which-of-the-friends-collected-more-mushrooms.png) ![](https://course-qa-basics.s3.us-west-1.amazonaws.com/the-string-starts-with-'a'.png) ![](https://course-qa-basics.s3.us-west-1.amazonaws.com/the-first-character-of-the-string-is-equal-to-the-last-character.png)\n",
    "es": "\n"
  }
}