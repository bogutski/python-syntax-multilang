{
  "_id": "6696c2ca763f0712c198dd05",
  "name": {
    "en": "Is it true that the first number is smaller than the second number?",
    "ru": "Действительно ли, первое число меньше второго?"
  },
  "instruction": {
    "en": "Create variables with names `a` and `b` and assign them values of arbitrary numbers.\nCreate a variable with the name `isALessThanB` and assign it the result of comparing variables `a` and `b`.\nThe variable `isALessThanB` should take the value `true` if `a < b`, and `false` if `a >= b`.\n\nHere is an example that is essentially similar to what needs to be done,\nbut adapt it to the requirements of the task:\n```javascript\nconst x = 2;\nconst y = 6;\nconst comparison = x < y;\n```",
    "ru": "Создайте переменные с именами `a` и `b` и присвойте им значения произвольных чисел.\nСоздайте переменную с именем `isALessThanB` и присвойте ей результат сравнения переменных `a` и `b`.\nПеременная `isALessThanB` должна принимать значение `true`, если `a < b`, и `false`, если `a >= b`.\n\nПриведем пример, который принципиально похож на то, что нужно сделать,\nно адаптируйте его к требованиям задачи:\n```javascript\nconst x = 2;\nconst y = 6;\nconst comparison = x < y;\n```"
  },
  "initialSolution": "",
  "completedSolution": "const a = 18;\nconst b = 16;\nconst isALessThanB = a < b;",
  "openTest": "it('Variable `a ` exists and has a value', () => {\n  expect(a).not.undefined;\n});\n\nit('Variable `a` has type `number`', () => {\n  expect(a).a('number');\n});\n\nit('Variable `a` is not NaN', () => {\n  expect(isNaN(a)).false;\n});\nit('Variable `b` exists and has a value', () => {\n  expect(b).not.undefined;\n});\n\nit('Variable `b` has type `number`', () => {\n  expect(b).a('number');\n});\n\nit('Variable `b` is not NaN', () => {\n  expect(isNaN(b)).false;\n});\n\nit('Variable `isALessThanB` exists and has a value', () => {\n  expect(isALessThanB).not.undefined;\n});\n\nit('Variable `isALessThanB` has type `boolean`', () => {\n  expect(isALessThanB).a('boolean');\n});\n\nit('Variable `isALessThanB` has value a <b', () => {\n  expect(isALessThanB).equal(a < b);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "```javascript\nconst a = 18;\nconst b = 16;\nconst isALessThanB = a < b;\n```",
    "ru": "```javascript\nconst a = 18;\nconst b = 16;\nconst isALessThanB = a < b;\n```"
  }
}