{
  "_id": "6696c2ca763f0712c198dd03",
  "name": {
    "en": "Variable with value false",
    "ru": "Переменная со значением false"
  },
  "instruction": {
    "en": "Create a variable named `isCold` and assign it the value `false`.\nCreate a variable named `typeOfIsCold` and assign it the type of the variable `isCold`.\n\nHere is an example that is fundamentally similar to what needs to be done,\nbut adapt it to the requirements of the task:\n```javascript\nconst isAdult = false;\nconst typeOfIsAdult = typeof isAdult;\n```",
    "ru": "Создайте переменную с именем `isCold` и присвойте ей значение `false`.\nСоздайте переменную с именем `typeOfIsCold` и присвойте ей тип переменной `isCold`.\n\nПриведем пример, который принципиально похож на то, что нужно сделать,\nно адаптируйте его к требованиям задачи:\n```javascript\nconst isAdult = false;\nconst typeOfIsAdult = typeof isAdult;\n```"
  },
  "initialSolution": "",
  "completedSolution": "const isCold = false;\nconst typeOfIsCold = typeof isCold;",
  "openTest": "it('Variable `isCold ` exists and has a value', () => {\n  expect(isCold).not.undefined;\n});\n\nit('Variable `isCold` has type `boolean`', () => {\n  expect(isCold).a('boolean');\n});\n\nit('The `isCold` variable has the correct value', () => {\n  expect(isCold).equal(false);\n});\n\nit('The variable `typeOfIsCold` exists and has a value', () => {\n  expect(typeOfIsCold).not.undefined;\n});\n\nit('Variable `typeOfIsCold` has type `string`', () => {\n  expect(typeOfIsCold).a('string');\n});\n\nit('Variable `typeOfIsCold` has the correct value', () => {\n  expect(typeOfIsCold).equal('boolean');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "```javascript\nconst isCold = false;\nconst typeOfIsCold = typeof isCold;\n```",
    "ru": "```javascript\nconst isCold = false;\nconst typeOfIsCold = typeof isCold;\n```"
  }
}