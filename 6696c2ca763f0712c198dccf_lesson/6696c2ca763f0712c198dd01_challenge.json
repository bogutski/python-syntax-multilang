{
  "_id": "6696c2ca763f0712c198dd01",
  "name": {
    "en": "Strict equality of two numbers (===)",
    "ru": "Строгое равенство двух чисел (===)"
  },
  "instruction": {
    "en": "The strict equality operator `===` checks for equality without type coercion.\nIf `a` and `b` have the same values and types, then the result of `a === b` comparison is `true`.\n\nCreate variables named `a` and `b` and assign them values of arbitrary numbers.\nCreate a variable named `isAEqualsB` and assign it the result of strict equality between variables `a` and `b`.\nThe variable `isAEqualsB` should have the value `true` if `a === b`, and `false` otherwise.\n\nHere is an example that is fundamentally similar to what needs to be done,\nbut adapt it to the task requirements:\n```javascript\nconst x = 2;\nconst y = 6;\nconst comparison = x === y;\n```",
    "ru": "Оператор строгого равенства `===` проверяет равенство без приведения типов.\nЕсли `a` и `b` имеют одинаковые значения и типы, то результат сравнения `a === b` возвращает `true`.\n\nСоздайте переменные с именами `a` и `b` и присвойте им значения произвольных чисел.\nСоздайте переменную с именем `isAEqualsB` и присвойте ей результат строгого равенства переменных `a` и `b`.\nПеременная `isAEqualsB` должна принимать значение `true`, если `a === b`, и `false` в противном случае.\n\nПриведем пример, который принципиально похож на то, что нужно сделать,\nно адаптируйте его к требованиям задачи:\n```javascript\nconst x = 2;\nconst y = 6;\nconst comparison = x === y;\n```"
  },
  "initialSolution": "",
  "completedSolution": "const a = 18;\nconst b = 16;\nconst isAEqualsB = a === b;",
  "openTest": "it('Variable `a ` exists and has a value', () => {\n  expect(a).not.undefined;\n});\n\nit('Variable `a` has type `number`', () => {\n  expect(a).a('number');\n});\n\nit('Variable `a` is not NaN', () => {\n  expect(isNaN(a)).false;\n});\nit('Variable `b` exists and has a value', () => {\n  expect(b).not.undefined;\n});\n\nit('Variable `b` has type `number`', () => {\n  expect(b).a('number');\n});\n\nit('Variable `b` is not NaN', () => {\n  expect(isNaN(b)).false;\n});\n\nit('Variable `isAEqualsB` exists and has a value', () => {\n  expect(isAEqualsB).not.undefined;\n});\n\nit('Variable `isAEqualsB` has type `boolean`', () => {\n  expect(isAEqualsB).a('boolean');\n});\n\nit('Variable `isAEqualsB` has value a===b', () => {\n  expect(isAEqualsB).equal(a === b);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "```javascript\nconst a = 18;\nconst b = 16;\nconst isAEqualsB = a === b;\n```",
    "ru": "```javascript\nconst a = 18;\nconst b = 16;\nconst isAEqualsB = a === b;\n```"
  }
}