{
  "_id": "6696c2cb763f0712c198f8df",
  "name": {
    "en": "/*",
    "ru": "Проверка объектов на наличие числовых значений выше определенного порога"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `areAllObjectValuesAboveThreshold`, которая принимает массив объектов и число.\n\nФункция должна возвращать `true`, если все числовые значения в каждом объекте выше заданного порога, и `false` в противном случае.\n\n\nПримеры запуска функции:\n```javascript\nareAllObjectValuesAboveThreshold([{a: 10, b: 20}, {c: 30, d: 40}], 5); // true\nareAllObjectValuesAboveThreshold([{a: 10, b: 20}, {c: 3, d: 40}], 5); // false\nareAllObjectValuesAboveThreshold([{a: 10, b: -20}, {c: 30, d: 40}], 5); // false\nareAllObjectValuesAboveThreshold([{a: 10, b: '20'}, {c: '2', d: 40}], 5); // true\nareAllObjectValuesAboveThreshold([{a: 10, b: 'abc'}, {c: 30, d: 40}], 5); // true\n```"
  },
  "initialSolution": "function areAllObjectValuesAboveThreshold(){\n\n}",
  "completedSolution": "function areAllObjectValuesAboveThreshold(arr, target) {\n  return arr.every(obj => {\n    return Object.values(obj).every(el => typeof el === 'number' ? el > target : true);\n  });\n}",
  "openTest": "it('Created function areAllObjectValuesAboveThreshold', () => {\n  expect(areAllObjectValuesAboveThreshold).to.be.a('function');\n});\n\nit('areAllObjectValuesAboveThreshold([{a: 10, b: 20}, {c: 30, d: 40}], 5) should return true', function() {\n  expect(areAllObjectValuesAboveThreshold([{a: 10, b: 20}, {c: 30, d: 40}], 5)).to.equal(true);\n});\n\nit('areAllObjectValuesAboveThreshold([{a: 10, b: 20}, {c: 3, d: 40}], 5) should return false', function() {\n  expect(areAllObjectValuesAboveThreshold([{a: 10, b: 20}, {c: 3, d: 40}], 5)).to.equal(false);\n});\n\nit('areAllObjectValuesAboveThreshold([{a: 10, b: \"20\"}, {c: 30, d: 40}], 5) should return true', function() {\n  expect(areAllObjectValuesAboveThreshold([{a: 10, b: \"20\"}, {c: 30, d: 40}], 5)).to.equal(true);\n});\n\nit('areAllObjectValuesAboveThreshold([{a: 10, b: \"abc\"}, {c: 30, d: 40}, {e: \"1\", f: \"2\", g: \"3\"}], 5) should return true', function() {\n  expect(areAllObjectValuesAboveThreshold([{a: 10, b: \"abc\"}, {c: 30, d: 40}, {e: '1', f: '2', g: '3'}], 5)).to.equal(true);\n});\n\nit('areAllObjectValuesAboveThreshold([{a: 10, b: -20}, {c: 30, d: 40}], 5) should return false', function() {\n  expect(areAllObjectValuesAboveThreshold([{a: 10, b: -20}, {c: 30, d: 40}], 5)).to.equal(false);\n});\n\nit('areAllObjectValuesAboveThreshold([{x: 100, y: 200}, {z: 300}], 50) should return true', function() {\n  expect(areAllObjectValuesAboveThreshold([{x: 100, y: 200}, {z: 300}], 50)).to.equal(true);\n});\n\nit('areAllObjectValuesAboveThreshold([{t: 5.5, g: 9.9, o: 0.1}, {x: 100.58, y: 20.13, z: 15.8}, {a: 130, b: 200, c: 250, d: 300}], 0) should return true', function() {\n  expect(areAllObjectValuesAboveThreshold([{t: 5.5, g: 9.9, o: 0.1}, {x: 100.58, y: 20.13, z: 15.8}, {a: 130, b: 200, c: 250, d: 300}], 0)).to.equal(true);\n});\n\nit('areAllObjectValuesAboveThreshold([{score: 99, level: 2}, {score: 100, level: 3}], 50) should return false', function() {\n  expect(areAllObjectValuesAboveThreshold([{score: 99, level: 2}, {score: 100, level: 3}], 50)).to.equal(false);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}