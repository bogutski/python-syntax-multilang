{
  "_id": "6696c2cb763f0712c198f8dd",
  "name": {
    "en": "/*",
    "ru": "Проверка, что все объекты содержат хотя бы одно значение из списка"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `doAllObjectsContainValues`, которая принимает массив объектов и массив значений.\n\nФункция должна возвращать `true`, если все объекты в массиве содержат хотя бы одно значение из указанного массива значений, и `false` в противном случае.\n\n\nПримеры запуска функции:\n```javascript\ndoAllObjectsContainValues([{x: 10, y: 20}, {x: 30, y: 40}], [20, 40]); // true\ndoAllObjectsContainValues([{a: 1, b: 2}, {a: 3, b: 4}, {a: 5}], [1, 7, 8]); // false\ndoAllObjectsContainValues([{a: 1, b: 2}, {a: 3, b: 4}, {a: 5, b: 6}], [1, 4, 6]); // true\ndoAllObjectsContainValues([{name: 'Alice', age: 25}, {age: 30}], ['Charlie', 30]); // false\ndoAllObjectsContainValues([{name: 'Alice', age: 25}, {name: 'Bob', age: 40}], ['Alice', 40]); // true\n```"
  },
  "initialSolution": "function doAllObjectsContainValues(){\n\n}",
  "completedSolution": "function doAllObjectsContainValues(arr, values) {\n  return arr.every(object => {\n    const onlyValues = Object.values(object)\n    for(let el of onlyValues) {\n      if(values.includes(el)) return true\n    }\n    return false\n  });\n}",
  "openTest": "it('Created function doAllObjectsContainValues', () => {\n  expect(doAllObjectsContainValues).to.be.a('function');\n});\n\nit('doAllObjectsContainValues([{a: 1, b: 2}, {a: 3, b: 4}, {a: 5, b: 6}], [1, 4, 6]) should return true', function() {\n  expect(doAllObjectsContainValues([{a: 1, b: 2}, {a: 3, b: 4}, {a: 5, b: 6}], [1, 4, 6])).to.equal(true);\n});\n\nit('doAllObjectsContainValues([{a: 1, b: 2}, {a: 3, b: 4}, {a: 5}], [1, 7, 8]) should return false', function() {\n  expect(doAllObjectsContainValues([{a: 1, b: 2}, {a: 3, b: 4}, {a: 5}], [1, 7, 8])).to.equal(false);\n});\n\nit('doAllObjectsContainValues([{x: 10, y: 20}, {x: 30, y: 40}], [20, 40]) should return true', function() {\n  expect(doAllObjectsContainValues([{x: 10, y: 20}, {x: 30, y: 40}], [20, 40])).to.equal(true);\n});\n\nit('doAllObjectsContainValues([{name: \"Alice\", age: 25}, {name: \"Bob\", age: 30}], [\"Alice\", 40]) should return false', function() {\n  expect(doAllObjectsContainValues([{name: \"Alice\", age: 25}, {name: \"Bob\", age: 30}], [\"Alice\", 40])).to.equal(false);\n});\n\nit('doAllObjectsContainValues([{name: \"Alice\", age: 25}, {age: 30}], [\"Charlie\", 30]) should return false', function() {\n  expect(doAllObjectsContainValues([{name: \"Alice\", age: 25}, {age: 30}], [\"Charlie\", 30])).to.equal(false);\n});\n\nit('doAllObjectsContainValues([{name: \"Alice\", age: 25}, {age: 30}], [\"Charlie\", 35]) should return false', function() {\n  expect(doAllObjectsContainValues([{name: \"Alice\", age: 25}, {age: 30}], [\"Charlie\", 35])).to.equal(false);\n});\n\nit('doAllObjectsContainValues([{name: \"John\", score: 100}, {name: \"Jane\", score: 90}], [100, 90]) should return true', function() {\n  expect(doAllObjectsContainValues([{name: \"John\", score: 100}, {name: \"Jane\", score: 90}], [100, 90])).to.equal(true);\n});\n\nit('doAllObjectsContainValues([{item: \"apple\", price: 1.2}, {item: \"banana\", price: 0.8}], [\"apple\", \"grape\"]) should return false', function() {\n  expect(doAllObjectsContainValues([{item: \"apple\", price: 1.2}, {item: \"banana\", price: 0.8}], [\"apple\", \"grape\"])).to.equal(false);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}