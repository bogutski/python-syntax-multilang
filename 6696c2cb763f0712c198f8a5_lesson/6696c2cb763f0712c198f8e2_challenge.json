{
  "_id": "6696c2cb763f0712c198f8e2",
  "name": {
    "en": "/*",
    "ru": "Проверка, что все элементы массива содержат заданное количество уникальных символов"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `areAllElementsContainUniqueChars`, которая принимает массив строк и число.\n\nФункция должна возвращать `true`, если все строки в массиве содержат указанное количество или больше уникальных (не повторяющихся) символов, и `false` в противном случае.\n\n\nПримеры запуска функции:\n```javascript\nareAllElementsContainUniqueChars(['hello', 'world', 'javascript'], 4); // true\nareAllElementsContainUniqueChars(['hello', 'world', 'java'], 5); // false\nareAllElementsContainUniqueChars(['abcd', 'efgh', 'ijkl'], 3); // true\nareAllElementsContainUniqueChars(['aaa', 'bbb', 'ccc'], 2); // false\n```"
  },
  "initialSolution": "function areAllElementsContainUniqueChars(){\n\n}",
  "completedSolution": "function areAllElementsContainUniqueChars(arr, min) {\n  return arr.every(str => {\n    const obj = {}\n\n    for(let char of str) {\n      if(!obj.hasOwnProperty(char)) obj[char] = true\n    }\n\n    return Object.keys(obj).length >= min\n  });\n}",
  "openTest": "it('Created function areAllElementsContainUniqueChars', () => {\n  expect(areAllElementsContainUniqueChars).to.be.a('function');\n});\n\nit('areAllElementsContainUniqueChars([\"hello\", \"world\", \"javascript\"], 4) should return true', function() {\n  expect(areAllElementsContainUniqueChars([\"hello\", \"world\", \"javascript\"], 4)).to.equal(true);\n});\n\nit('areAllElementsContainUniqueChars([\"hello\", \"world\", \"java\"], 5) should return false', function() {\n  expect(areAllElementsContainUniqueChars([\"hello\", \"world\", \"java\"], 5)).to.equal(false);\n});\n\nit('areAllElementsContainUniqueChars([\"abcd\", \"efgh\", \"ijkl\"], 3) should return true', function() {\n  expect(areAllElementsContainUniqueChars([\"abcd\", \"efgh\", \"ijkl\"], 3)).to.equal(true);\n});\n\nit('areAllElementsContainUniqueChars([\"aaa\", \"bbb\", \"ccc\"], 2) should return false', function() {\n  expect(areAllElementsContainUniqueChars([\"aaa\", \"bbb\", \"ccc\"], 2)).to.equal(false);\n});\n\nit('areAllElementsContainUniqueChars([\"abcdef\", \"ghijkl\", \"mnopqr\"], 6) should return true', function() {\n  expect(areAllElementsContainUniqueChars([\"abcdef\", \"ghijkl\", \"mnopqr\"], 6)).to.equal(true);\n});\n\nit('areAllElementsContainUniqueChars([\"aabbcc\", \"ddeeff\", \"gghhiijj\"], 4) should return false', function() {\n  expect(areAllElementsContainUniqueChars([\"aabbcc\", \"ddeeff\", \"gghhiijj\"], 4)).to.equal(false);\n});\n\nit('areAllElementsContainUniqueChars([\"unique\", \"characters\", \"only\"], 5) should return false', function() {\n  expect(areAllElementsContainUniqueChars([\"unique\", \"characters\", \"only\"], 5)).to.equal(false);\n});\n\nit('areAllElementsContainUniqueChars([\"test\", \"data\", \"here\"], 3) should return true', function() {\n  expect(areAllElementsContainUniqueChars([\"test\", \"data\", \"here\"], 3)).to.equal(true);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}