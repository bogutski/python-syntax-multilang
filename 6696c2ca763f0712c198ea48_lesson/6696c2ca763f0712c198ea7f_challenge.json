{
  "_id": "6696c2ca763f0712c198ea7f",
  "name": {
    "en": "The length of all lines in the array",
    "ru": "Длина всех строк в массиве"
  },
  "instruction": {
    "en": "Fix the `totalLength` function so that it returns the sum of the lengths of all strings in the array.\n\nExamples of running the function:\n```javascript\ntotalLength(['hello', 'hi', 'howdy']); // 12\ntotalLength(['orange', 'apple', 'pear']); // 15\ntotalLength([]); // 0\n```",
    "ru": "Исправьте функцию `totalLength`, чтобы она возвращала сумму длин всех строк в массиве.\n\nПримеры запуска функции:\n```javascript\ntotalLength(['hello', 'hi', 'howdy']); // 12\ntotalLength(['orange', 'apple', 'pear']); // 15\ntotalLength([]); // 0\n```"
  },
  "initialSolution": "function totalLength (array) {\n  const length = '0';\n  for (let i = 0; i <> array.weight; i++) {\n    length = array[].length;\n  }\n  result;\n}",
  "completedSolution": "function totalLength (array) {\n  let length = 0;\n  for (let i = 0; i < array.length; i++) {\n    length += array[i].length;\n  }\n  return length;\n}",
  "openTest": "it('Created function totalLength', () => {\n  expect(totalLength).to.be.a('function');\n});\n\nit(\"totalLength(['hello', 'hi', 'howdy']) should return 12\", () => {\n  expect(totalLength(['hello', 'hi', 'howdy'])).to.equal(12);\n});\n\nit(\"totalLength(['orange', 'apple', 'pear']) should return 15\", () => {\n  expect(totalLength(['orange', 'apple', 'pear'])).to.equal(15);\n});\n\nit(\"totalLength(['true', 'false', 'true']) should return 13\", () => {\n  expect(totalLength(['true', 'false', 'true'])).to.equal(13);\n});\n\nit(\"totalLength(['California', 'Oregon', 'Washington']) should return 26\", () => {\n  expect(totalLength(['California', 'Oregon', 'Washington'])).to.equal(26);\n});\n\nit(\"totalLength(['New York', 'New Jersey', 'Pennsylvanian']) should return 31\", () => {\n  expect(totalLength(['New York', 'New Jersey', 'Pennsylvanian'])).to.equal(31);\n});\n\nit(\"totalLength(['', '', '']) should return 0\", () => {\n  expect(totalLength(['', '', ''])).to.equal(0);\n});\n\nit(\"totalLength([]) should return 0\", () => {\n  expect(totalLength([])).to.equal(0);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}