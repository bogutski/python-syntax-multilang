{
  "_id": "6696c2ca763f0712c198ea7b",
  "name": {
    "en": "Finding the sum of negative numbers divisible by 3",
    "ru": "Нахождение суммы отрицательных чисел, кратных 3"
  },
  "instruction": {
    "en": "Write a function `negativeAndDivisibleBy3` that takes two numbers `n1` and `n2` and returns the sum of all negative numbers divisible by 3 in the range `n1` to `n2` inclusive.\n\n`n1` will always be less than or equal to `n2`.\n\nTo check that `n` is a multiple of 3, use the operator `%` (remainder of division).\nA number `n` is a multiple of 3 if the remainder of division by 3 is 0.\n\nExamples of running a function:\n```javascript\nnegativeAndDivisibleBy3(-10, 10); // -9\nnegativeAndDivisibleBy3(-25, -10); // -18\nnegativeAndDivisibleBy3(0, 0); // 0\n```",
    "ru": "Напишите функцию `negativeAndDivisibleBy3`, которая принимает два числа `n1` и `n2` и возвращает сумму всех отрицательных чисел, кратных 3, в диапазоне от `n1` до `n2` включительно.\n\n`n1` всегда будет меньше или равно `n2`.\n\nЧто бы проверить, что число `n` кратно 3, используйте оператор `%` (остаток от деления).\nЧисло `n` кратно 3, если остаток от деления на 3 равен 0.\n\nПримеры запуска функции:\n```javascript\nnegativeAndDivisibleBy3(-10, 10); // -9\nnegativeAndDivisibleBy3(-25, -10); // -18\nnegativeAndDivisibleBy3(0, 0); // 0\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function negativeAndDivisibleBy3(n1, n2) {\n  let sum = 0;\n  for (let i = n1; i <= n2; i++) {\n    if (i < 0 && i % 3 === 0) sum += i;\n  }\n  return sum;\n}",
  "openTest": "it('Created function negativeAndDivisibleBy3', () => {\n  expect(negativeAndDivisibleBy3).to.be.a('function');\n});\n\nit('negativeAndDivisibleBy3(-10, 10) should return -18', () => {\n  expect(negativeAndDivisibleBy3(-10, 10)).to.equal(-18);\n});\n\nit('negativeAndDivisibleBy3(-25, -10) should return -90', () => {\n  expect(negativeAndDivisibleBy3(-25, -10)).to.equal(-90);\n});\n\nit('negativeAndDivisibleBy3(0, 0) should return 0', () => {\n  expect(negativeAndDivisibleBy3(0, 0)).to.equal(0);\n});\n\nit('negativeAndDivisibleBy3(-150, -100) should return -2142', () => {\n  expect(negativeAndDivisibleBy3(-150, -100)).to.equal(-2142);\n});\n\nit('negativeAndDivisibleBy3(50, 100) should return 0', () => {\n  expect(negativeAndDivisibleBy3(50, 100)).to.equal(0);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}