{
  "_id": "6696c2ca763f0712c198ea7d",
  "name": {
    "en": "Result as a string",
    "ru": "Результат в виде строки"
  },
  "instruction": {
    "en": "Write a function `stringResult` that takes two numbers `n1` and `n2`.\n\nThe function should calculate the sum of numbers from `n1` to `n2` inclusive and return a string in the following format:\n\n * `Sum of numbers from ${n1} to ${n2} is ${sum}`, where `sum` is the sum of numbers from `n1` to `n2` inclusive.\n\nExamples of function calls:\n```javascript\nstringResult(1, 5) // \"Sum of numbers from 1 to 5 is 15\"\nstringResult(5, 25) // \"Sum of numbers from 5 to 25 is 315\"\nstringResult(-5, 10) // \"Sum of numbers from -5 to 10 is 40\"\n```",
    "ru": "Напишите функцию `stringResult`, которая принимает два числа `n1` и `n2`.\n\nФункция должна посчитать сумму чисел от `n1` до `n2` включительно и вернуть строку вида:\n\n * `Sum of numbers from ${n1} to ${n2} is ${sum}`, где `sum` - сумма чисел от `n1` до `n2` включительно.\n\nПримеры запуска функции:\n```javascript\nstringResult(1, 5) // \"Sum of numbers from 1 to 5 is 15\"\nstringResult(5, 25) // \"Sum of numbers from 5 to 25 is 315\"\nstringResult(-5, 10) // \"Sum of numbers from -5 to 10 is 40\"\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function stringResult(n1, n2) {\n  let sum = 0;\n  for (let i = n1; i <= n2; i++) {\n    sum += i;\n  }\n  return `Sum of numbers from ${n1} to ${n2} is ${sum}`;\n}",
  "openTest": "it('Created function stringResult', () => {\n  expect(stringResult).to.be.a('function');\n});\n\nit(\"stringResult(1, 5) should return 'Sum of numbers from 1 to 5 is 15'\", () => {\n  expect(stringResult(1, 5)).to.equal('Sum of numbers from 1 to 5 is 15');\n});\n\nit(\"stringResult(5, 25) should return 'Sum of numbers from 5 to 25 is 315'\", () => {\n  expect(stringResult(5, 25)).to.equal('Sum of numbers from 5 to 25 is 315');\n});\n\nit(\"stringResult(125, 143) should return 'Sum of numbers from 125 to 143 is 2546'\", () => {\n  expect(stringResult(125, 143)).to.equal('Sum of numbers from 125 to 143 is 2546');\n});\n\nit(\"stringResult(-25, 5) should return 'Sum of numbers from -25 to 5 is -310'\", () => {\n  expect(stringResult(-25, 5)).to.equal('Sum of numbers from -25 to 5 is -310');\n});\n\nit(\"stringResult(0, 0) should return 'Sum of numbers from 0 to 0 is 0'\", () => {\n  expect(stringResult(0, 0)).to.equal('Sum of numbers from 0 to 0 is 0');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}