{
  "_id": "6696c2cb763f0712c198f6ab",
  "name": {
    "en": "/*",
    "ru": "Анализ и фильтрация данных"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `filterAndReverse`, которая принимает массив чисел и возвращает новый массив, содержащий только чётные числа в обратном порядке.\n\nИспользуйте методы `toReversed()` для их инвертирования массива.\n\n\nПримеры запуска функции:\n```javascript\nfilterAndReverse([1, 2, 3, 4, 5, 6]); // [6, 4, 2]\nfilterAndReverse([12, 15, 23, 42]);   // [42, 12]\nfilterAndReverse([11, 22]);           // [22]\nfilterAndReverse([]);                 // []\n```"
  },
  "initialSolution": "function filterAndReverse(){\n\n}",
  "completedSolution": "function filterAndReverse(array) {\n  let newArr = []\n\n  array.forEach(el => {\n    if(el % 2 === 0) newArr.push(el)\n  })\n\n  return newArr.toReversed();\n}",
  "openTest": "Array.prototype.toReversed = function(){\n  return this.slice().reverse()\n}\n\nit('Created function filterAndReverse', () => {\n  expect(filterAndReverse).to.be.a('function');\n});\n\nit(\"Function filterAndReverse() should include toReversed method\", () => {\n  const result = filterAndReverse.toString();\n  expect(result).to.include('.toReversed()');\n});\n\nit(\"Function filterAndReverse() should not modify the original array\", () => {\n  let originalArray = [1, 2, 3, 4, 5];\n  filterAndReverse(originalArray);\n  expect(originalArray).to.deep.equal([1, 2, 3, 4, 5]);\n});\n\nit(\"filterAndReverse([1, 2, 3, 4, 5, 6]) should return [6, 4, 2]\", () => {\n  expect(filterAndReverse([1, 2, 3, 4, 5, 6])).to.deep.equal([6, 4, 2]);\n});\n\nit(\"filterAndReverse([12, 15, 23, 42]) should return [42, 12]\", () => {\n  expect(filterAndReverse([12, 15, 23, 42])).to.deep.equal([42, 12]);\n});\n\nit(\"filterAndReverse([11, 22]) should return [22]\", () => {\n  expect(filterAndReverse([11, 22])).to.deep.equal([22]);\n});\n\nit(\"filterAndReverse([10, 20, 30, 40]) should return [40, 30, 20, 10]\", () => {\n  expect(filterAndReverse([10, 20, 30, 40])).to.deep.equal([40, 30, 20, 10]);\n});\n\nit(\"filterAndReverse([]) should return []\", () => {\n  expect(filterAndReverse([])).to.deep.equal([]);\n});\n\nit(\"filterAndReverse([1, 3, 5]) should return []\", () => {\n  expect(filterAndReverse([1, 3, 5])).to.deep.equal([]);\n});\n\nit(\"filterAndReverse([2, 4, 6, 8]) should return [8, 6, 4, 2]\", () => {\n  expect(filterAndReverse([2, 4, 6, 8])).to.deep.equal([8, 6, 4, 2]);\n});\n\nit(\"filterAndReverse([123, 456, 789]) should return [456]\", () => {\n  expect(filterAndReverse([123, 456, 789])).to.deep.equal([456]);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}