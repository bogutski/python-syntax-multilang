{
  "_id": "6696c2cb763f0712c198f867",
  "content": {
    "ru": "В разработке на JavaScript часто возникает необходимость найти индекс последнего элемента массива, который удовлетворяет определенному условию. \n\nДля этой задачи у нас есть метод `findLastIndex()`, который поможет нам эффективно решить эту задачу.\n\n\n### Определение и синтаксис\n\nМетод `findLastIndex()` возвращает индекс последнего элемента в массиве, который удовлетворяет предоставленной тестирующей функции. \n\nВ противном случае он возвращает `-1`, что означает, что никакой элемент не удовлетворяет условию.\n\n```javascript\nlet index = array.findLastIndex(callbackFunction(element, index, array), thisArg);\n```\n\n* **callbackFunction**: Функция, вызываемая для каждого элемента массива. Она принимает три аргумента:\n  * **element**: Текущий обрабатываемый элемент массива.\n  * **index** (необязательно): Индекс текущего обрабатываемого элемента в массиве.\n  * **array** (необязательно): Массив, по которому осуществляется проход.\n* **thisArg** (необязательно): Значение, используемое в качестве `this` при выполнении `callbackFunction`.\n\n\n### Примеры использования\n\n**Пример 1**: Поиск последнего не четного числа в массиве\n\n```javascript\nconst numbers = [1, 3, 5, 7, 8, 10];\nconst lastOddIndex = numbers.findLastIndex(num => num % 2 !== 0);\nconsole.log(lastOddIndex); // Вывод: 3\n```\n\nВ этом примере функция обратного вызова проверяет, является ли число не четным (`num % 2 !== 0`). \n\nМетод `findLastIndex()` возвращает индекс последнего элемента, который удовлетворяет этому условию (в данном случае `3`).\n\n\n**Пример 2**: Поиск последнего отрицательного числа в массиве\n\n```javascript\nconst numbers = [4, -6, -1, 8, 10];\nconst lastNegativeIndex = numbers.findLastIndex(num => num < 0);\nconsole.log(lastNegativeIndex); // Вывод: 2\n```\n\nЗдесь функция обратного вызова проверяет, является ли число отрицательным (`num < 0`). \n\nМетод `findLastIndex()` возвращает индекс последнего отрицательного числа (в данном случае `2`).\n\n\n**Пример 3**: Поиск объекта по значению свойства\n\n```javascript\nconst users = [\n    { name: 'Alice', age: 25 },\n    { name: 'Bob', age: 30 },\n    { name: 'Charlie', age: 35 },\n    { name: 'Alice', age: 40 }\n];\nconst index = users.findLastIndex(user => user.age < 40);\nconsole.log(index); // Вывод: 2\n```\n\nВ этом примере функция обратного вызова проверяет, является ли возраст пользователя меньше 40 (`user.age < 40`). \n\nМетод `findLastIndex()` возвращает индекс последнего объекта, который удовлетворяет этому условию (в данном случае `2`).\n\n\n### Преимущества использования `findLastIndex()`\n\n* **Удобство**: Метод `findLastIndex()` обеспечивает удобный способ нахождения индекса последнего элемента, удовлетворяющего заданному условию.\n* **Читаемость**: Код, использующий `findLastIndex()`, часто более читаем и понятен, чем использование циклов `for` или `while`.\n* **Гибкость**: Метод `findLastIndex()` можно комбинировать с различными условиями для поиска элементов различных типов в массиве.\n",
    "en": "# Array.prototype.findLastIndex() – индекс последнего элемента по условию language: en",
    "es": "# Array.prototype.findLastIndex() – индекс последнего элемента по условию language: es"
  },
  "video": {
    "ru": "",
    "en": "",
    "es": ""
  }
}