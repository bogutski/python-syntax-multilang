{
  "_id": "6696c2ca763f0712c198df21",
  "name": {
    "en": "The `attentionToDetail` function outputs 3 lines to the console",
    "ru": "Функция `attentionToDetail` выводит в консоль 3 строки"
  },
  "instruction": {
    "en": "It's very good that you fixed the errors in the `greeting` function. Moving on.\n\nNow we need to write a new function `attentionToDetail` that outputs 3 lines to the console:\n\n```javascript\nP=======================A\n-= Attention to detail =-\nS=======================V\n```\n\n* Use 3 console.logs\n* Write each console.log on a new line\n* Use single quotes.\n* Do everything very carefully.",
    "ru": "Очень хорошо, что вы исправили ошибки в функции `greeting`. Продолжаем.\n\nТеперь надо написать новую функцию `attentionToDetail`, которая выводит в консоль 3 строки:\n\n```javascript\nP=======================A\n-= Attention to detail =-\nS=======================V\n```\n\n* Используйте 3 раза console.log\n* Каждый console.log пишите с новой строки\n* Используйте одинарные кавычки.\n* Делайте все очень внимательно."
  },
  "initialSolution": "fun",
  "completedSolution": "function attentionToDetail() {\n  console.log('P=======================A');\n  console.log('-= Attention to detail =-');\n  console.log('S=======================V');\n}",
  "openTest": "it('Created function attentionToDetail', () => {\n  expect(attentionToDetail).to.be.a('function');\n});\n\nconst entire = attentionToDetail.toString();\nconst body = entire.slice(entire.indexOf('{') + 1, entire.lastIndexOf('}')).trim();\nconst strings = body.split('\\n');\n\nit('Functions contains console.log for first string', () => {\n  expect(body).contains('console.log(\\'P=======================A\\')');\n});\n\nit('Functions contains console.log for second string', () => {\n  expect(body).contains('console.log(\\'-= Attention to detail =-\\')');\n});\n\nit('Functions contains console.log for last string', () => {\n  expect(body).contains('console.log(\\'S=======================V\\')');\n});\n\n// order of console.log is important\nit('Functions contains console.log in correct order', () => {\n  const indexOfFirst = body.indexOf('console.log(\\'P=======================A\\')');\n  const indexOfSecond = body.indexOf('console.log(\\'-= Attention to detail =-\\')');\n  const indexOfThird = body.indexOf('console.log(\\'S=======================V\\')');\n  const arrCurrentOrder = [indexOfFirst, indexOfSecond, indexOfThird];\n  const arrCorrectOrder = [...arrCurrentOrder].sort((a, b) => a - b);\n  expect(arrCorrectOrder).eql(arrCurrentOrder);\n});\n\nit('Function contains 3 console logs', () => {\n  const occurrences = body.split('console.log').length - 1;\n  expect(occurrences).eq(3);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}