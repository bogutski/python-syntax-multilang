{
  "_id": "6696c2ca763f0712c198e040",
  "name": {
    "en": "Calculate salary with bonus",
    "ru": "Рассчитать зарплату с бонусом"
  },
  "instruction": {
    "en": "Write a function `totalSalary` that takes three parameters (numbers):\n\n`salary` - monthly salary\n`monthsCount` - number of months worked\n`bonus` - bonus in percent\n\nThe function should return the amount of wages for all months, including the bonus.\n\nExample: `totalSalary(1000, 3, 10)` should return `3300`.\n\nThe names of the parameters must be the same as in the condition.",
    "ru": "Напиши функцию `totalSalary`, которая принимает три параметра (числа):\n\n`salary` – зарплату за месяц\n`monthsCount` – количество отработанных месяцев\n`bonus` – бонус в процентах\n\nФункция должна возвращать сумму зарплаты за все месяцы с учетом бонуса.\n\nПример: `totalSalary(1000, 3, 10)` должна вернуть `3300`.\n\nНазвания параметров должны быть обязательно такими как в условии."
  },
  "initialSolution": "fun",
  "completedSolution": "function totalSalary(salary, monthsCount, bonus) {\n  const bonusAmount = salary * bonus / 100;\n  return salary * monthsCount + bonusAmount * monthsCount;\n}",
  "openTest": "it('Created function totalSalary', () => {\n  expect(totalSalary).to.be.a('function');\n});\n\n\nit('totalSalary(1000, 3, 10) should return 3300', () => {\n  expect(totalSalary(1000, 3, 10)).to.equal(3300);\n} );\n\nit('totalSalary(1000, 3, 0) should return 3000', () => {\n  expect(totalSalary(1000, 3, 0)).to.equal(3000);\n} );\n\nit('totalSalary(1000, 0, 100) should return 0', () => {\n  expect(totalSalary(1000, 0, 100)).to.equal(0);\n} );\n\nit('Function totalSalary has parameters salary, monthsCount, bonus', () => {\n  // function to string and then to array of arguments\n  const args = totalSalary.toString().match(/\\(([^)]*)\\)/)[1].split(',').map(arg => arg.trim());\n  expect(args).to.be.eql(['salary', 'monthsCount', 'bonus']);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}