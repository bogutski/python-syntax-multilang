{
  "_id": "6696c2ca763f0712c198ee10",
  "content": {
    "ru": "Есть строка, в которой необходимо поменять местами первое и последнее слово:\n\n```javascript\nconst str = 'hello js pasv coding'\n```\n\nОжидается получить результат:\n\n```javascript\nconst str = 'coding js pasv hello'\n```\n\nЕсли несколько методов решения такой задачи.\n\n1. Первый способ.\n\n   Преобразуем данную строку в массив с помощью `split` с разделением по пробелу:\n\n```javascript\nconst str = 'hello js pasv coding';\nconst arr = str.split(' ');\n\nconsole.log(arr); // [ 'hello', 'js', 'pasv', 'coding' ]  // все слова разделились по пробелу и каждому слову присвоился свой индекс\n```\n\nСоздадим переменную `first` и присвоим ей значение первого элемента массива и переменную `last` и присвоим ей значение\nпоследнего элемента массива:\n\n```javascript\nconst str = 'hello js pasv coding';\nconst arr = str.split(' ');\n\nconst first = arr[0];\nconst last = arr[arr.length - 1];\n\n// Проверим результат в консоли\nconsole.log(arr, first, last); // [ 'hello', 'js', 'pasv', 'coding' ] 'hello' 'coding'\n``` \n\nНеобязательно было создавать две переменные, чтобы поменять слова местами, можно было обойтись и одной переменной.\nПодумайте в качестве самостоятельного изучения как это сделать.\n\nТеперь необходимо поменять местами первое и последнее слова местами:\n\n```javascript\narr[0] = last;\narr[arr.length - 1] = first;\n\nconsole.log(arr); // [ 'coding', 'js', 'pasv', 'hello' ]\n```\n\nИ теперь вернем обратно наш массив в строку с помощью метода `join` с разделителем пробел.\n\nПолное решение выглядит так:\n\n```javascript\nconst str = 'hello js pasv coding';\nconst arr = str.split(' ');\n\nconst first = arr[0];\nconst last = arr[arr.length - 1];\n\narr[0] = last;\narr[arr.length - 1] = first;\n\nconst res = arr.join(' ');\n\nconsole.log(res); // \"coding js pasv hello\"\n```\n\nЗадача выполнена!\nПри этом мы сделали несколько лишних операций. Хотелось бы не переводить строку в массив и обратно.\n\n2. Второй способ\n\n   С помощью цикла пройтись от начала до конца строки и найти первое слово (по пробелу), затем найти последнее слово.\n\nДля нахождения последнего слова можно использовать метод `lastIndexOf`, который может найти последний пробел. И от этого пробела пройтись циклом\nдо конца строки, чтобы получить последнее слово.\n\nНо давайте попробуем решить эту задачу без каких-либо методов. Только `if else` и дополнительные переменные. Классический\nпуть программистов.\n\n```javascript\nconst str = 'hello js pasv coding';\n\nlet first = '';\nlet last = '';     // создадим две переменные, в которые будем записывать первое и последнее слово\n```\nКак мы будем искать первое и последнее слова?\n\nТут есть интересный способ:\n\n* Мы можем идти от начала строки, нашли пробел (первое слово) и всё, дальше можно не идти.\n* Когда надо найти последнее слово, можно идти с конца строки, нашли пробел и значит последнее слово перед этим пробелом.\n\nВ этом случае надо написать 2 цикла, один идет от начала строки, второй от конца строки.\n\n```javascript\nconst str = 'hello js pasv coding';\n\nlet first = '';\nlet last = '';\n\nfor(let i = 0; i < str.length; i++) {\n    if(str[i] === ' ') break               // если str[i] равен пробелу, то прерываем цикл\n    else first += str[i]                   // иначе записываем в переменную first\n}\n\n// Посмотрим в консоли, что получилось\nconsole.log(first); // \"hello\"\n```\n\nТеперь делаем то же самое для последнего слова, только идем циклом с конца строки\n\n```javascript\nfor(let i = str.length-1; i >= 0; i--) {\n    if(str[i] === ' ') break               // если str[i] равен пробелу, то прерываем цикл\n    else last = str[i]  + last             // иначе записываем в переменную last\n}\n\n// Посмотрим в консоли, что получилось\n\nconsole.log(first, last); // \"hello\" \"coding\"\n```\nКак нам теперь создать новую результирующую строку?\nСоздадим переменную `res`, а также переменные, которые будут хранить индексы пробелов.\n\n```javascript\nconst str = 'hello js pasv coding';\n\nlet first = '';\nlet last = '';\n\nlet firstSpaceIndex, lastSpaceIndex; // создадим переменные, которые будут хранить индексы пробелов\nlet res = '';\n\nfor(let i = 0; i < str.length; i++) {\n  if (str[i] === ' ') {\n    firstSpaceIndex = i;              // записываем индекс пробела в переменную firstSpaceIndex\n    break;\n  } else first += str[i];\n}\n\nfor(let i = str.length-1; i >= 0; i--) {\n    if(str[i] === ' ') {\n    lastSpaceIndex = i;               // записываем индекс пробела в переменную lastSpaceIndex\n    break;\n    } else last = str[i]  + last;            \n}\n\nconsole.log(first, last, firstSpaceIndex, lastSpaceIndex); // \"hello\" \"coding\" 5 13\n```\n\nТеперь присваиваем результирующей строку `res` значение слова `last` и проходимся циклом от `firstSpaceIndex` до `lastSpaceIndex` и добавляем в `res` все символы из строки `str`.\n\n```javascript\nres = last;          // присваиваем результирующей строке res значение слова last и строка res не содержит пробелов\n\nfor(let i = firstSpaceIndex; i <= lastSpaceIndex; i++) {  // цикл проходит от первого проблела до последнего включительно, чтобы оба пробела попали в строку\n    res += str[i];\n}\nres += first;        // добавляем в конец строки res значение переменной first\n\nconsole.log(res); // \"coding js pasv hello\"\n```\n\nКод работает правильно. Мы не использовали никаких дополнительных методов, ни строк, ни массивов.\n\nСкорее всего это решение, которое будут ожидать от вас на собеседовании.\n\nПопробуйте повторить данный код самостоятельно.",
    "en": "There is a line in which you need to swap the first and the last word:\n\n```javascript\nconst str = 'hello js pasv coding'\n```\n\nExpect to get results:\n\n```javascript\nconst str = 'coding js pasv hello'\n```\n\nIf several methods of solving such a problem.\n\n1. First way.\n\n   Convert this string to an array using `split` with space separation:\n\n```javascript\nconst str = 'hello js pasv coding';\nconst arr = str.split(' ');\n\nconsole.log(arr); // [ 'hello', 'js', 'pasv', 'coding' ]  // all words are separated by a space and an index is assigned to each word\n```\n\nCreate a variable `first` and assign it the value of the first element of the array and a variable `last` and assign it the value of\nof the last element of the array:\n\n```javascript\nconst str = 'hello js pasv coding';\nconst arr = str.split(' ');\n\nconst first = arr[0];\nconst last = arr[arr.length - 1];\n\n// check the result in the console\nconsole.log(arr, first, last); // [ 'hello', 'js', 'pasv', 'coding' ] 'hello' 'coding'\n``` \n\nYou didn't need to create two variables to swap words, you could have done with one variable.\nThink about how to do this as an independent study.\n\nNow you need to swap out the first and last words:\n\n```javascript\narr[0] = last;\narr[arr.length - 1] = first;\n\nconsole.log(arr); // [ 'coding', 'js', 'pasv', 'hello' ]\n```\n\nAnd now we return our array back to a string using the `join` method with a space delimiter.\n\nThe complete solution looks like this:\n\n```javascript\nconst str = 'hello js pasv coding';\nconst arr = str.split(' ');\n\nconst first = arr[0];\nconst last = arr[arr.length - 1];\n\narr[0] = last;\narr[arr.length - 1] = first;\n\nconst res = arr.join(' ');\n\nconsole.log(res); // \"coding js pasv hello\"\n```\n\nThe task is done!\nIn doing so, we have made some unnecessary operations. We would like not to translate the string into an array and back.\n\n2. The second way\n\n   Use the loop to go from the beginning to the end of the line and find the first word (by space), then find the last word.\n\nTo find the last word, you can use the `lastIndexOf` method, which can find the last space. And from that space go through a loop\nto the end of the line to get the last word.\n\nBut let's try to solve this problem without any methods. Just `if else` and extra variables. Classic\nprogrammers way.\n\n```javascript\nconst str = 'hello js pasv coding';\n\nlet first = '';\nlet last = ''; // create two variables in which we write the first and the last word\n```\nHow do we search for the first and last words?\n\nThere's an interesting way:\n\n* We can go from the beginning of the line, found a space (the first word) and that's it, we can go no further.\n* When you need to find the last word, you can go from the end of the line, found a space and means the last word before that space.\n\nIn this case you need to write 2 loops, one from the beginning of the string, the second from the end of the string.\n\n```javascript\nconst str = 'hello js pasv coding';\n\nlet first = '';\nlet last = '';\n\nfor(let i = 0; i < str.length; i++) {\n    if(str[i] === ' ' ') break // if str[i] is a space, break the loop\n    else first += str[i] // otherwise write into the first variable\n}\n\n// check in the console what we got\nconsole.log(first); // \"hello\"\n```\n\nNow do the same for the last word, but loop from the end of the line\n\n```javascript\nfor(let i = str.length-1; i >= 0; i--) {\n    if(str[i] === ' ') break // if str[i] is a space, break the loop\n    else last = str[i] + last // otherwise write into the last variable\n}\n\n// see what we got in the console\n\nconsole.log(first, last); // \"hello\" \"coding\n```\nHow do we create a new result string now?\nLet's create a variable `res` as well as variables that will store the indices of the spaces.\n\n```javascript\nconst str = 'hello js pasv coding';\n\nlet first = '';\nlet last = '';\n\nlet firstSpaceIndex, lastSpaceIndex; // create variables to store the space indices\nlet res = '';\n\nfor(let i = 0; i < str.length; i++) {\n  if (str[i] === ' ') {\n    firstSpaceIndex = i; // write the space index in the firstSpaceIndex variable\n    break;\n  } else first += str[i];\n}\n\nfor(let i = str.length-1; i >= 0; i--) {\n    if(str[i] === ' ') {\n    lastSpaceIndex = i; // write the space index in the lastSpaceIndex variable\n    break;\n    } else last = str[i] + last;     \n}\n\nconsole.log(first, last, firstSpaceIndex, lastSpaceIndex); // \"hello\" \"coding\" 5 13\n```\n\nNow we assign the resulting string `res` to the word `last` and loop from `firstSpaceIndex` to `lastSpaceIndex` and add to `res` all the characters from the string `str`.\n\n```javascript\nres = last; // assign the result string res to the value of the word last and the string res does not contain spaces\n\nfor(let i = firstSpaceIndex; i <= lastSpaceIndex; i++) { // the loop goes from the first problem to the last one inclusive, so that both spaces get into the string\n    res += str[i];\n}\nres += first; // add the value of first variable to the end of res string\n\nconsole.log(res); // \"coding js pasv hello\"\n```\n\nThe code works correctly. We didn't use any additional methods, neither strings nor arrays.\n\nThis is most likely the decision that will be expected of you at the interview.\n\nTry repeating this code yourself.",
    "es": "# Поменять местами первое и последнее слово в строке language: es"
  },
  "video": {
    "ru": "https://youtu.be/r8TEhecbNVE",
    "en": "",
    "es": ""
  }
}