{
  "_id": "6696c2ca763f0712c198e14e",
  "name": {
    "en": "The opposite Boolean value in the formatted string",
    "ru": "Противоположное булево значение в форматированной строке"
  },
  "instruction": {
    "en": "Write a function `oppositeBooleanAnswer` that takes one value and returns a string like\n`'The value 0 converted to opposite boolean is true'`, where\n`0` is the value that was passed to the function, and\n`true` is the result of converting that value to `boolean` and its inversion.",
    "ru": "Напишите функцию `oppositeBooleanAnswer`, которая принимает одно значение и возвращает строку вида\n`'The value 0 converted to opposite boolean is true'`, где\n`0` - это значение, которое было передано в функцию, а\n`true` - это результат преобразования этого значения в `boolean` и его инверсию."
  },
  "initialSolution": "fun",
  "completedSolution": "function oppositeBooleanAnswer(value) {\n  return 'The value ' + value + ' converted to opposite boolean is ' + !Boolean(value);\n}",
  "openTest": "it('Created function oppositeBooleanAnswer', () => {\n  expect(oppositeBooleanAnswer).to.be.a('function');\n});\n\nit('oppositeBooleanAnswer(1) should return \"The value 1 converted to opposite boolean is false\"', () => {\n  expect(oppositeBooleanAnswer(1)).to.equal('The value 1 converted to opposite boolean is false');\n});\n\nit('oppositeBooleanAnswer(0) should return \"The value 0 converted to opposite boolean is true\"', () => {\n  expect(oppositeBooleanAnswer(0)).to.equal('The value 0 converted to opposite boolean is true');\n});\n\nit('oppositeBooleanAnswer(-1) should return \"The value -1 converted to opposite boolean is false\"', () => {\n  expect(oppositeBooleanAnswer(-1)).to.equal('The value -1 converted to opposite boolean is false');\n});\n\nit('oppositeBooleanAnswer(2) should return \"The value 2 converted to opposite boolean is false\"', () => {\n  expect(oppositeBooleanAnswer(2)).to.equal('The value 2 converted to opposite boolean is false');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}