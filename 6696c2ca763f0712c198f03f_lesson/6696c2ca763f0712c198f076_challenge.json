{
  "_id": "6696c2ca763f0712c198f076",
  "name": {
    "en": "",
    "ru": "Второе максимальное отрицательное число"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `secondMaxNegative`, которая принимает массив положительных и отрицательных чисел.\n\nФункция должна вернуть второе `максимальное отрицательное число` из массива.\n\n* Если массив пустой, то функция должна вернуть строку `'Array is empty'`\n* Если в массиве нет отрицательных чисел, то функция должна вернуть строку `'There is no negative numbers'`\n* Если в массиве одно отрицательное число или все отрицательные числа равны, то функция должна вернуть строку `'There is no second max negative number'`\n\nПопробуйте решить задачу по примеру с прошлой задачи.\n\n\nПримеры запуска функции:\n```javascript\nsecondMaxNegative([-1, -2, -3]);               // -2\nsecondMaxNegative([ -7, -6, -5]);              // -6\nsecondMaxNegative([-3, 10, 2, 1, -5, -10, 0]); // -5\nsecondMaxNegative([0, 10, 15, 20, 25]);        // 'There is no negative numbers'\nsecondMaxNegative([-22, -22, -22]);            // 'There is no second max negative number'\nsecondMaxNegative([1, 2, 4, -3, 8, 11]);       // 'There is no second max negative number'\nsecondMaxNegative([]);                         // 'Array is empty'\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function secondMaxNegative(arr){\n  if(arr.length === 0) return 'Array is empty';\n  let max;\n  let secondMax;\n\n  for(let i = 0; i < arr.length; i++){\n    if(arr[i] < 0){\n      if(max === undefined){\n        max = arr[i];\n      } else if(arr[i] > max) {\n        secondMax = max;\n        max = arr[i]\n      } else if(secondMax === undefined && arr[i] !== max){\n        secondMax = arr[i]\n      } else if(arr[i] > secondMax && arr[i] !== max){\n        secondMax = arr[i];\n      }\n    }\n  }\n\n  if(max === undefined) return 'There is no negative numbers';\n  else if(secondMax === undefined) return 'There is no second max negative number';\n  else return secondMax;\n}",
  "openTest": "it('Created function secondMaxNegative', () => {\n  expect(secondMaxNegative).to.be.a('function');\n});\n\nit('Function secondMaxNegative does not include method sort', () => {\n  expect(secondMaxNegative.toString()).to.not.include('sort');\n});\n\nit('Function secondMaxNegative does not include method Math.max', () => {\n  expect(secondMaxNegative.toString()).to.not.include('Math.max');\n});\n\nit('secondMaxNegative([-1, -2, -3, -4, -5]) should return -2', () => {\n  expect(secondMaxNegative([-1, -2, -3, -4, -5])).to.equal(-2);\n});\n\nit('secondMaxNegative([-10, -9, -8, -7, -6, -5]) should return -6', () => {\n  expect(secondMaxNegative([-10, -9, -8, -7, -6, -5])).to.equal(-6);\n});\n\nit('secondMaxNegative([-2, -3, -1, -4, -5]) should return -2', () => {\n  expect(secondMaxNegative([-2, -3, -1, -4, -5])).to.equal(-2);\n});\n\nit('secondMaxNegative([-2, 100, 25, 10, -5, -14, 0]) should return -5', () => {\n  expect(secondMaxNegative([-2, 100, 25, 10, -5, -14, 0])).to.equal(-5);\n});\n\nit('secondMaxNegative([5, 63, 14, 22, 2]) should return \"There is no negative numbers\"', () => {\n  expect(secondMaxNegative([5, 63, 14, 22, 22])).to.equal('There is no negative numbers');\n});\n\nit('secondMaxNegative([-2, -2, -2]) should return \"There is no second max negative number\"', () => {\n  expect(secondMaxNegative([-2, -2, -2])).to.equal('There is no second max negative number');\n});\n\nit('secondMaxNegative([1, 5, 6, -5, 6, 10]) should return \"There is no second max negative number\"', () => {\n  expect(secondMaxNegative([1, 5, 6, -5, 6, 10])).to.equal('There is no second max negative number');\n});\n\nit('secondMaxNegative([]) should return \"Array is empty\"', () => {\n  expect(secondMaxNegative([])).to.equal('Array is empty');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}