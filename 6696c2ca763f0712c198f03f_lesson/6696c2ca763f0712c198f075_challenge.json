{
  "_id": "6696c2ca763f0712c198f075",
  "name": {
    "en": "",
    "ru": "Второе минимальное положительное число"
  },
  "instruction": {
    "en": "",
    "ru": "Исправьте функцию `secondMinPositive`, которая принимает массив положительных и отрицательных чисел.\n\nФункция должна вернуть второе `минимальное положительное число` из массива.\n\n* Если массив пустой, то функция должна вернуть строку `'Array is empty'`\n* Если в массиве нет положительных чисел, то функция должна вернуть строку `'There is no positive numbers'`\n* Если в массиве одно положительное число или все позитивные числа равны, то функция должна вернуть строку `'There is no second min positive number'`\n\nВ функции всего три ошибки, до цикла.\n\nРазберитесь как работает код и перепишите его самостоятельно.\n\n\nПримеры запуска функции:\n```javascript\nsecondMinPositive([1, 2, 3]);                      // 2\nsecondMinPositive([11, 9, 8, 7, 6]);               // 7\nsecondMinPositive([2, 6, 4, 2, 3, 1, 4, 5, 0]);    // 2\nsecondMinPositive([-22, 150, 30, 10, -55, -1, 0]); // 30\nsecondMinPositive([-100, -10, -2, -4]);            // 'There is no positive numbers'\nsecondMinPositive([3, 3, 3]);                      // 'There is no second min positive number'\nsecondMinPositive([-1, -2, 10, -3, -4]);           // 'There is no second min positive number'\nsecondMinPositive([]);                             // 'Array is empty'\n```"
  },
  "initialSolution": "Function secondMinPositive[arr]{\n  if(arr.length !== 0) return 'Array is empty';\n  let min;\n  let secondMin;\n\n  for(let i = 0; i < arr.length; i++){\n\n    if(arr[i] > 0){\n      if(min === undefined){\n        min = arr[i];\n      } else if(arr[i] < min) {\n        secondMin = min;\n        min = arr[i]\n      } else if(secondMin === undefined && arr[i] !== min){\n        secondMin = arr[i]\n      } else if(arr[i] < secondMin && arr[i] !== min){\n        secondMin = arr[i];\n      }\n    }\n\n  }\n\n  if(min === undefined) return 'There is no positive numbers';\n  else if(secondMin === undefined) return 'There is no second min positive number';\n  else return secondMin;\n}",
  "completedSolution": "function secondMinPositive(arr){\n  if(arr.length === 0) return 'Array is empty';\n  let min;\n  let secondMin;\n\n  for(let i = 0; i < arr.length; i++){\n\n    if(arr[i] > 0){\n      if(min === undefined){\n        min = arr[i];\n      } else if(arr[i] < min) {\n        secondMin = min;\n        min = arr[i]\n      } else if(secondMin === undefined && arr[i] !== min){\n        secondMin = arr[i]\n      } else if(arr[i] < secondMin && arr[i] !== min){\n        secondMin = arr[i];\n      }\n    }\n\n  }\n  if(min === undefined) return 'There is no positive numbers';\n  else if(secondMin === undefined) return 'There is no second min positive number';\n  else return secondMin;\n}",
  "openTest": "it('Created function secondMinPositive', () => {\n  expect(secondMinPositive).to.be.a('function');\n});\n\nit('Function secondMinPositive does not include method sort', () => {\n  expect(secondMinPositive.toString()).to.not.include('sort');\n});\n\nit('Function secondMinPositive does not include method Math.min', () => {\n  expect(secondMinPositive.toString()).to.not.include('Math.min');\n});\n\nit('secondMinPositive([1, 2, 3, 4, 5]) should return 2', () => {\n  expect(secondMinPositive([1, 2, 3, 4, 5])).to.equal(2);\n});\n\nit('secondMinPositive([10, 9, 8, 7, 6, 5]) should return 6', () => {\n  expect(secondMinPositive([10, 9, 8, 7, 6, 5])).to.equal(6);\n});\n\nit('secondMinPositive([2, 3, 1, 4, 5]) should return 2', () => {\n  expect(secondMinPositive([2, 3, 1, 4, 5])).to.equal(2);\n});\n\nit('secondMinPositive([-2, 100, 25, 10, -5, -14, 0]) should return 25', () => {\n  expect(secondMinPositive([-2, 100, 25, 10, -5, -14, 0])).to.equal(25);\n});\n\nit('secondMinPositive([-5, -63, -14, -222, -2]) should return \"There is no positive numbers\"', () => {\n  expect(secondMinPositive([-5, -63, -14, -222, -2])).to.equal('There is no positive numbers');\n});\n\nit('secondMinPositive([1, 1, 1, 1, 1]) should return \"There is no second min positive number\"', () => {\n  expect(secondMinPositive([1, 1, 1, 1, 1])).to.equal('There is no second min positive number');\n});\n\nit('secondMinPositive([-1, -5, -6, 5, -6, -10]) should return \"There is no second min positive number\"', () => {\n  expect(secondMinPositive([-1, -5, -6, 5, -6, -10])).to.equal('There is no second min positive number');\n});\n\nit('secondMinPositive([]) should return \"Array is empty\"', () => {\n  expect(secondMinPositive([])).to.equal('Array is empty');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}