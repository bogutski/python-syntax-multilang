{
  "_id": "6696c2ca763f0712c198f077",
  "name": {
    "en": "",
    "ru": "Второе минимальное четное число из массива"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `secondMinEvenNumber`, которая принимает массив чисел и возвращает второе минимальное четное число из массива.\n\n* Если массив пустой или в нем нет четных чисел, то функция должна вернуть `false`.\n* Если в массиве нет второго минимального четного числа, то функция должна вернуть `false`.\n* Второе минимальное число, не должно быть равно минимальному числу.\n\n\nПримеры запуска функции:\n```javascript\nsecondMinEvenNumber([1, 2, 3, 4]);      // 4\nsecondMinEvenNumber([4, 3, -4, 2, 1]);  // 2\nsecondMinEvenNumber([-5, -3, 1, 3, 5]); // false\nsecondMinEvenNumber([1, 1, 1]);         // false\nsecondMinEvenNumber([]);                // false\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function secondMinEvenNumber(arr){\n  if(!arr.length) return false;\n  let min = undefined;\n  let secondMin = undefined;\n\n  for(let i = 0; i < arr.length; i++){\n    if(arr[i] % 2 === 0){\n      if(min === undefined || arr[i] < min) min = arr[i];\n    }\n  }\n  for(let i = 0; i < arr.length; i++){\n    if(arr[i] % 2 === 0){\n      if((secondMin === undefined || arr[i] < secondMin) && arr[i] !== min) secondMin = arr[i];\n    }\n  }\n\n  if(secondMin === undefined) return false;\n  return secondMin;\n}",
  "openTest": "it('Created function secondMinEvenNumber', () => {\n  expect(secondMinEvenNumber).to.be.a('function');\n});\n\nit('Function secondMinEvenNumber does not include method sort', () => {\n  expect(secondMinEvenNumber.toString()).to.not.include('sort');\n});\n\nit('Function secondMinEvenNumber does not include method Math.min', () => {\n  expect(secondMinEvenNumber.toString()).to.not.include('Math.min');\n});\n\nit('secondMinEvenNumber([1, 2, 3, 4, 5]) should return 4', () => {\n  expect(secondMinEvenNumber([1, 2, 3, 4, 5])).to.equal(4);\n});\n\nit('secondMinEvenNumber([10, 8, 6, -2, -4, -8]) should return -4', () => {\n  expect(secondMinEvenNumber([10, 8, 6, -2, -4, -8])).to.equal(-4);\n});\n\nit('secondMinEvenNumber([20, 36, -45, -78, -22, -12, -6]) should return -22', () => {\n  expect(secondMinEvenNumber([20, 36, -45, -78, -22, -12, -6])).to.equal(-22);\n});\n\nit('secondMinEvenNumber([-5, -3, -1, 1, 3, 5]) should return false', () => {\n  expect(secondMinEvenNumber([-5, -3, -1, 1, 3, 5])).to.equal(false);\n});\n\nit('secondMinEvenNumber([10, 10, 10]) should return false', () => {\n  expect(secondMinEvenNumber([10, 10, 10])).to.equal(false);\n});\n\nit('secondMinEvenNumber([]) should return false', () => {\n  expect(secondMinEvenNumber([])).to.equal(false);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}