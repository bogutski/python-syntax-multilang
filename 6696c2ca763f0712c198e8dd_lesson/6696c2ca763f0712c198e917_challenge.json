{
  "_id": "6696c2ca763f0712c198e917",
  "name": {
    "en": "Find all rows in the array",
    "ru": "Найти все строки в массиве"
  },
  "instruction": {
    "en": "Write a function `getAllStr` that takes an array and returns a string consisting of all string elements of the array, separated by a space.\n\nThe last element of the string must not contain a space.\n\nExamples of running the function:\n```javascript\ngetAllStr([\"a\", \"b\", \"c\"]) // \"a b c\"\ngetAllStr([\"a\", \"b\", \"c\", 1, 2, 3]) // \"a b c\"\ngetAllStr([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]) // \"\"\n```",
    "ru": "Напишите функцию `getAllStr`, которая принимает массив и возвращает строку, состоящую из всех строковых элементов массива, разделенных пробелом.\n\nПоследний элемент строки не должен содержать пробела.\n\nПримеры запуска функции:\n```javascript\ngetAllStr([\"a\", \"b\", \"c\"]) // \"a b c\"\ngetAllStr([\"a\", \"b\", \"c\", 1, 2, 3]) // \"a b c\"\ngetAllStr([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]) // \"\"\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function getAllStr(arr){\n  let str = '';\n  for (let i = 0; i < arr.length; i++){\n    if (typeof arr[i] === 'string') str += arr[i] + ' ';\n  }\n  return str.trim();\n}",
  "openTest": "it('Created function getAllStr', () => {\n  expect(getAllStr).to.be.a('function');\n});\n\nit('getAllStr([\"a\", \"b\", \"c\"]) should return \"a b c\"', () => {\n  expect(getAllStr([\"a\", \"b\", \"c\"])).to.be.equal(\"a b c\");\n});\n\nit('getAllStr([\"a\", \"b\", \"c\", 1, 2, 3]) should return \"a b c\"', () => {\n  expect(getAllStr([\"a\", \"b\", \"c\", 1, 2, 3])).to.be.equal(\"a b c\");\n});\n\nit(\"getAllStr([1, 'j', 's', 2, 3, 'b', 'a', 0, 9, 'c']) should return 'j s b a c'\", () => {\n  expect(getAllStr([1, 'j', 's', 2, 3, 'b', 'a', 0, 9, 'c'])).to.be.equal('j s b a c');\n});\n\nit(\"getAllStr([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]) should return ''\", () => {\n  expect(getAllStr([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])).to.be.equal('');\n});\n\nit(\"getAllStr([undefined]) should return ''\", () => {\n  expect(getAllStr([undefined])).to.be.equal('');\n});\n\nit(\"getAllStr([null, 'true', 'or', 'false', NaN]) should return 'true or false'\", () => {\n  expect(getAllStr([null, 'true', 'or', 'false', NaN])).to.be.equal('true or false');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}