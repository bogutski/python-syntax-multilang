{
  "_id": "6696c2ca763f0712c198e914",
  "name": {
    "en": "Dividing an array into positive and negative numbers",
    "ru": "Разделение массива на положительные и отрицательные числа"
  },
  "instruction": {
    "en": "Write a function `positiveAndNegative` that takes an array of numbers and returns an array of two arrays:\n\n* first - the array contains positive numbers,\n* the second one contains negative numbers.\n\nAn example of running the function:\n```javascript\npositiveAndNegative([1, 2, 3, -1, -2, -3]); // [[1, 2, 3], [-1, -2, -3]]\npositiveAndNegative([-5, 5, 0, -10, 10]); // [[5, 0, 10], [-5, -10]]\n```",
    "ru": "Напишите функцию `positiveAndNegative`, которая принимает массив чисел и возвращает массив из двух массивов:\n\n* первый - массив содержит положительные числа,\n* второй - отрицательные.\n\nПример запуска функции:\n```javascript\npositiveAndNegative([1, 2, 3, -1, -2, -3]); // [[1, 2, 3], [-1, -2, -3]]\npositiveAndNegative([-5, 5, 0, -10, 10]); // [[5, 0, 10], [-5, -10]]\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function positiveAndNegative(array){\n  const positive = [];\n  const negative = [];\n  for(let i = 0; i < array.length; i++){\n    if(array[i] < 0) negative.push(array[i]);\n    else positive.push(array[i]);\n  }\n  return [positive, negative];\n}",
  "openTest": "it('Created function positiveAndNegative', () => {\n  expect(positiveAndNegative).to.be.a('function');\n});\n\nit('positiveAndNegative([-100, 5, 5, 5, -100]) should return [[5, 5, 5], [-100, -100]]', () => {\n  expect(positiveAndNegative([-100, 5, 5, 5, -100])).to.deep.equal([[5, 5, 5], [-100, -100]]);\n});\n\nit('positiveAndNegative([1, 2, -2, -1, 2, 1]) should return [[1, 2, 2, 1], [-2, -1]]', () => {\n  expect(positiveAndNegative([1, 2, -2, -1, 2, 1])).to.deep.equal([[1, 2, 2, 1], [-2, -1]]);\n});\n\nit('positiveAndNegative([5, 25, 50, 100, 200, 500]) should return [[5, 25, 50, 100, 200, 500], []]', () => {\n  expect(positiveAndNegative([5, 25, 50, 100, 200, 500])).to.deep.equal([[5, 25, 50, 100, 200, 500], []]);\n});\n\nit('positiveAndNegative([-3, -6, -9, -12, -15, -18]) should return [[], [-3, -6, -9, -12, -15, -18]]', () => {\n  expect(positiveAndNegative([-3, -6, -9, -12, -15, -18])).to.deep.equal([[], [-3, -6, -9, -12, -15, -18]]);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}