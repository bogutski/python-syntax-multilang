{
  "name": "Checking the properties of an object with double nesting",
  "instruction": "As far as we know, objects can contain other objects. Such objects are called nested.\n\nExample:\n```javascript\nownerInfo = {\n  address: {\n    city: 'San Francisco',\n    state: 'CA',\n  },\n   car: {\n    make: 'Toyota',\n    model: 'Corolla',\n  },\n}\n```\nAlthough there are a total of three objects here, there are only two levels of nesting in the example.\nThis is because the objects under the properties `address` and `car` are objects of the same level and are inside the `ownerInfo` object.\n\nThe same methods can be applied to objects nested inside other objects as to regular objects.\nYou just need to access the property that contains the object of interest.\n\nFor example, to find out if the property `make` is present in the `car` object, you can enter any of these options:\n```javascript\nownerInfo.car.hasOwnProperty(\"make\");\nownerInfo[\"car\"].hasOwnProperty(\"make\");\n\"make\" in ownerInfo.car;\n\"make\" in ownerInfo[\"car\"];\n```\nAs the levels of nesting increase, the path to the desired property only gets longer:\n```javascript\nownerInfo.address.state\nownerInfo[\"car\"][\"color\"][\"shade\"]\nownerInfo[\"car\"].color[\"shade\"].type\n```\nNo matter how many levels of nesting there are, the important thing is to specify the correct path to the desired property.\n\nWrite a function `hasDoubleProperty` that takes the parameters:\n* `doubleObject` - an object with double nesting;\n* `propCheck1` - the name of the property at the 1st level of nesting, a string;\n* `propCheck2` - the name of the property at the 2nd level of nesting, a string.\n\nThe function should return the value of the `propCheck2` property if both conditions are met:\n* there is a `propCheck1` property at the `doubleObject` level;\n* there is a `propCheck2` property at the `propCheck1` property level.\nOtherwise, the function should return the string `No such property: propCheck`, where `propCheck` is the name of the property that was not found.\n\nConditions:\n* The check should be performed in the following order: `propCheck1` -> `propCheck2`;\n* If the first property is not found, further checking should be stopped.\n\nFunction call examples:\n```javascript\nhasDoubleProperty({ first: { second: \"mushroom\" } }, \"first\", \"second\");  // \"mushroom\"\nhasDoubleProperty({ make: { model: \"Corolla\", generation: \"E170\" }, year: 2010 }, \"make\", \"generation\");  // \"E170\"\nhasDoubleProperty({ make: { model: \"Corolla\", generation: \"E170\" }, year: 2010 }, \"generation\", \"make\");  // \"No such property: generation\"\nhasDoubleProperty({ make: { model: \"Corolla\", generation: \"E170\" }, year: 2010 }, \"year\", \"model\");  // \"No such property: model\"\nhasDoubleProperty({ make: { model: \"Corolla\", generation: \"E170\" }, year: 2010 }, \"color\", \"model\");  // \"No such property: color\"\n```",
  "instructions": {}
}