{
  "name": "Checking the presence of a property in an object",
  "questions": {
    "0": {
      "name": "What does the hasOwnProperty() method return?",
      "variants": {
        "0": {
          "name": "Logic value: true or false"
        },
        "1": {
          "name": "Key name"
        },
        "2": {
          "name": "Value"
        },
        "3": {
          "name": "Item"
        }
      }
    },
    "1": {
      "name": "What should I write in parentheses in the hasOwnProperty() method?",
      "variants": {
        "0": {
          "name": "Nothing"
        },
        "1": {
          "name": "Key name"
        },
        "2": {
          "name": "true or false"
        },
        "3": {
          "name": "Item"
        }
      }
    },
    "2": {
      "name": "Choose the correct method for the user object with the name key:",
      "variants": {
        "0": {
          "name": "user.hasOwnProperty('name')"
        },
        "1": {
          "name": "user.hasOwnProperty(name)"
        },
        "2": {
          "name": "user.hasOwnProperty()"
        },
        "3": {
          "name": "userhasOwnProperty('name')"
        }
      }
    },
    "3": {
      "name": "Choose the correct syntax for the in operator for this example: const item = { name: 'apple', price:10 }",
      "variants": {
        "0": {
          "name": "price in item"
        },
        "1": {
          "name": "price in 'item'"
        },
        "2": {
          "name": "'price' in item"
        },
        "3": {
          "name": "in item 'price'"
        }
      }
    },
    "4": {
      "name": "What does the hasOwnProperty() method return if the property is in the object?",
      "variants": {
        "0": {
          "name": "false"
        },
        "1": {
          "name": "true"
        },
        "2": {
          "name": "found"
        },
        "3": {
          "name": "exist"
        }
      }
    },
    "5": {
      "name": "What does the hasOwnProperty() method return if the property is not in the object?",
      "variants": {
        "0": {
          "name": "true"
        },
        "1": {
          "name": "undefined"
        },
        "2": {
          "name": "false"
        },
        "3": {
          "name": "null"
        }
      }
    },
    "6": {
      "name": "What are the advantages of the hasOwnProperty() method?",
      "variants": {
        "0": {
          "name": "It has no advantages"
        },
        "1": {
          "name": "The method will show if the property exists, even if it is empty (undefined, NaN, 0, '')"
        },
        "2": {
          "name": "The method will show the property that was deleted"
        },
        "3": {
          "name": "The method will not show the property if it is empty"
        }
      }
    },
    "7": {
      "name": "What does the in method return if there is a property in the object?",
      "variants": {
        "0": {
          "name": "found"
        },
        "1": {
          "name": "true"
        },
        "2": {
          "name": "exist"
        },
        "3": {
          "name": "false"
        }
      }
    },
    "8": {
      "name": "What does the in method return if the property is not in the object?",
      "variants": {
        "0": {
          "name": "null"
        },
        "1": {
          "name": "false"
        },
        "2": {
          "name": "undefined"
        },
        "3": {
          "name": "true"
        }
      }
    },
    "9": {
      "name": "What does the in method return?",
      "variants": {
        "0": {
          "name": "Key name"
        },
        "1": {
          "name": "Logical value"
        },
        "2": {
          "name": "Value"
        },
        "3": {
          "name": "Name of the object"
        }
      }
    }
  }
}