{
  "name": "Камень, ножницы, бумага, ящерица, Спок\n",
  "instruction": "Дан объект:\n```javascript\nconst winner = {\n  rock: {scissors: \"\", lizard: \"\"},\n  paper: {rock: \"\", spock: \"\"},\n  scissors: {paper: \"\", lizard: \"\"},\n  lizard: {spock: \"\", paper: \"\"},\n  spock: {scissors: \"\", rock: \"\"},\n};\n```\n\nОбъект содержит в себе алгоритм игры \"Камень, ножницы, бумага, ящерица, Спок\":\n* `rock` побеждает `scissors` и `lizard`;\n* `scissors` побеждает `paper` и `lizard`;\n* `paper` побеждает `rock` и `spock`;\n* `lizard` побеждает `spock` и `paper`;\n* `spock` побеждает `scissors` и `rock`.\n\nДопишите функцию `getWinner`, которая принимает два аргумента:\n* `player1` - выбор первого игрока, может принимать значения `rock`, `paper`, `scissors`, `lizard` или `spock`, строка;\n* `player2` - выбор второго игрока, может принимать значения `rock`, `paper`, `scissors`, `lizard` или `spock`, строка.\n\nФункция должна возвращать строку с результатом игры:\n* `Player 1 won` - если первый игрок победил;\n* `Player 2 won` - если второй игрок победил;\n* `Draw` - если ничья.\n\nУсловия:\n* Необходимо решить без использования операторов `&&` и `||`.\n\nАлгоритм решения:\n* Обратитесь к свойству объекта `winner` с именем, равным значению аргумента `player1` или `player2`;\n* Проверьте, есть ли в этом вложенном объекте свойство с именем, равным значению аргумента `player2` или `player1`;\n* Верните результат, если свойство есть.\n\nПример запуска функции:\n```javascript\ngetWinner(\"rock\", \"lizard\"); // \"Player 1 won\"\ngetWinner(\"spock\", \"paper\"); // \"Player 2 won\"\ngetWinner(\"scissors\", \"scissors\"); // \"Draw\"\n```",
  "instructions": {}
}