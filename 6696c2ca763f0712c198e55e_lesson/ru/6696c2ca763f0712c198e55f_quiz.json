{
  "name": "Проверка наличия свойства в объекте",
  "questions": {
    "0": {
      "name": "Что возвращает метод hasOwnProperty()?",
      "variants": {
        "0": {
          "name": "Логическое значение: true или false"
        },
        "1": {
          "name": "Название ключа"
        },
        "2": {
          "name": "Значение"
        },
        "3": {
          "name": "Объект"
        }
      }
    },
    "1": {
      "name": "Что надо написать в скобках в методе hasOwnProperty()?",
      "variants": {
        "0": {
          "name": "Ничего"
        },
        "1": {
          "name": "Название ключа"
        },
        "2": {
          "name": "true или false"
        },
        "3": {
          "name": "Объект"
        }
      }
    },
    "2": {
      "name": "Выберите правильное написание метода для объекта user с ключом name:",
      "variants": {
        "0": {
          "name": "user.hasOwnProperty('name')"
        },
        "1": {
          "name": "user.hasOwnProperty(name)"
        },
        "2": {
          "name": "user.hasOwnProperty()"
        },
        "3": {
          "name": "userhasOwnProperty('name')"
        }
      }
    },
    "3": {
      "name": "Выберите правильный синтаксис оператора in для данного примера: const item = { name: 'apple', price:10 }",
      "variants": {
        "0": {
          "name": "price in item"
        },
        "1": {
          "name": "price in 'item'"
        },
        "2": {
          "name": "'price' in item"
        },
        "3": {
          "name": "in item 'price'"
        }
      }
    },
    "4": {
      "name": "Что возвращает метод hasOwnProperty(), если свойство есть в объекте?",
      "variants": {
        "0": {
          "name": "false"
        },
        "1": {
          "name": "true"
        },
        "2": {
          "name": "found"
        },
        "3": {
          "name": "exist"
        }
      }
    },
    "5": {
      "name": "Что возвращает метод hasOwnProperty(), если свойства нет в объекте?",
      "variants": {
        "0": {
          "name": "true"
        },
        "1": {
          "name": "undefined"
        },
        "2": {
          "name": "false"
        },
        "3": {
          "name": "null"
        }
      }
    },
    "6": {
      "name": "В чём преимущества метода hasOwnProperty()?",
      "variants": {
        "0": {
          "name": "У него нет преимуществ"
        },
        "1": {
          "name": "Метод покажет наличие свойства, даже если оно пустое (undefined, NaN, 0, '')"
        },
        "2": {
          "name": "Метод покажет свойство которое было удалено"
        },
        "3": {
          "name": "Метод не покажет свойство, если оно пустое"
        }
      }
    },
    "7": {
      "name": "Что возвращает метод in, если свойство есть в объекте?",
      "variants": {
        "0": {
          "name": "found"
        },
        "1": {
          "name": "true"
        },
        "2": {
          "name": "exist"
        },
        "3": {
          "name": "false"
        }
      }
    },
    "8": {
      "name": "Что возвращает метод in, если свойства нет в объекте?",
      "variants": {
        "0": {
          "name": "null"
        },
        "1": {
          "name": "false"
        },
        "2": {
          "name": "undefined"
        },
        "3": {
          "name": "true"
        }
      }
    },
    "9": {
      "name": "Что возвращает метод in?",
      "variants": {
        "0": {
          "name": "Название ключа"
        },
        "1": {
          "name": "Логическое значение"
        },
        "2": {
          "name": "Значение"
        },
        "3": {
          "name": "Название объекта"
        }
      }
    }
  }
}