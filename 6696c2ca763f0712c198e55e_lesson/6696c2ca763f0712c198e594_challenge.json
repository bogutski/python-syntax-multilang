{
  "_id": "6696c2ca763f0712c198e594",
  "name": {
    "en": "Is there a property in the object, method `hasOwnProperty`",
    "ru": "Есть ли свойство в объекте, метод `hasOwnProperty`"
  },
  "instruction": {
    "en": "Write a function `hasProperty` that takes two parameters:\n\n* `object` - object\n* `property` - the property that will be checked for in the object, string\n\nIn the solution, use the method `hasOwnProperty`.\n\nIf the property `property` is present in the object `object`, the function should return `true`, otherwise `false`.\n\nAn example of running the function:\n```javascript\nhasProperty({ name: 'Alice' }, 'name') // true\nhasProperty({ name: 'Toshiba', model: 'Satellite', year: 2015 }, 'color') // false\n```",
    "ru": "Напишите функцию `hasProperty`, которая принимает два параметра:\n\n* `object` – объект\n* `property` – свойство, которое будет проверяться на наличие в объекте, строка\n\nВ решении используйте метод `hasOwnProperty`.\n\nЕсли свойство `property` присутствует в объекте `object`, то функция должна вернуть `true`, иначе `false`.\n\nПример запуска функции:\n```javascript\nhasProperty({ name: 'Alice' }, 'name') // true\nhasProperty({ name: 'Toshiba', model: 'Satellite', year: 2015 }, 'color') // false\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function hasProperty(object, property) {\n  return object.hasOwnProperty(property);\n}",
  "openTest": "it('Created function hasProperty', () => {\n  expect(hasProperty).to.be.a('function');\n});\n\nit('The function includes the `hasOwnProperty` method', () => {\n  expect(hasProperty.toString()).to.include('.hasOwnProperty(');\n});\n\nit(\"The function returns the correct result for the arguments { name: 'Alice', age: 25 }, 'name'\", () => {\n  expect(hasProperty({ name: 'Alice', age: 25 }, 'name')).eq(true);\n});\n\nit(\"The function returns the correct result for the arguments { name: 'Terminator', model: 'T-800', year: 1984 }, 'color'\", () => {\n  expect(hasProperty({ name: 'Terminator', model: 'T-800', year: 1984 }, 'color')).eq(\n    false,\n  );\n});\n\nit(\"The function returns the correct result for the arguments { name: 'Dog', breed: 'Labrador', color: 'black' }, 'breed'\", () => {\n  expect(hasProperty({ name: 'Dog', breed: 'Labrador', color: 'black' }, 'breed')).eq(\n    true,\n  );\n});\n\nit(\"The function returns the correct result for the arguments { name: 'Taiwan', capital: 'Taipei', population: 23.5 }, 'size'\", () => {\n  expect(hasProperty({ name: 'Taiwan', capital: 'Taipei', population: 23.5 }, 'size')).eq(\n    false,\n  );\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}