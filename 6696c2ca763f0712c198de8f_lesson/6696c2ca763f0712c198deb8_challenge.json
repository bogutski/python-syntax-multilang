{
  "_id": "6696c2ca763f0712c198deb8",
  "name": {
    "en": "Is it true that the number a is a multiple of the number b?",
    "ru": "Верно ли, что число a кратно числу b?"
  },
  "instruction": {
    "en": "Given numbers a and b. Is it true that number a is divisible by number b without a remainder (i.e. number a is a multiple of number b)?\nTo solve the problem, you need to find the remainder of dividing number a by number b and compare it with zero.\n\nCreate variables `a` and `b` and assign them values of arbitrary non-zero numbers.\n\nCreate variable `remainder` and assign it an expression to find the remainder of dividing `a` by `b`.\n\nCreate variable `isMultiple` and assign it the result of comparing variable `remainder` with zero.\n\nHere is an example that is essentially similar to what needs to be done, but adapt it to the requirements of the problem:\n```javascript\nconst x = 6;\nconst y = 2;\nconst rest = x % y;\nconst isRepeat = rest === 0;\n```",
    "ru": "Даны числа a и b. Верно ли, что число a делится на число b без остатка (т.е. число a кратно числу b)?\nДля решения задачи надо найти остаток от деления числа a на число b и сравнить его с нулем.\n\nСоздайте переменные `a` и `b` и присвойте им значения произвольных чисел, не равных нулю.\n\nСоздайте переменную `remainder` и присвойте ей выражение для нахождения остатка от деления `a` на `b`.\n\nСоздайте переменную `isMultiple` и присвойте ей результат сравнения переменной `remainder` с нулем.\n\nПриведем пример, который принципиально похож на то, что нужно сделать, но адаптируйте его к требованиям задачи:\n```javascript\nconst x = 6;\nconst y = 2;\nconst rest = x % y;\nconst isRepeat = rest === 0;\n```"
  },
  "initialSolution": "",
  "completedSolution": "const a = 5;\nconst b = 4;\nconst remainder = a % b;\nconst isMultiple = remainder === 0;",
  "openTest": "it('Variable `a` exists and has a value', () => {\n  expect(a).not.undefined;\n});\n\nit('Variable `a` has a numeric type', () => {\n  expect(a).a('number');\n});\n\nit('Variable `a` is not NaN', () => {\n  expect(isNaN(a)).false;\n});\n\nit('Variable `a` is not 0', () => {\n  expect(a !== 0).to.be.true;\n});\n\nit('Variable `b` exists and has a value', () => {\n  expect(b).not.undefined;\n});\n\nit('Variable `b` has a numeric type', () => {\n  expect(b).a('number');\n});\n\nit('Variable `b` is not NaN', () => {\n  expect(isNaN(b)).false;\n});\n\nit('Variable `b` is not 0', () => {\n  expect(b !== 0).to.be.true;\n});\n\nit('Variable `remainder` has a value', () => {\n  expect(remainder).not.undefined;\n});\n\nit('Variable `remainder` has a numeric type', () => {\n  expect(remainder).a('number');\n});\n\nit('Variable `remainder` is not NaN', () => {\n  expect(isNaN(remainder)).false;\n});\n\nit('Variable `remainder` is calculated correctly', () => {\n  expect(remainder).equal(a % b);\n});\n\nit('Variable `isMultiple` has a value', () => {\n  expect(isMultiple).not.undefined;\n});\n\nit('The `isMultiple` variable has a logical type', () => {\n  expect(isMultiple).a('boolean');\n});\n\nit('The `isMultiple` variable is computed correctly', () => {\n  expect(isMultiple).equal(remainder === 0);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "```javascript\nconst a = 5;\nconst b = 4;\nconst remainder = a % b;\nconst isMultiple = remainder === 0;\n```",
    "ru": "```javascript\nconst a = 5;\nconst b = 4;\nconst remainder = a % b;\nconst isMultiple = remainder === 0;\n```"
  }
}