{
  "_id": "6696c2ca763f0712c198deac",
  "name": {
    "en": "What is the remainder of dividing an odd number by 2?",
    "ru": "Чему равен остаток от деления нечетного числа на 2?"
  },
  "instruction": {
    "en": "An odd number b is given. Is it true that the residue from dividing an odd number by 2 is one?\n\nCreate a variable `b` and assign to it the value of an arbitrary odd positive number.\n\nCreate a variable `remainder` and assign to it an expression to find the remainder of division `b` by 2.\n\nCreate a variable `isOne` and assign to it the result of comparison of variable `remainder` with number 1 (strict equality ===).\n\nHere is an example that is fundamentally similar to what you need to do, but adapt it to the requirements of the problem:\n```\nconst x = 9;\nconst rest = x % 2;\nconst isEqualOne = rest === 1;\n```",
    "ru": "Дано нечетное число b. Верно ли, что остаток от деления нечетного числа на 2 равен единице?\n\nСоздайте переменную `b` и присвойте ей значение произвольного нечетного положительного числа.\n\nСоздайте переменную `remainder` и присвойте ей выражение для нахождения остатка от деления `b` на 2.\n\nСоздайте переменную `isOne` и присвойте ей результат сравнения переменной `remainder` с числом 1 (строгое равенство ===).\n\nПриведем пример, который принципиально похож на то, что нужно сделать, но адаптируйте его к требованиям задачи:\n```javascript\nconst x = 9;\nconst rest = x % 2;\nconst isEqualOne = rest === 1;\n```"
  },
  "initialSolution": "",
  "completedSolution": "const b = 11;\nconst remainder = b % 2;\nconst isOne = remainder === 1;",
  "openTest": "it('Variable `b` exists and has a value', () => {\n  expect(b).not.undefined;\n});\n\nit('Variable `b` has a numeric type', () => {\n  expect(b).a('number');\n});\n\nit('Variable `b` is not NaN', () => {\n  expect(isNaN(b)).false;\n});\n\nit('Variable `b` is a non-negative number', () => {\n  expect(b >= 0).to.be.true;\n});\n\nit('Variable `b` is an odd number', () => {\n  expect(b % 2 === 1).to.be.true;\n});\n\nit('Variable `remainder` has a value', () => {\n  expect(remainder).not.undefined;\n});\n\nit('Variable `remainder` has a numeric type', () => {\n  expect(remainder).a('number');\n});\n\nit('Variable `remainder` is not NaN', () => {\n  expect(isNaN(remainder)).false;\n});\n\nit('Variable `remainder` is calculated correctly', () => {\n  expect(remainder).equal(b % 2);\n});\n\nit('Variable `isOne` has a value', () => {\n  expect(isOne).not.undefined;\n});\n\nit('Variable `isOne` has a boolean type', () => {\n  expect(isOne).a('boolean');\n});\n\nit('Variable `isOne` is computed true', () => {\n  expect(isOne).true;\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": "```javascript\nconst b = 11;\nconst remainder = b % 2;\nconst isOne = remainder === 1;\n```"
  }
}