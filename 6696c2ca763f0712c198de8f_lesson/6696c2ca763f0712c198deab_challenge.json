{
  "_id": "6696c2ca763f0712c198deab",
  "name": {
    "en": "Does the number end in 0?",
    "ru": "Заканчивается ли число на 0?"
  },
  "instruction": {
    "en": "A number num is given. Is it true that the number ends with 0?\n\nCreate a variable `num` and assign to it the value of an arbitrary positive number.\n\nCreate a variable `lastDigit` and assign it an expression to find the last digit of `num` using the operation\nFind the remainder of division by 10.\n\nCreate a variable `isLastDigitIsZero` and give it the result of comparing the last digit to zero.\n\nHere is an example, which is fundamentally similar to what you need to do, but adapt it to the requirements of the task:\n```\nconst x = 90;\nconst rest = x % 10;\nconst isEqualZero = rest === 0;\n```",
    "ru": "Дано число num. Верно ли, что число заканчивается на 0?\n\nСоздайте переменную `num` и присвойте ей значение произвольного положительного числа.\n\nСоздайте переменную `lastDigit` и присвойте ей выражение для нахождения последней цифры числа `num` с использованием операции\nнахождения остатка от деления на 10.\n\nСоздайте переменную `isLastDigitIsZero` и присвойте ей результат сравнения последней цифры с нулём.\n\nПриведем пример, который принципиально похож на то, что нужно сделать, но адаптируйте его к требованиям задачи:\n```javascript\nconst x = 90;\nconst rest = x % 10;\nconst isEqualZero = rest === 0;\n```"
  },
  "initialSolution": "",
  "completedSolution": "const num = 19;\nconst lastDigit = num % 10;\nconst isLastDigitIsZero = lastDigit === 0;",
  "openTest": "it('Variable `num` exists and has a value', () => {\n  expect(num).not.undefined;\n});\n\nit('Variable `num` has a numeric type', () => {\n  expect(num).a('number');\n});\n\nit('Variable `num` is not NaN', () => {\n  expect(isNaN(num)).false;\n});\n\nit('Variable `num` is a non-negative number', () => {\n  expect(num >= 0).to.be.true;\n});\n\nit('Variable `lastDigit` is a value', () => {\n  expect(lastDigit).not.undefined;\n});\n\nit('Variable `lastDigit` has a numeric type', () => {\n  expect(lastDigit).a('number');\n});\n\nit('The `lastDigit` variable is not NaN', () => {\n  expect(isNaN(lastDigit)).false;\n});\n\nit('The `lastDigit` variable is calculated correctly', () => {\n  expect(lastDigit).equal(num % 10);\n});\n\nit('The `isLastDigitIsZero` variable has a value', () => {\n  expect(isLastDigitIsZero).not.undefined;\n});\n\nit('Variable `isLastDigitIsZero` has a logical type', () => {\n  expect(isLastDigitIsZero).a('boolean');\n});\n\nit('Variable `isLastDigitIsZero` is computed correctly', () => {\n  expect(isLastDigitIsZero).equal(lastDigit === 0);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": "```javascript\nconst num = 19;\nconst lastDigit = num % 10;\nconst isLastDigitIsZero = lastDigit === 0;\n```"
  }
}