{
  "_id": "6696c2ca763f0712c198deae",
  "name": {
    "en": "Remainder of dividing one number by another",
    "ru": "Остаток от деления одного числа на другое"
  },
  "instruction": {
    "en": "The numbers a and b are given. Find the remainder of a divided by b.\n\nCreate variables `a` and `b` and assign them values of arbitrary positive numbers.\n\nCreate a variable `remainder` and assign it an expression to find the remainder of division of `a` by `b`.\n\nHere is an example, which is fundamentally similar to what you need to do, but adapt it to the requirements of the problem:\n```\nconst x = 5;\nconst y = 2;\nconst rest = x % y; // 5 % 2 = 1\n```",
    "ru": "Даны числа a и b. Найдите остаток от деления числа a на число b.\n\nСоздайте переменные `a` и `b` и присвойте им значения произвольных положительных чисел.\n\nСоздайте переменную `remainder` и присвойте ей выражение для нахождения остатка от деления `a` на `b`.\n\nПриведем пример, который принципиально похож на то, что нужно сделать, но адаптируйте его к требованиям задачи:\n```javascript\nconst x = 5;\nconst y = 2;\nconst rest = x % y; // 5 % 2 = 1\n```"
  },
  "initialSolution": "",
  "completedSolution": "const a = 5;\nconst b = 2;\nconst remainder = a % b;",
  "openTest": "it('Variable `a` exists and has a value', () => {\n  expect(a).not.undefined;\n});\n\nit('Variable `a` has a numeric type', () => {\n  expect(a).a('number');\n});\n\nit('Variable `a` is not NaN', () => {\n  expect(isNaN(a)).false;\n});\n\nit('Variable `a` is a non-negative number', () => {\n  expect(a >= 0).to.be.true;\n});\n\nit('Variable `b` exists and has a value', () => {\n  expect(b).not.undefined;\n});\n\nit('Variable `b` has a numeric type', () => {\n  expect(b).a('number');\n});\n\nit('Variable `b` is not NaN', () => {\n  expect(isNaN(b)).false;\n});\n\nit('Variable `b` is a non-negative number', () => {\n  expect(b >= 0).to.be.true;\n});\n\nit('Variable `remainder` is a value', () => {\n  expect(remainder).not.undefined;\n});\n\nit('Variable `remainder` has a numeric type', () => {\n  expect(remainder).a('number');\n});\n\nit('Variable `remainder` is not NaN', () => {\n  expect(isNaN(remainder)).false;\n});\n\nit('Variable `remainder` is calculated correctly', () => {\n  expect(remainder).equal(a % b);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": "```javascript\nconst a = 5;\nconst b = 2;\nconst remainder = a % b;\n```"
  }
}