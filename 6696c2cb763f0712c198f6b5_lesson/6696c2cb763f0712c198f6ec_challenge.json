{
  "_id": "6696c2cb763f0712c198f6ec",
  "name": {
    "en": "/*",
    "ru": "Фильтрация и поиск по критериям"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `filterByCriteria`, которая принимает массив объектов, представляющих товары, и объект `criteria`, содержащий различные критерии фильтрации.\n\nФункция должна возвращать новый массив, содержащий товары, которые соответствуют всем предоставленным критериям.\n\nКлючи могут быть разными в объектах.\n\n\nПримеры запуска функции:\n```javascript\nconst products = [\n  { name: \"Laptop\", category: \"Electronics\", price: 1000 },\n  { name: \"Cheese\", category: \"Food\", price: 5 },\n  { name: \"Camera\", category: \"Electronics\", price: 500 },\n  { name: \"Apple\", category: \"Food\", price: 2 }\n];\nconst criteria = { category: \"Electronics\", price: 500 };\nconsole.log(filterByCriteria(products, criteria));\n// [{ name: \"Camera\", category: \"Electronics\", price: 500 }]\n\n\nconst products = [\n  { name: \"Laptop\", category: \"Electronics\", price: 1000, inStock: true },\n  { name: \"Desktop\", category: \"Electronics\", price: 1500, inStock: true },\n  { name: \"Phone\", category: \"Electronics\", price: 500, inStock: false }\n];\nconst criteria = { category: \"Electronics\", inStock: true };\nconsole.log(filterByCriteria(products, criteria));\n// [{name: 'Laptop',\n//   category: 'Electronics',\n//   price: 1000,\n//   inStock: true},\n//  {name: 'Desktop',\n//   category: 'Electronics',\n//   price: 1500,\n//   inStock: true}]\n```"
  },
  "initialSolution": "function filterByCriteria(){\n\n}",
  "completedSolution": "function filterByCriteria(arr, criteria) {\n  return arr.filter(obj => Object.keys(criteria).every(key => criteria[key] === obj[key]));\n}",
  "openTest": "it('Created function filterByCriteria', () => {\n  expect(filterByCriteria).to.be.a('function');\n});\n\nit(\"Function filterByCriteria should include filter method\", () => {\n  const result = filterByCriteria.toString();\n  expect(result).to.include('.filter(');\n});\n\nit(\"filterByCriteria([{name: 'Laptop', category: 'Electronics', price: 1000}, {name: 'Camera', category: 'Electronics', price: 500}], {category: 'Electronics', price: 500}) should return [{name: 'Camera', category: 'Electronics', price: 500}]\", () => {\n  const products = [\n    { name: \"Laptop\", category: \"Electronics\", price: 1000 },\n    { name: \"Camera\", category: \"Electronics\", price: 500 }\n  ];\n  const criteria = { category: \"Electronics\", price: 500 };\n  expect(filterByCriteria(products, criteria)).to.deep.equal([\n    { name: \"Camera\", category: \"Electronics\", price: 500 }\n  ]);\n});\n\nit(\"filterByCriteria([{name: 'Laptop', category: 'Electronics', price: 1000}], {category: 'Food'}) should return []\", () => {\n  const products = [\n    { name: \"Laptop\", category: \"Electronics\", price: 1000 }\n  ];\n  const criteria = { category: \"Food\" };\n  expect(filterByCriteria(products, criteria)).to.deep.equal([]);\n});\n\nit(\"filterByCriteria([], {category: 'Electronics'}) should return []\", () => {\n  expect(filterByCriteria([], {category: 'Electronics'})).to.deep.equal([]);\n});\n\nit(\"filterByCriteria([{name: 'Laptop', category: 'Electronics'}], {}) should return [{name: 'Laptop', category: 'Electronics'}]\", () => {\n  const products = [\n    { name: \"Laptop\", category: \"Electronics\" }\n  ];\n  expect(filterByCriteria(products, {})).to.deep.equal([\n    { name: \"Laptop\", category: \"Electronics\" }\n  ]);\n});\n\nit(\"filterByCriteria([{name: 'Cheese', category: 'Food', price: 5}, {name: 'Apple', category: 'Food', price: 2}], {category: 'Food', price: 5}) should return [{name: 'Cheese', category: 'Food', price: 5}]\", () => {\n  const products = [\n    { name: \"Cheese\", category: \"Food\", price: 5 },\n    { name: \"Apple\", category: \"Food\", price: 2 }\n  ];\n  const criteria = { category: \"Food\", price: 5 };\n  expect(filterByCriteria(products, criteria)).to.deep.equal([{ name: \"Cheese\", category: \"Food\", price: 5 }]);\n});\n\nit(\"filterByCriteria([{name: 'Camera', category: 'Electronics', price: 500}], {price: 1000}) should return []\", () => {\n  const products = [\n    { name: \"Camera\", category: \"Electronics\", price: 500 }\n  ];\n  const criteria = { price: 1000 };\n  expect(filterByCriteria(products, criteria)).to.deep.equal([]);\n});\n\nit(\"filterByCriteria([{name: 'Camera', category: 'Electronics', inStock: true}, {name: 'TV', category: 'Electronics', inStock: false}], {inStock: true}) should return [{name: 'Camera', category: 'Electronics', inStock: true}]\", () => {\n  const products = [\n    { name: \"Camera\", category: \"Electronics\", inStock: true },\n    { name: \"TV\", category: \"Electronics\", inStock: false }\n  ];\n  const criteria = { inStock: true };\n  expect(filterByCriteria(products, criteria)).to.deep.equal([\n    { name: \"Camera\", category: \"Electronics\", inStock: true }\n  ]);\n});\n\nit(\"filterByCriteria([{name: 'Laptop', category: 'Electronics', price: 1000, inStock: true}, {name: 'Desktop', category: 'Electronics', price: 1500, inStock: true}, {name: 'Phone', category: 'Electronics', price: 500, inStock: false}], {category: 'Electronics', inStock: true}) should return [{name: 'Laptop', category: 'Electronics', price: 1000, inStock: true}, {name: 'Desktop', category: 'Electronics', price: 1500, inStock: true}]\", () => {\n  const products = [\n    { name: \"Laptop\", category: \"Electronics\", price: 1000, inStock: true },\n    { name: \"Desktop\", category: \"Electronics\", price: 1500, inStock: true },\n    { name: \"Phone\", category: \"Electronics\", price: 500, inStock: false }\n  ];\n  const criteria = { category: \"Electronics\", inStock: true };\n  expect(filterByCriteria(products, criteria)).to.deep.equal([\n    { name: \"Laptop\", category: \"Electronics\", price: 1000, inStock: true },\n    { name: \"Desktop\", category: \"Electronics\", price: 1500, inStock: true }\n  ]);\n});\n\nit(\"filterByCriteria([{name: 'TV', category: 'Electronics', price: 800}], {name: 'TV'}) should return [{name: 'TV', category: 'Electronics', price: 800}]\", () => {\n  const products = [\n    { name: \"TV\", category: \"Electronics\", price: 800 }\n  ];\n  const criteria = { name: \"TV\" };\n  expect(filterByCriteria(products, criteria)).to.deep.equal([\n    { name: \"TV\", category: \"Electronics\", price: 800 }\n  ]);\n});\n\nit(\"filterByCriteria([{name: 'Mouse', category: 'Electronics'}, {name: 'Keyboard', category: 'Electronics'}], {category: 'Electronics'}) should return [{name: 'Mouse', category: 'Electronics'}, {name: 'Keyboard', category: 'Electronics'}]\", () => {\n  const products = [\n    { name: \"Mouse\", category: \"Electronics\" },\n    { name: \"Keyboard\", category: \"Electronics\" }\n  ];\n  expect(filterByCriteria(products, { category: \"Electronics\" })).to.deep.equal([\n    { name: \"Mouse\", category: \"Electronics\" },\n    { name: \"Keyboard\", category: \"Electronics\" }\n  ]);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}