{
  "_id": "6696c2cb763f0712c198f6e9",
  "name": {
    "en": "/*",
    "ru": "Фильтрация чётных чисел"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `filterEvenNumbers`, которая принимает массив чисел и возвращает новый массив, содержащий только чётные числа из исходного массива.\n\n\nПримеры запуска функции:\n```javascript\nfilterEvenNumbers([1, 2, 3, 4, 5, 6]); // [2, 4, 6]\nfilterEvenNumbers([12, 15, 23, 42]);   // [12, 42]\nfilterEvenNumbers([11, 22]);           // [22]\nfilterEvenNumbers([]);                 // []\n```"
  },
  "initialSolution": "function filterEvenNumbers(){\n\n}",
  "completedSolution": "function filterEvenNumbers(array) {\n  return array.filter(n => n % 2 === 0);\n}",
  "openTest": "it('Created function filterEvenNumbers', () => {\n  expect(filterEvenNumbers).to.be.a('function');\n});\n\nit(\"Function filterEvenNumbers should include filter method\", () => {\n  const result = filterEvenNumbers.toString();\n  expect(result).to.include('.filter(');\n});\n\nit(\"filterEvenNumbers([1, 2, 3, 4, 5, 6]) should return [2, 4, 6]\", () => {\n  expect(filterEvenNumbers([1, 2, 3, 4, 5, 6])).to.deep.equal([2, 4, 6]);\n});\n\nit(\"filterEvenNumbers([12, 15, 23, 42]) should return [12, 42]\", () => {\n  expect(filterEvenNumbers([12, 15, 23, 42])).to.deep.equal([12, 42]);\n});\n\nit(\"filterEvenNumbers([11, 22]) should return [22]\", () => {\n  expect(filterEvenNumbers([11, 22])).to.deep.equal([22]);\n});\n\nit(\"filterEvenNumbers([]) should return []\", () => {\n  expect(filterEvenNumbers([])).to.deep.equal([]);\n});\n\nit(\"filterEvenNumbers([1, 3, 5]) should return []\", () => {\n  expect(filterEvenNumbers([1, 3, 5])).to.deep.equal([]);\n});\n\nit(\"filterEvenNumbers([2, 4, 6, 8, 10]) should return [2, 4, 6, 8, 10]\", () => {\n  expect(filterEvenNumbers([2, 4, 6, 8, 10])).to.deep.equal([2, 4, 6, 8, 10]);\n});\n\nit(\"filterEvenNumbers([21, 43, 65]) should return []\", () => {\n  expect(filterEvenNumbers([21, 43, 65])).to.deep.equal([]);\n});\n\nit(\"filterEvenNumbers([20, 25, 30, 35, 40]) should return [20, 30, 40]\", () => {\n  expect(filterEvenNumbers([20, 25, 30, 35, 40])).to.deep.equal([20, 30, 40]);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}