{
  "_id": "6696c2ca763f0712c198ed52",
  "name": {
    "en": "Count the number of words behind the parentheses",
    "ru": "Посчитать количество слов за скобками"
  },
  "instruction": {
    "en": "Write a function `outsideBrackets` that takes a string and returns the number of words behind the brackets.\n\nThere is one space after each word.\n\nA closing parenthesis cannot be in front of an opening one.\n\nA pair of parentheses is always present in the string.\n\nSolution algorithm:\n\n* Use the `indexOf` method to find the first bracket and write it to the `firstBracket` variable.\n\n* Using the `indexOf` method find the first bracket and write it into the `secondBracket` variable.\n\n* Run the first loop that starts with 0 and ends at the index `firstBracket` counting words.\n\n* Run the second loop which starts with `secondBracket` and ends with the last index of the string.\n\nExample of running a function:\n\n```javascript\noutsideBrackets('one (two) three') // 2\noutsideBrackets('everything () is fine') // 3\noutsideBrackets('()') // 0\n```",
    "ru": "Напишите функцию `outsideBrackets`, которая принимает строку и возвращает количество слов за скобками.\n\nПосле каждого слова есть один пробел.\n\nЗакрывающая скобка не может находиться перед открывающейся.\n\nПара скобок всегда присутствует в строке.\n\nАлгоритм решения:\n\n* С помощью метода `indexOf` найти первую скобку и записать ее в переменную `firstBracket`.\n\n* С помощью метода `indexOf` найти вторую скобку и записать ее в переменную `secondBracket`.\n\n* Запустить первый цикл, который начинает проверку с 0 и заканчивается на индексе`firstBracket` считая слова.\n\n* Запустить второй цикл, который начинает проверку с `secondBracket` и заканчивается последним индексом строки.\n\nПример запуска функции:\n\n```javascript\noutsideBrackets('one (two) three') // 2\noutsideBrackets('everything () is fine') // 3\noutsideBrackets('()') // 0\n```"
  },
  "initialSolution": "function",
  "completedSolution": "function outsideBrackets(str){\n  let count = 0;\n  str = ' ' + str;\n  const firstBracket = str.indexOf('(');\n  const secondBracket = str.indexOf(')');\n  for (let i = 0; i < firstBracket-1; i++){\n    if(str[i] === ' ' && str[i+1] !== ' ')count++;\n  }\n  for (let i = secondBracket; i < str.length; i++){\n    if(str[i] === ' ' && str[i+1] !== ' ')count++;\n  }\n  return count;\n}",
  "openTest": "it('outsideBrackets is a function', () => {\n  expect(outsideBrackets).to.be.a('function');\n})\nit(\"outsideBrackets('one (two) three') should return 2\", () =>{\n  expect(outsideBrackets('one (two) three')).equal(2);\n});\nit(\"outsideBrackets('everything () is fine') should return 3\", () =>{\n  expect(outsideBrackets('everything () is fine')).equal(3);\n});\nit(\"outsideBrackets('()') should return 3\", () =>{\n  expect(outsideBrackets('()')).equal(0);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}