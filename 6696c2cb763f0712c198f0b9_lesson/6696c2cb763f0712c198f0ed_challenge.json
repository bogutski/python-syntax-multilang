{
  "_id": "6696c2cb763f0712c198f0ed",
  "name": {
    "en": "Delete all array elements except numbers",
    "ru": "Удалить все элементы массива, кроме чисел"
  },
  "instruction": {
    "en": "Write a function `onlyNumbers` that takes an array with different data types and returns an array only with numbers.\n\nIf the array is empty or does not contain any numbers, the function should return an empty array.\n\n\nExamples of function calls:\n```javascript\nonlyNumbers([1, 'test', 42, false, 4, undefined]); // [1, 42, 4]\nonlyNumbers([1, 2, '3', 4, 5]);                    // [1, 2, 4, 5]\nonlyNumbers([10]);                                 // [10]\nonlyNumbers([]);                                   // []\n```",
    "ru": "Напишите функцию `onlyNumbers`, которая принимает массив с разными типами данных и возвращает массив только с числами.\n\nЕсли массив пустой или нет чисел, то функция должна вернуть пустой массив.\n\n\nПримеры запуска функции:\n```javascript\nonlyNumbers([1, 'test', 42, false, 4, undefined]); // [1, 42, 4]\nonlyNumbers([1, 2, '3', 4, 5]);                    // [1, 2, 4, 5]\nonlyNumbers([10]);                                 // [10]\nonlyNumbers([]);                                   // []\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function onlyNumbers(arr){\n  const newArr = [];\n  for (let i = 0; i < arr.length; i++){\n    if (typeof arr[i] === 'number'){\n      newArr.push(arr[i])\n    }\n  }\n  return newArr\n}",
  "openTest": "it('Created function onlyNumbers', () => {\n  expect(onlyNumbers).to.be.a('function');\n});\n\nit(\"onlyNumbers([1, 42, false, 4, undefined, 'test']) should return [1, 42, 4]\", () => {\n  expect(onlyNumbers([1, 42, false, 4, undefined, 'test'])).to.deep.equal([1, 42, 4]);\n});\n\nit(\"onlyNumbers([1, 2, 3, 4, 5]) should return [1, 2, 3, 4, 5]\", () => {\n  expect(onlyNumbers([1, 2, 3, 4, 5])).to.deep.equal([1, 2, 3, 4, 5]);\n});\n\nit(\"onlyNumbers(['10', 20, '30', 40, '50', 100]) should return [20, 40, 100]\", () => {\n  expect(onlyNumbers(['10', 20, '30', 40, '50', 100])).to.deep.equal([20, 40, 100]);\n});\n\nit(\"onlyNumbers([555]) should return [555]\", () => {\n  expect(onlyNumbers([555])).to.deep.equal([555]);\n});\n\nit(\"onlyNumbers([]) should return []\", () => {\n  expect(onlyNumbers([])).to.deep.equal([]);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}