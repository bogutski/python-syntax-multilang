{
  "_id": "6696c2cb763f0712c198f0ba",
  "name": {
    "ru": "Удалить из массива все элементы, которые не являются числами",
    "en": "Remove all elements from the array that are not numbers",
    "es": ""
  },
  "acceptableMistakes": 1,
  "active": true,
  "questions": [
    {
      "_id": "6696c2cb763f0712c198f0bb",
      "name": {
        "ru": "Выберите значения, которые имеют тип данных Number",
        "en": "Select values that have the data type Number",
        "es": ""
      },
      "description": {
        "ru": "",
        "en": "",
        "es": ""
      },
      "answerType": "multi",
      "variants": [
        {
          "_id": "6696c2cb763f0712c198f0bc",
          "name": {
            "ru": "99",
            "en": "99",
            "es": ""
          },
          "correct": true
        },
        {
          "_id": "6696c2cb763f0712c198f0bd",
          "name": {
            "ru": "NaN",
            "en": "NaN",
            "es": ""
          },
          "correct": true
        },
        {
          "_id": "6696c2cb763f0712c198f0be",
          "name": {
            "ru": "(-5 / 0)",
            "en": "(-5 / 0)",
            "es": ""
          },
          "correct": true
        },
        {
          "_id": "6696c2cb763f0712c198f0bf",
          "name": {
            "ru": "Infinity",
            "en": "Infinity",
            "es": ""
          },
          "correct": true
        }
      ]
    },
    {
      "_id": "6696c2cb763f0712c198f0c0",
      "name": {
        "ru": "Верно ли, что результатом запуска кода ниже будет [7.3, 6, 2, 22, -5]?",
        "en": "Is it true that the result of running the code below is [7.3, 6, 2, 22, -5]?",
        "es": ""
      },
      "description": {
        "ru": "```javascript\nconst arr = [7.3, (-10 / 0), 'plus', 6, NaN, 2, (11 * 2), null, -5, (2 / 0)];\nconst numbers = [];\nfor(let i = 0; i < arr.length; i++){\n  if(typeof arr[i] === 'number' && !isNaN(arr[i])){\n    numbers.push(arr[i]);\n  }\n}\nconsole.log(numbers)\n```",
        "en": "```javascript\nconst arr = [7.3, (-10 / 0), 'plus', 6, NaN, 2, (11 * 2), null, -5, (2 / 0)];\nconst numbers = [];\nfor(let i = 0; i < arr.length; i++){\n  if(typeof arr[i] === 'number' && !isNaN(arr[i])){\n    numbers.push(arr[i]);\n  }\n}\nconsole.log(numbers)\n```",
        "es": ""
      },
      "answerType": "single",
      "variants": [
        {
          "_id": "6696c2cb763f0712c198f0c1",
          "name": {
            "ru": "Верно, результатом будет [7.3, 6, 2, 22, -5]",
            "en": "Right, the result is [7.3, 6, 2, 22, -5]",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2cb763f0712c198f0c2",
          "name": {
            "ru": "Неверно, результатом будет [7.3, -Infinity, 6, 2, 22, -5, Infinity]",
            "en": "Incorrect, the result is [7.3, -Infinity, 6, 2, 22, -5, Infinity]",
            "es": ""
          },
          "correct": true
        },
        {
          "_id": "6696c2cb763f0712c198f0c3",
          "name": {
            "ru": "Неверно, результатом будет [7.3, (-10 / 0), 6, 2, (11 * 2), -5, (2 / 0)]",
            "en": "Incorrect, the result is [7.3, (-10 / 0), 6, 2, (11 * 2), -5, (2 / 0)]",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2cb763f0712c198f0c4",
          "name": {
            "ru": "Неверно, результатом будет [7.3, Infinity, 6, 2, 22, -5, -Infinity]",
            "en": "Incorrect, the result is [7.3, Infinity, 6, 2, 22, -5, -Infinity]",
            "es": ""
          },
          "correct": false
        }
      ]
    },
    {
      "_id": "6696c2cb763f0712c198f0c5",
      "name": {
        "ru": "Что выведется в консоль в результате запуска кода ниже?",
        "en": "What will be output to the console as a result of running the code below?",
        "es": ""
      },
      "description": {
        "ru": "```javascript\nconst arr = [(5 - 7), NaN, 77, (-35 / 0), (2 * 7), (9 / 0)];\nconst numbers = [];\nfor(let i = 0; i < arr.length; i++){\n  if(typeof arr[i] === 'number' && !isNaN(arr[i]) && arr[i] !== Infinity && arr[i] !== -Infinity){\n    numbers.push(arr[i]);\n  }\n}\nconsole.log(numbers)\n```",
        "en": "```javascript\nconst arr = [(5 - 7), NaN, 77, (-35 / 0), (2 * 7), (9 / 0)];\nconst numbers = [];\nfor(let i = 0; i < arr.length; i++){\n  if(typeof arr[i] === 'number' && !isNaN(arr[i]) && arr[i] !== Infinity && arr[i] !== -Infinity){\n    numbers.push(arr[i]);\n  }\n}\nconsole.log(numbers)\n```",
        "es": ""
      },
      "answerType": "single",
      "variants": [
        {
          "_id": "6696c2cb763f0712c198f0c6",
          "name": {
            "ru": "[-2, 77, (-35 / 0), 14, (9 / 0)]",
            "en": "[-2, 77, (-35 / 0), 14, (9 / 0)]",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2cb763f0712c198f0c7",
          "name": {
            "ru": "[5, 7, 77, -35, 0, 2, 7, 9, 0]",
            "en": "[5, 7, 77, -35, 0, 2, 7, 9, 0]",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2cb763f0712c198f0c8",
          "name": {
            "ru": "[-2, 77, -Infinity, 14, Infinity]",
            "en": "[-2, 77, -Infinity, 14, Infinity]",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2cb763f0712c198f0c9",
          "name": {
            "ru": "[-2, 77, 14]",
            "en": "[-2, 77, 14]",
            "es": ""
          },
          "correct": true
        }
      ]
    },
    {
      "_id": "6696c2cb763f0712c198f0ca",
      "name": {
        "ru": "Каким будет результат, если пройтись по массиву в обратном порядке?",
        "en": "What will be the result if we go through the array in reverse order?",
        "es": ""
      },
      "description": {
        "ru": "```javascript\nconst arr = [(51 + 7), NaN, 17, (-35 / 0), (2 * 7), '3 * 2', (9 / 0)];\nconst numbers = [];\nfor(let i = arr.length - 1; i >= 0 ; i--){\n  if(typeof arr[i] === 'number' && !isNaN(arr[i]) && arr[i] !== Infinity && arr[i] !== -Infinity){\n    numbers.push(arr[i]);\n  }\n}\nconsole.log(numbers)\n```",
        "en": "```javascript\nconst arr = [(51 + 7), NaN, 17, (-35 / 0), (2 * 7), '3 * 2', (9 / 0)];\nconst numbers = [];\nfor(let i = arr.length - 1; i >= 0 ; i--){\n  if(typeof arr[i] === 'number' && !isNaN(arr[i]) && arr[i] !== Infinity && arr[i] !== -Infinity){\n    numbers.push(arr[i]);\n  }\n}\nconsole.log(numbers)\n```",
        "es": ""
      },
      "answerType": "single",
      "variants": [
        {
          "_id": "6696c2cb763f0712c198f0cb",
          "name": {
            "ru": "[14, 17, 58]",
            "en": "[14, 17, 58]",
            "es": ""
          },
          "correct": true
        },
        {
          "_id": "6696c2cb763f0712c198f0cc",
          "name": {
            "ru": "[57, 7, 17, 2, 7, 3, 2]",
            "en": "[57, 7, 17, 2, 7, 3, 2]",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2cb763f0712c198f0cd",
          "name": {
            "ru": "[58, 17, 14]",
            "en": "[58, 17, 14]",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2cb763f0712c198f0ce",
          "name": {
            "ru": "[9, 14, 57, 58]",
            "en": "[9, 14, 57, 58]",
            "es": ""
          },
          "correct": false
        }
      ]
    },
    {
      "_id": "6696c2cb763f0712c198f0cf",
      "name": {
        "ru": "Что делает метод splice()?",
        "en": "What does the splice() method do?",
        "es": ""
      },
      "description": {
        "ru": "",
        "en": "",
        "es": ""
      },
      "answerType": "single",
      "variants": [
        {
          "_id": "6696c2cb763f0712c198f0d0",
          "name": {
            "ru": "Изменяет порядок элементов массива на обратный",
            "en": "Reverses the order of array elements to the reverse order",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2cb763f0712c198f0d1",
          "name": {
            "ru": "Изменяет содержимое массива, добавляя новые элементы",
            "en": "Modifies the contents of the array by adding new elements",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2cb763f0712c198f0d2",
          "name": {
            "ru": "Изменяет содержимое массива, удаляя существующие элементы",
            "en": "Modifies the contents of the array by deleting existing elements",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2cb763f0712c198f0d3",
          "name": {
            "ru": "Изменяет содержимое массива, удаляя существующие элементы и/или добавляя новые",
            "en": "Modifies the contents of the array by deleting existing elements and/or adding new elements",
            "es": ""
          },
          "correct": true
        }
      ]
    },
    {
      "_id": "6696c2cb763f0712c198f0d4",
      "name": {
        "ru": "Выберите верный результат запуска кода ниже",
        "en": "Select the correct result of running the code below",
        "es": ""
      },
      "description": {
        "ru": "```javascript\nconst arr = [(-10 / 0), 11, 'PASV', NaN, ((-1) ** 2), -5];\nfor(let i = 0; i < arr.length; i++){\n  if(typeof arr[i] !== 'number' || isNaN(arr[i])){\n    arr.splice(i, 1);\n    i--;\n  }\n}\nconsole.log(arr)\n```",
        "en": "```javascript\nconst arr = [(-10 / 0), 11, 'PASV', NaN, ((-1) ** 2), -5];\nfor(let i = 0; i < arr.length; i++){\n  if(typeof arr[i] !== 'number' || isNaN(arr[i])){\n    arr.splice(i, 1);\n    i--;\n  }\n}\nconsole.log(arr)\n```",
        "es": ""
      },
      "answerType": "single",
      "variants": [
        {
          "_id": "6696c2cb763f0712c198f0d5",
          "name": {
            "ru": "[-Infinity, 11, 1, -5]",
            "en": "[-Infinity, 11, 1, -5]",
            "es": ""
          },
          "correct": true
        },
        {
          "_id": "6696c2cb763f0712c198f0d6",
          "name": {
            "ru": "[-Infinity, 11, -1, -5]",
            "en": "[-Infinity, 11, -1, -5]",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2cb763f0712c198f0d7",
          "name": {
            "ru": "[11, 1, -5]",
            "en": "[11, 1, -5]",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2cb763f0712c198f0d8",
          "name": {
            "ru": "[11, -1, -5]",
            "en": "[11, -1, -5]",
            "es": ""
          },
          "correct": false
        }
      ]
    },
    {
      "_id": "6696c2cb763f0712c198f0d9",
      "name": {
        "ru": "Что означает запись arr.splice(i, 1) в коде ниже?",
        "en": "What does the entry arr.splice(i, 1) mean in the code below?",
        "es": ""
      },
      "description": {
        "ru": "```javascript\nconst arr = [(-10 / 0), 11, 'PASV', NaN, ((-1) ** 2), -5];\nfor(let i = 0; i < arr.length; i++){\n  if(typeof arr[i] !== 'number' || isNaN(arr[i])){\n    arr.splice(i, 1);\n    i--;\n  }\n}\n```",
        "en": "```javascript\nconst arr = [(-10 / 0), 11, 'PASV', NaN, ((-1) ** 2), -5];\nfor(let i = 0; i < arr.length; i++){\n  if(typeof arr[i] !== 'number' || isNaN(arr[i])){\n    arr.splice(i, 1);\n    i--;\n  }\n}\n```",
        "es": ""
      },
      "answerType": "single",
      "variants": [
        {
          "_id": "6696c2cb763f0712c198f0da",
          "name": {
            "ru": "Заменить элемент с индексом i на 1",
            "en": "Replace the element with index i by 1",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2cb763f0712c198f0db",
          "name": {
            "ru": "Удалить один элемент по индексу i в массиве arr",
            "en": "Delete one element at index i in array arr",
            "es": ""
          },
          "correct": true
        },
        {
          "_id": "6696c2cb763f0712c198f0dc",
          "name": {
            "ru": "Заменить элемент с индексом 1 на i",
            "en": "Replace element with index 1 with i",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2cb763f0712c198f0dd",
          "name": {
            "ru": "Удалить i элементов, начиная с первого индекса ",
            "en": "Delete i elements starting from the first index ",
            "es": ""
          },
          "correct": false
        }
      ]
    },
    {
      "_id": "6696c2cb763f0712c198f0de",
      "name": {
        "ru": "Что написано в круглых скобках условия if в коде ниже?",
        "en": "What is written in the parentheses of the if condition in the code below?",
        "es": ""
      },
      "description": {
        "ru": "```javascript\nconst arr = [(10 / 0), 11, 'PASV', NaN, ((-1) ** 2), -5];\nfor(let i = arr.length - 1; i >= 0; i--){\n  if(typeof arr[i] !== 'number' || isNaN(arr[i]) || arr[i] === Infinity || arr[i] === -Infinity){\n    arr.splice(i, 1);\n    }\n}\n```",
        "en": "```javascript\nconst arr = [(10 / 0), 11, 'PASV', NaN, ((-1) ** 2), -5];\nfor(let i = arr.length - 1; i >= 0; i--){\n  if(typeof arr[i] !== 'number' || isNaN(arr[i]) || arr[i] === Infinity || arr[i] === -Infinity){\n    arr.splice(i, 1);\n    }\n}\n```",
        "es": ""
      },
      "answerType": "single",
      "variants": [
        {
          "_id": "6696c2cb763f0712c198f0df",
          "name": {
            "ru": "Тип данных элемент массива - не number, или не является NaN, или не равен Infinity или -Infinity",
            "en": "The data type of the array element is not number, or is not NaN, or is not equal to Infinity or -Infinity",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2cb763f0712c198f0e0",
          "name": {
            "ru": "Тип данных элемент массива - number и является NaN и равен Infinity и -Infinity",
            "en": "The data type of the array element is number and is NaN and is equal to Infinity and -Infinity",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2cb763f0712c198f0e1",
          "name": {
            "ru": "Тип данных элемент массива - number, и не является NaN, или равен Infinity или -Infinity",
            "en": "The data type of the array element is number, and is not NaN, or equal to Infinity or -Infinity",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2cb763f0712c198f0e2",
          "name": {
            "ru": "Тип данных элемент массива - не number, или является NaN, или равен Infinity или -Infinity",
            "en": "The data type of the array element is not number, or is NaN, or is equal to Infinity or -Infinity",
            "es": ""
          },
          "correct": true
        }
      ]
    },
    {
      "_id": "6696c2cb763f0712c198f0e3",
      "name": {
        "ru": "Выберите верный результат запуска кода ниже",
        "en": "Select the correct result of running the code below",
        "es": ""
      },
      "description": {
        "ru": "```javascript\nconst arr = [(10 / 0), 11, 'PASV', NaN, ((-1) ** 2), -5];\nfor(let i = arr.length - 1; i >= 0; i--){\n  if(typeof arr[i] !== 'number' || isNaN(arr[i]) || arr[i] === Infinity || arr[i] === -Infinity){\n    arr.splice(i, 1);\n    }\n}\nconsole.log(arr)\n```",
        "en": "```javascript\nconst arr = [(10 / 0), 11, 'PASV', NaN, ((-1) ** 2), -5];\nfor(let i = arr.length - 1; i >= 0; i--){\n  if(typeof arr[i] !== 'number' || isNaN(arr[i]) || arr[i] === Infinity || arr[i] === -Infinity){\n    arr.splice(i, 1);\n    }\n}\nconsole.log(arr)\n```",
        "es": ""
      },
      "answerType": "single",
      "variants": [
        {
          "_id": "6696c2cb763f0712c198f0e4",
          "name": {
            "ru": "[11, -1, -5]",
            "en": "[11, -1, -5]",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2cb763f0712c198f0e5",
          "name": {
            "ru": "[Infinity, 11, 1, -5]",
            "en": "[Infinity, 11, 1, -5]",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2cb763f0712c198f0e6",
          "name": {
            "ru": "[11, 1, -5]",
            "en": "[11, 1, -5]",
            "es": ""
          },
          "correct": true
        },
        {
          "_id": "6696c2cb763f0712c198f0e7",
          "name": {
            "ru": "[-Infinity, 11, 1, -5]",
            "en": "[-Infinity, 11, 1, -5]",
            "es": ""
          },
          "correct": false
        }
      ]
    },
    {
      "_id": "6696c2cb763f0712c198f0e8",
      "name": {
        "ru": "Верно ли, что результатом запуска кода ниже будет [9, 12, 73]?",
        "en": "Is it true that the result of running the code below will be [9, 12, 73]?",
        "es": ""
      },
      "description": {
        "ru": "```javascript\nconst arr = [9, (3 * 'a'), 12, (7 / 0), 73];\nfor(let i = arr.length - 1; i >= 0; i-=2){\n  if(typeof arr[i] !== 'number' || isNaN(arr[i]) || arr[i] === Infinity || arr[i] === -Infinity){\n    arr.splice(i, 1);\n    }\n}\nconsole.log(arr)\n```",
        "en": "```javascript\nconst arr = [9, (3 * 'a'), 12, (7 / 0), 73];\nfor(let i = arr.length - 1; i >= 0; i-=2){\n  if(typeof arr[i] !== 'number' || isNaN(arr[i]) || arr[i] === Infinity || arr[i] === -Infinity){\n    arr.splice(i, 1);\n    }\n}\nconsole.log(arr)\n```",
        "es": ""
      },
      "answerType": "single",
      "variants": [
        {
          "_id": "6696c2cb763f0712c198f0e9",
          "name": {
            "ru": "Не верно, результатом будет [9, '3a', 12, Infinity, 73]",
            "en": "Wrong, the result is [9, '3a', 12, Infinity, 73]",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2cb763f0712c198f0ea",
          "name": {
            "ru": "Верно, результатом будет [9, 12, 73]",
            "en": "Right, the result is [9, 12, 73]",
            "es": ""
          },
          "correct": false
        },
        {
          "_id": "6696c2cb763f0712c198f0eb",
          "name": {
            "ru": "Не верно, результатом будет [9, NaN, 12, Infinity, 73]",
            "en": "Wrong, the result is [9, NaN, 12, Infinity, 73]",
            "es": ""
          },
          "correct": true
        },
        {
          "_id": "6696c2cb763f0712c198f0ec",
          "name": {
            "ru": "Не верно, результатом будет [NaN, Infinity]",
            "en": "Wrong, the result will be [NaN, Infinity]",
            "es": ""
          },
          "correct": false
        }
      ]
    }
  ]
}