{
  "_id": "6696c2cb763f0712c198f0f0",
  "name": {
    "en": "",
    "ru": "Найти числа и объединить их в строку"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `onlyNumbers`, которая принимает массив с разными типами данных, включая числовые.\n\nФункция должна найти все числа с типом данных `number` и добавить их в строку.\n\nВерните новый массив с этой строкой чисел в качестве единственного элемента.\n\n* Если массив пустой - верните строку `'Array is empty'`\n* Если в массиве нет чисел - верните строку `'No numbers in array'`\n\n\nПримеры запуска функции:\n```javascript\nonlyNumbers([10, 20, 30, 5555]);                         // ['1020305555']\nonlyNumbers([1,2,3, 'test', '55', true, null, NaN, 8]);  // ['1238']\nonlyNumbers(['888', true, false, undefined, null, NaN]); // 'No numbers in array'\nonlyNumbers([]);                                         // 'Array is empty'\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function onlyNumbers(arr){\n  if(!arr.length) return 'Array is empty';\n  let str = '';\n\n  for(let i = 0; i < arr.length; i++){\n    if(typeof arr[i] === 'number' && !isNaN(arr[i])) str += arr[i];\n  }\n\n  if(!str.length) return 'No numbers in array';\n  else return [str];\n}",
  "openTest": "it('Created function onlyNumbers', () => {\n  expect(onlyNumbers).to.be.a('function');\n});\n\nit(\"Function onlyNumbers should return new array\", () => {\n  const arr = ['test',2,'3',4,5, NaN, true];\n  expect(onlyNumbers(arr) === arr).to.be.false;\n});\n\nit(\"onlyNumbers([1,2,33, 'test', '55', true, null, NaN, 111]) should return ['1233111']\", () => {\n  expect(onlyNumbers([1,2,33, 'test', '55', true, null, NaN, 111])).to.eql(['1233111']);\n});\n\nit(\"onlyNumbers([10, 20, 30, 40, 50, 555, 123456789]) should return ['1020304050555123456789']\", () => {\n  expect(onlyNumbers([10, 20, 30, 40, 50, 555, 123456789])).to.eql(['1020304050555123456789']);\n});\n\nit(\"onlyNumbers([true, false, undefined, null, NaN, 'test', '123', (5 < 10)]) should return 'No numbers in array'\", () => {\n  expect(onlyNumbers([true, false, undefined, null, NaN, 'test', '123', (5 < 10)])).to.eql('No numbers in array');\n});\n\nit(\"onlyNumbers([]) should return 'Array is empty'\", () => {\n  expect(onlyNumbers([])).to.eql('Array is empty');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}