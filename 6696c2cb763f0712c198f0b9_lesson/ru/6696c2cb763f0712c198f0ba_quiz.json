{
  "name": "Удалить из массива все элементы, которые не являются числами",
  "questions": {
    "0": {
      "name": "Выберите значения, которые имеют тип данных Number",
      "variants": {
        "0": {
          "name": "99"
        },
        "1": {
          "name": "NaN"
        },
        "2": {
          "name": "(-5 / 0)"
        },
        "3": {
          "name": "Infinity"
        }
      }
    },
    "1": {
      "name": "Верно ли, что результатом запуска кода ниже будет [7.3, 6, 2, 22, -5]?",
      "description": "```javascript\nconst arr = [7.3, (-10 / 0), 'plus', 6, NaN, 2, (11 * 2), null, -5, (2 / 0)];\nconst numbers = [];\nfor(let i = 0; i < arr.length; i++){\n  if(typeof arr[i] === 'number' && !isNaN(arr[i])){\n    numbers.push(arr[i]);\n  }\n}\nconsole.log(numbers)\n```",
      "variants": {
        "0": {
          "name": "Верно, результатом будет [7.3, 6, 2, 22, -5]"
        },
        "1": {
          "name": "Неверно, результатом будет [7.3, -Infinity, 6, 2, 22, -5, Infinity]"
        },
        "2": {
          "name": "Неверно, результатом будет [7.3, (-10 / 0), 6, 2, (11 * 2), -5, (2 / 0)]"
        },
        "3": {
          "name": "Неверно, результатом будет [7.3, Infinity, 6, 2, 22, -5, -Infinity]"
        }
      }
    },
    "2": {
      "name": "Что выведется в консоль в результате запуска кода ниже?",
      "description": "```javascript\nconst arr = [(5 - 7), NaN, 77, (-35 / 0), (2 * 7), (9 / 0)];\nconst numbers = [];\nfor(let i = 0; i < arr.length; i++){\n  if(typeof arr[i] === 'number' && !isNaN(arr[i]) && arr[i] !== Infinity && arr[i] !== -Infinity){\n    numbers.push(arr[i]);\n  }\n}\nconsole.log(numbers)\n```",
      "variants": {
        "0": {
          "name": "[-2, 77, (-35 / 0), 14, (9 / 0)]"
        },
        "1": {
          "name": "[5, 7, 77, -35, 0, 2, 7, 9, 0]"
        },
        "2": {
          "name": "[-2, 77, -Infinity, 14, Infinity]"
        },
        "3": {
          "name": "[-2, 77, 14]"
        }
      }
    },
    "3": {
      "name": "Каким будет результат, если пройтись по массиву в обратном порядке?",
      "description": "```javascript\nconst arr = [(51 + 7), NaN, 17, (-35 / 0), (2 * 7), '3 * 2', (9 / 0)];\nconst numbers = [];\nfor(let i = arr.length - 1; i >= 0 ; i--){\n  if(typeof arr[i] === 'number' && !isNaN(arr[i]) && arr[i] !== Infinity && arr[i] !== -Infinity){\n    numbers.push(arr[i]);\n  }\n}\nconsole.log(numbers)\n```",
      "variants": {
        "0": {
          "name": "[14, 17, 58]"
        },
        "1": {
          "name": "[57, 7, 17, 2, 7, 3, 2]"
        },
        "2": {
          "name": "[58, 17, 14]"
        },
        "3": {
          "name": "[9, 14, 57, 58]"
        }
      }
    },
    "4": {
      "name": "Что делает метод splice()?",
      "variants": {
        "0": {
          "name": "Изменяет порядок элементов массива на обратный"
        },
        "1": {
          "name": "Изменяет содержимое массива, добавляя новые элементы"
        },
        "2": {
          "name": "Изменяет содержимое массива, удаляя существующие элементы"
        },
        "3": {
          "name": "Изменяет содержимое массива, удаляя существующие элементы и/или добавляя новые"
        }
      }
    },
    "5": {
      "name": "Выберите верный результат запуска кода ниже",
      "description": "```javascript\nconst arr = [(-10 / 0), 11, 'PASV', NaN, ((-1) ** 2), -5];\nfor(let i = 0; i < arr.length; i++){\n  if(typeof arr[i] !== 'number' || isNaN(arr[i])){\n    arr.splice(i, 1);\n    i--;\n  }\n}\nconsole.log(arr)\n```",
      "variants": {
        "0": {
          "name": "[-Infinity, 11, 1, -5]"
        },
        "1": {
          "name": "[-Infinity, 11, -1, -5]"
        },
        "2": {
          "name": "[11, 1, -5]"
        },
        "3": {
          "name": "[11, -1, -5]"
        }
      }
    },
    "6": {
      "name": "Что означает запись arr.splice(i, 1) в коде ниже?",
      "description": "```javascript\nconst arr = [(-10 / 0), 11, 'PASV', NaN, ((-1) ** 2), -5];\nfor(let i = 0; i < arr.length; i++){\n  if(typeof arr[i] !== 'number' || isNaN(arr[i])){\n    arr.splice(i, 1);\n    i--;\n  }\n}\n```",
      "variants": {
        "0": {
          "name": "Заменить элемент с индексом i на 1"
        },
        "1": {
          "name": "Удалить один элемент по индексу i в массиве arr"
        },
        "2": {
          "name": "Заменить элемент с индексом 1 на i"
        },
        "3": {
          "name": "Удалить i элементов, начиная с первого индекса "
        }
      }
    },
    "7": {
      "name": "Что написано в круглых скобках условия if в коде ниже?",
      "description": "```javascript\nconst arr = [(10 / 0), 11, 'PASV', NaN, ((-1) ** 2), -5];\nfor(let i = arr.length - 1; i >= 0; i--){\n  if(typeof arr[i] !== 'number' || isNaN(arr[i]) || arr[i] === Infinity || arr[i] === -Infinity){\n    arr.splice(i, 1);\n    }\n}\n```",
      "variants": {
        "0": {
          "name": "Тип данных элемент массива - не number, или не является NaN, или не равен Infinity или -Infinity"
        },
        "1": {
          "name": "Тип данных элемент массива - number и является NaN и равен Infinity и -Infinity"
        },
        "2": {
          "name": "Тип данных элемент массива - number, и не является NaN, или равен Infinity или -Infinity"
        },
        "3": {
          "name": "Тип данных элемент массива - не number, или является NaN, или равен Infinity или -Infinity"
        }
      }
    },
    "8": {
      "name": "Выберите верный результат запуска кода ниже",
      "description": "```javascript\nconst arr = [(10 / 0), 11, 'PASV', NaN, ((-1) ** 2), -5];\nfor(let i = arr.length - 1; i >= 0; i--){\n  if(typeof arr[i] !== 'number' || isNaN(arr[i]) || arr[i] === Infinity || arr[i] === -Infinity){\n    arr.splice(i, 1);\n    }\n}\nconsole.log(arr)\n```",
      "variants": {
        "0": {
          "name": "[11, -1, -5]"
        },
        "1": {
          "name": "[Infinity, 11, 1, -5]"
        },
        "2": {
          "name": "[11, 1, -5]"
        },
        "3": {
          "name": "[-Infinity, 11, 1, -5]"
        }
      }
    },
    "9": {
      "name": "Верно ли, что результатом запуска кода ниже будет [9, 12, 73]?",
      "description": "```javascript\nconst arr = [9, (3 * 'a'), 12, (7 / 0), 73];\nfor(let i = arr.length - 1; i >= 0; i-=2){\n  if(typeof arr[i] !== 'number' || isNaN(arr[i]) || arr[i] === Infinity || arr[i] === -Infinity){\n    arr.splice(i, 1);\n    }\n}\nconsole.log(arr)\n```",
      "variants": {
        "0": {
          "name": "Не верно, результатом будет [9, '3a', 12, Infinity, 73]"
        },
        "1": {
          "name": "Верно, результатом будет [9, 12, 73]"
        },
        "2": {
          "name": "Не верно, результатом будет [9, NaN, 12, Infinity, 73]"
        },
        "3": {
          "name": "Не верно, результатом будет [NaN, Infinity]"
        }
      }
    }
  }
}