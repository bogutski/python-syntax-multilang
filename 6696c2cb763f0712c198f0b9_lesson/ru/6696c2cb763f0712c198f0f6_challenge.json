{
  "name": "Найти массив с числами",
  "instruction": "Напишите функцию 'findArrayWithNumbers', которая принимает массив массивов.\n\nФункция должна вернуть новый массив с двумя элементами:\n\n* Первый элемент - строка `'Array with numbers by index <index>'`, где `<index>` - индекс массива в исходном массиве, в котором были числа.\n* Второй элемент - массив, состоящий из чисел, который был найден в оригинальном массиве.\n\nПеред добавлением в новый массив, каждое число должно быть умножено на 3.\n\nПример: массив `[['1','2','3'], ['test'], [7,8,9]]` должен вернуть массив `['Array with numbers by index 2', [21,24,27]]`.\n\nВсе внутренние массивы будут состоять только из строк и только один будет состоять из чисел.\n\nПустой массив передаваться не будет.\n\nАлгоритм решения:\n* Первый цикл проходит по внешнему массиву.\n* Второй цикл проходит по внутреннему массиву.\n* Условие `if` проверяет, что если первый элемент не является числом, то прерывает цикл.\n* В условии `else`, мы добавляем в новый массив число, умноженное на 3.\n* Так же, нужно сохранить индекс в переменную, когда мы найдем какой массив содержит числа.\n* В конце цикла, нужно составить правильно строку и добавить в нее индекс.\n* Вернуть новый массив со строкой и массивом чисел.\n\nПример запуска функции:\n```javascript\nfindArrayWithNumbers([['1','2','3'], ['test'], [7,8,9]]); // ['Array with numbers by index 2', [21,24,27]]\nfindArrayWithNumbers([[20, 30, 40], ['a', 'b', 'c']]); // ['Array with numbers by index 0', [60, 90, 120]]\n```",
  "instructions": {}
}