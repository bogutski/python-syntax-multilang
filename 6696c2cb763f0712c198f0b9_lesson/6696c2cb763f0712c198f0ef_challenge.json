{
  "_id": "6696c2cb763f0712c198f0ef",
  "name": {
    "en": "",
    "ru": "Найти все цифры в массиве"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `onlyNumbers`, которая принимает массив с разными типами данных.\n\nФункция должна вернуть новый массив только c `цифрами` (от 0 до 9).\n\nМенять типы данных не нужно.\n\nЕсли массив пустой или в нем нет цифр, то верните пустой массив.\n\n\nПримеры запуска функции:\n```javascript\nonlyNumbers([1, 2, 3, 44, 12, 336, 4, 78, 5]);        // [1, 2, 3, 4, 5]\nonlyNumbers(['13', '3', '7', 0, 1, '55', 2, 8]);      // [0, 1, 2, 8]\nonlyNumbers(['aaa', 'b', 'c1', 'd', 'e2', 'f', 'g']); // []\nonlyNumbers([true, null, NaN, Infinity]);             // []\nonlyNumbers([]);                                      // []\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function onlyNumbers(arr){\n  const numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n  const newArr = []\n  for (let i = 0; i < arr.length; i++){\n    if (numbers.includes(arr[i])){\n      newArr.push(arr[i])\n    }\n  }\n  return newArr\n}",
  "openTest": "it('Created function onlyNumbers', () => {\n  expect(onlyNumbers).to.be.a('function');\n});\n\nit(\"onlyNumbers([1, 2, 3, 44, 12, 36, 5, 4, 78, 6]) should return [1, 2, 3, 5, 4, 6]\", () => {\n  expect(onlyNumbers([1, 2, 3, 44, 12, 36, 5, 4, 78, 6])).to.deep.equal([1, 2, 3, 5, 4, 6]);\n});\n\nit(\"onlyNumbers(['13', '3', '7', 0, '1', '55', '2', 8]) should return [0, 8]\", () => {\n  expect(onlyNumbers(['13', '3', '7', 0, '1', '55', '2', 8])).to.deep.equal([0, 8]);\n});\n\nit(\"onlyNumbers(['a', 'b', 'c', 'd', 'e', 'f', 'g']) should return []\", () => {\n  expect(onlyNumbers(['a', 'b', 'c', 'd', 'e', 'f', 'g'])).to.deep.equal([]);\n});\n\nit(\"onlyNumbers([true, false, undefined, null, NaN, Infinity]) should return []\", () => {\n  expect(onlyNumbers([true, false, undefined, null, NaN, Infinity])).to.deep.equal([]);\n});\n\nit(\"onlyNumbers([]) should return []\", () => {\n  expect(onlyNumbers([])).to.deep.equal([]);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}