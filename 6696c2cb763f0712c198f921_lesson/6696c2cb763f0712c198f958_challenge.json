{
  "_id": "6696c2cb763f0712c198f958",
  "name": {
    "en": "/*",
    "ru": "Извлечение уникальных элементов после определенного индекса"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `getUniqueElementsAfterIndex`, которая принимает массив и число.\n\nФункция должна возвращать новый массив, содержащий все уникальные элементы массива после указанного индекса (включительно).\n\n\nПримеры запуска функции:\n```javascript\ngetUniqueElementsAfterIndex([1, 2, 3, 4, 2, 5, 3, 6], 2); // [3, 4, 2, 5, 6]\ngetUniqueElementsAfterIndex([10, 20, 30, 10, 20, 40, 20], 4); // [20, 40]\ngetUniqueElementsAfterIndex([true, false, true, true, false], 1); // [false, true]\ngetUniqueElementsAfterIndex(['a', 'b', 'c', 'a', 'd', 'b', 'e', 'd'], 3); // ['a', 'd', 'b', 'e']\n```"
  },
  "initialSolution": "function getUniqueElementsAfterIndex(){\n\n}",
  "completedSolution": "function getUniqueElementsAfterIndex(arr, n) {\n  return arr.slice(n).filter((el, i, array) => array.indexOf(el) === i);\n}",
  "openTest": "it('Created function getUniqueElementsAfterIndex', () => {\n  expect(getUniqueElementsAfterIndex).to.be.a('function');\n});\n\nit('getUniqueElementsAfterIndex([1, 2, 3, 4, 2, 5, 3, 6], 2) should return [3, 4, 2, 5, 6]', function() {\n  expect(getUniqueElementsAfterIndex([1, 2, 3, 4, 2, 5, 3, 6], 2)).to.eql([3, 4, 2, 5, 6]);\n});\n\nit('getUniqueElementsAfterIndex([\"a\", \"b\", \"c\", \"a\", \"d\", \"b\", \"e\"], 3) should return [\"a\", \"d\", \"b\", \"e\"]', function() {\n  expect(getUniqueElementsAfterIndex([\"a\", \"b\", \"c\", \"a\", \"d\", \"b\", \"e\"], 3)).to.eql([\"a\", \"d\", \"b\", \"e\"]);\n});\n\nit('getUniqueElementsAfterIndex([true, false, true, true, false], 1) should return [false, true]', function() {\n  expect(getUniqueElementsAfterIndex([true, false, true, true, false], 1)).to.eql([false, true]);\n});\n\nit('getUniqueElementsAfterIndex([10, 20, 30, 10, 20, 40], 4) should return [20, 40]', function() {\n  expect(getUniqueElementsAfterIndex([10, 20, 30, 10, 20, 40], 4)).to.eql([20, 40]);\n});\n\nit('getUniqueElementsAfterIndex([1, 2, 3, 1, 2, 3, 4, 5], 0) should return [1, 2, 3, 4, 5]', function() {\n  expect(getUniqueElementsAfterIndex([1, 2, 3, 1, 2, 3, 4, 5], 0)).to.eql([1, 2, 3, 4, 5]);\n});\n\nit('getUniqueElementsAfterIndex([1, 2, 2, 3, 3, 4, 4, 5, 5], 2) should return [2, 3, 4, 5]', function() {\n  expect(getUniqueElementsAfterIndex([1, 2, 2, 3, 3, 4, 4, 5, 5], 2)).to.eql([2, 3, 4, 5]);\n});\n\nit('getUniqueElementsAfterIndex([\"apple\", \"banana\", \"apple\", \"cherry\", \"banana\"], 1) should return [\"banana\", \"apple\", \"cherry\"]', function() {\n  expect(getUniqueElementsAfterIndex([\"apple\", \"banana\", \"apple\", \"cherry\", \"banana\"], 1)).to.eql([\"banana\", \"apple\", \"cherry\"]);\n});\n\nit('getUniqueElementsAfterIndex([null, undefined, null, false, undefined, true], 2) should return [null, false, undefined, true]', function() {\n  expect(getUniqueElementsAfterIndex([null, undefined, null, false, undefined, true], 2)).to.eql([null, false, undefined, true]);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}