{
  "_id": "6696c2cb763f0712c198f95b",
  "name": {
    "en": "/*",
    "ru": "Извлечение и фильтрация элементов по условию"
  },
  "instruction": {
    "en": "",
    "ru": "Напишите функцию `getFilteredElements`, которая принимает массив объектов и два числа.\n\nФункция должна возвращать новый массив, содержащий объекты, извлеченные между указанными индексами (включительно для начала и не включительно для конца), которые содержат свойство `value`, значение которого больше `50`.\n\n\nПримеры запуска функции:\n```javascript\nconsole.log(getFilteredElements(\n    [{name: 'apple', value: 60},\n     {name: 'banana', value: 20},\n     {name: 'cherry', value: 75},\n     {name: 'date', value: 40}], 0, 3));\n// [{name: 'apple', value: 60}, {name: 'cherry', value: 75}]\n\nconsole.log(getFilteredElements(\n    [{type: 'dog', value: 30},\n     {type: 'cat', value: 50},\n     {type: 'rabbit', value: 80},\n     {type: 'hamster', value: 25}], 1, 4));\n// [{type: 'rabbit', value: 80}]\n```"
  },
  "initialSolution": "function getFilteredElements(){\n\n}",
  "completedSolution": "function getFilteredElements(arr, start, end) {\n  return arr.slice(start, end).filter(obj => obj.value > 50);\n}",
  "openTest": "it('Created function getFilteredElements', () => {\n  expect(getFilteredElements).to.be.a('function');\n});\n\nit('getFilteredElements([{name: \"apple\", value: 60}, {name: \"banana\", value: 20}, {name: \"cherry\", value: 75}, {name: \"date\", value: 40}], 0, 3) should return [{name: \"apple\", value: 60}, {name: \"cherry\", value: 75}]', function() {\n  expect(getFilteredElements([{name: \"apple\", value: 60}, {name: \"banana\", value: 20}, {name: \"cherry\", value: 75}, {name: \"date\", value: 40}], 0, 3)).to.eql([{name: \"apple\", value: 60}, {name: \"cherry\", value: 75}]);\n});\n\nit('getFilteredElements([{type: \"dog\", value: 30}, {type: \"cat\", value: 50}, {type: \"rabbit\", value: 80}, {type: \"hamster\", value: 25}], 1, 4) should return [{type: \"rabbit\", value: 80}]', function() {\n  expect(getFilteredElements([{type: \"dog\", value: 30}, {type: \"cat\", value: 50}, {type: \"rabbit\", value: 80}, {type: \"hamster\", value: 25}], 1, 4)).to.eql([{type: \"rabbit\", value: 80}]);\n});\n\nit('getFilteredElements([{brand: \"Toyota\", value: 60}, {brand: \"Honda\", value: 45}, {brand: \"Ford\", value: 70}, {brand: \"BMW\", value: 50}], 1, 4) should return [{brand: \"Ford\", value: 70}]', function() {\n  expect(getFilteredElements([{brand: \"Toyota\", value: 60}, {brand: \"Honda\", value: 45}, {brand: \"Ford\", value: 70}, {brand: \"BMW\", value: 50}], 1, 4)).to.eql([{brand: \"Ford\", value: 70}]);\n});\n\nit('getFilteredElements([{color: \"red\", value: 30}, {color: \"green\", value: 80}, {color: \"blue\", value: 90}, {color: \"yellow\", value: 20}], 0, 2) should return [{color: \"green\", value: 80}]', function() {\n  expect(getFilteredElements([{color: \"red\", value: 30}, {color: \"green\", value: 80}, {color: \"blue\", value: 90}, {color: \"yellow\", value: 20}], 0, 2)).to.eql([{color: \"green\", value: 80}]);\n});\n\nit('getFilteredElements([{title: \"Book\", value: 20}, {title: \"Magazine\", value: 60}, {title: \"Newspaper\", value: 70}], 1, 3) should return [{title: \"Magazine\", value: 60}, {title: \"Newspaper\", value: 70}]', function() {\n  expect(getFilteredElements([{title: \"Book\", value: 20}, {title: \"Magazine\", value: 60}, {title: \"Newspaper\", value: 70}], 1, 3)).to.eql([{title: \"Magazine\", value: 60}, {title: \"Newspaper\", value: 70}]);\n});\n\nit('getFilteredElements([{product: \"Laptop\", value: 40}, {product: \"Tablet\", value: 30}, {product: \"Phone\", value: 60}], 0, 3) should return [{product: \"Phone\", value: 60}]', function() {\n  expect(getFilteredElements([{product: \"Laptop\", value: 40}, {product: \"Tablet\", value: 30}, {product: \"Phone\", value: 60}], 0, 3)).to.eql([{product: \"Phone\", value: 60}]);\n});\n\nit('getFilteredElements([{model: \"A\", value: 100}, {model: \"B\", value: 10}, {model: \"C\", value: 20}], 1, 3) should return []', function() {\n  expect(getFilteredElements([{model: \"A\", value: 100}, {model: \"B\", value: 10}, {model: \"C\", value: 20}], 1, 3)).to.eql([]);\n});\n\nit('getFilteredElements([{name: \"Alice\", value: 45}, {name: \"Bob\", value: 55}, {name: \"Charlie\", value: 65}], 1, 3) should return [{name: \"Bob\", value: 55}, {name: \"Charlie\", value: 65}]', function() {\n  expect(getFilteredElements([{name: \"Alice\", value: 45}, {name: \"Bob\", value: 55}, {name: \"Charlie\", value: 65}], 1, 3)).to.eql([{name: \"Bob\", value: 55}, {name: \"Charlie\", value: 65}]);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}