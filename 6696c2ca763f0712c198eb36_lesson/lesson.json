{
  "_id": "6696c2ca763f0712c198eb36",
  "content": {
    "ru": "### Перевернуть строку с помощью цикла. Проход строки слева направо\n\nДавайте разберем, как перевернуть строку с помощью массива, который проходит от начала до конца строки.\n\n```javascript\nconst string = '1234';\n\nlet reversed = '';                         // создали переменную для перевернутой строки\n\nfor (let i = 0; i < string.length; i++) {  // цикл от начала до конца строки\n  reversed = string[i] + reversed;         // добавление каждого элемента в начало строки\n  console.log(reversed)                    // выведем переменную, чтобы увидеть ее состояние при каждой итерации цикла\n                                           // \"1\" -> \"21\" -> \"321\" -> \"4321\"\n}\n\nconsole.log(reversed);   // \"4321\"\n```\n\n\n### Перевернуть строку с помощью цикла. Проход строки справа налево\n\nТеперь выполним ту же задачу, только цикл будет проходить от последнего до первого элемента строки.\n\n```javascript\nconst str = 'a-b-c';\nlet rev = '';                                 // создали переменную для перевернутой строки\n\nfor (let i = str.length - 1; i >= 0; i--) {   // обратите внимание как изменилось условие цикла\n  rev += str[i];                              // добавление каждого элемента в конец строки\n  console.log(rev)                            // выведем переменную, чтобы увидеть ее состояние при каждой итерации цикла\n                                              // \"c\" -> \"c-\" -> \"c-b\" -> \"c-b-\" -> \"c-b-a\"\n}\nconsole.log(rev);                             // \"c-b-a\"\n```\n\n\n### Перевернуть числовой тип данных\n\nВ следующей задаче мы попробуем перевернуть число\n\n```javascript\nconst number = 12345;                             // создадим переменную и присвоим ей числовой тип данных\nconsole.log(typeof number);                       // number\n\nconst numToString1 = number + '';                 // любой из этих трех вариантов переводит числовой тип данных в строку\nconst numToString2 = String(number);\nconst numToString3 = number.toString();\n\nlet revStr = '';                                  // создали переменную для перевернутой строки\n\nfor (let i = 0; i < numToString1.length; i++) {   // цикл будет проходить слева направо\n  revStr = numToString1[i] + revStr;              // добавление каждого элемента в начало строки\n}\n\nconst strToNumber1 = +revStr;                     // эти два варианта помогут нам перевести строковое значение обратно в числовое\nconst strToNumber2 = Number(revStr);\n\nconsole.log(revStr);                              // \"54321\"\nconsole.log(typeof revStr);                       // string\n\nconsole.log(strToNumber1);                        // 54321\nconsole.log(typeof strToNumber1);                 // number\n```\n\nВ этой задаче мы разобрались: как перевести число в строку, как перевернуть строку и как перевести строку обратно в число.\n\n\n\n### Перевернуть строку при помощи методов: `split()`, `reverse()`, `join()`\n\nДавайте разберем каждый из этих методов:\n\n* `split()` - метод строки, переводит элементы строки в массив.\n* `reverse()` - метод массива, переворачивает элементы массива.\n* `join()` - метод массива, переводит элементы массива в строку.\n\n\n```javascript\nconst str = 'Hello JS';\n\nconst rev = str.split('').reverse().join('')\n\nconsole.log(rev);   // \"SJ olleH\"\n```\n\nДля лучшего понимания, разберем что возвращает каждый метод.\n\n```javascript\nconst str = 'Hello JS';\n\nconst strToArray = str.split('');        // [ 'H', 'e', 'l', 'l', 'o', ' ', 'J', 'S' ]\nconst revArray = strToArray.reverse();   // [ 'S', 'J', ' ', 'o', 'l', 'l', 'e', 'H' ]\nconst arrToString = revArray.join('');   // \"SJ olleH\"\n```\n\n\n\n### Перевернуть каждое слово в строке при помощи цикла `for`\n\nВ этой задаче нам нужно будет перевернуть каждое слово в строке, но слова останутся на своих местах.\n\nНапример, строка `Hello World` станет -> `olleH dlroW`\n\n```javascript\nconst str = 'Hello World';\n\nlet result = '';        // переменная, в которой будет наша новая строка\nlet word = '';          // в эту переменную будет записывать каждое слово отдельно\nlet revWord = '';       // в эту переменную мы будем записывать перевернутое слово\n\nfor (let i = 0; i < str.length; i++){       // цикл, который пройдет всю строку\n    const isLast = i === str.length - 1;    // переменная, в которой мы будем хранить условие\n\n    if (str[i] === ' ' || isLast){             // если элемент равен пробелу или `i` равен последнему индексу строки\n        if(isLast) word += str[i];             // если `i` равен последнему индексу строки, то мы добавляем его в переменную\n\n        for (let j = 0; j < word.length; j++){     // цель второго цикла в том, чтобы перевернуть элементы, которые находятся в переменной `word`\n            revWord = word[j] + revWord;           // переворачиваем элементы в слове `word` и записываем в переменную `revWord`\n        }\n\n        if (isLast) result += revWord;      // если `i` равен последнему индексу строки, то в результат мы записываем перевернутое слово\n        else result += revWord + ' ';       // иначе, в переменную `result` мы записываем перевернутое слово плюс пробел\n\n        revWord = '';   // стираем все с переменной `revWord`, чтобы при следующей итерации цикла можно было записать новое слово\n        word = '';      // стираем все с переменной `word`, чтобы при следующей итерации цикла можно было записать новое слово\n    } else {                    // если элемент не пустая строка и i не равен последнему индексу, тогда выполниться следующий блок\n        word += str[i];         // добавляем элемент в переменную `word`\n    }\n}\n\nconsole.log(result);   // \"olleH dlroW\"\n```\n\n\n### Написание функции и улучшение кода\n\nДавайте напишем функцию, которая будет принимать строку и возвращать новую строку, в которой каждое слово будет перевернуто.\n\nТакже, мы постараемся улучшить наш код и избавится от второго цикла.\n\n```javascript\nfunction revString(str){\n    let result = '';\n    let word = '';\n\n    for (let i = 0; i < str.length; i++){\n        if(str[i] !== ' ' && i !== str.length - 1){\n            word = str[i] + word;\n        } else {\n            if(i === str.length - 1) {\n                word = str[i] + word;\n                result += word;\n            } else {\n                result += word + ' ';\n                word = '';\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(revString('Hello World'));           // \"olleH dlroW\"\nconsole.log(revString('12 345 67890'));          // \"21 543 09876\"\nconsole.log(revString(\"Hi, It's Java Script!\")); // \",iH s'tI avaJ !tpircS\"\n```\n\nПо примеру прошлой задачи, вам уже должно быть понятно что происходит в этой функции.\n\nПерепишите код самостоятельно несколько раз, чтобы лучше разобраться и понять как работает функция.\n",
    "en": "### Reverse a string using a loop. Passing the string from left to right\n\nLet's figure out how to flip a string using an array that goes from the beginning to the end of the string.\n\n```javascript\nconst string = '1234';\n\nlet reversed = ''; // create a variable for the reversed string\n\nfor (let i = 0; i < string.length; i++) { // loop from the beginning to the end of the string\n  reversed = string[i] + reversed; // adding each element to the beginning of the string\n  console.log(reversed) // print the variable to see its state at each loop iteration\n                                           // \"1\" -> \"21\" -> \"321\" -> \"4321\"\n}\n\nconsole.log(reversed); // \"4321\"\n```\n\n\n### Reverse a string using a loop. Passing a line from right to left\n\nNow let's perform the same task, only the loop will go from the last to the first element of the string.\n\n```javascript\nconst str = 'a-b-c';\nlet rev = ''; // create a variable for the inverted string\n\nfor (let i = str.length - 1; i >= 0; i--) { // notice how the loop condition has changed\n  rev += str[i]; // add each element to the end of the string\n  console.log(rev) // print the variable to see its state at each loop iteration\n                                              //  \"c\" -> \"c-\" -> \"c-b\" -> \"c-b-\" -> \"c-b-a\"\n}\nconsole.log(rev); // \"c-b-a\"\n```\n\n\n### Flip the numeric data type\n\nIn the next problem we will try to invert the number\n\n```javascript\nconst number = 12345; // create a variable and assign it a numeric data type\nconsole.log(typeof number); // number\n\nconst numToString1 = number + ''; // any of these three options turns a numeric data type into a string\nconst numToString2 = String(number);\nconst numToString3 = number.toString();\n\nlet revStr = ''; // create a variable for the reversed string\n\nfor (let i = 0; i < numToString1.length; i++) { // the loop will go from left to right\n  revStr = numToString1[i] + revStr; // adding each element to the beginning of the string\n}\n\nconst strToNumber1 = +revStr; // these two variants will help us to translate string value back into numeric value\nconst strToNumber2 = Number(revStr);\n\nconsole.log(revStr); // \"54321\"\nconsole.log(typeof revStr); // string\n\nconsole.log(strToNumber1); // 54321\nconsole.log(typeof strToNumber1); // number\n```\n\nIn this problem we figured out: how to convert a number to a string, how to reverse a string, and how to convert a string back to a number.\n\n\n\n### Reverse a string using methods: `split()`, `reverse()`, `join()`\n\nLet's break down each of these methods:\n\n* `split()` is a string method, converts string elements to an array.\n* `reverse()` is an array method that flips the elements of an array.\n* `join()` is an array method, converts array elements to a string.\n\n\n```javascript\nconst str = 'Hello JS';\n\nconst rev = str.split('').reverse().join('')\n\nconsole.log(rev); // \"SJ olleH\"\n```\n\nFor a better understanding, let's break down what each method returns.\n\n```javascript\nconst str = 'Hello JS';\n\nconst strToArray = str.split('');        // [ 'H', 'e', 'l', 'l', 'o', ' ', 'J', 'S' ]\nconst revArray = strToArray.reverse();   // [ 'S', 'J', ' ', 'o', 'l', 'l', 'e', 'H' ]\nconst arrToString = revArray.join('');   // \"SJ olleH\"\n```\n\n\n\n### Reverse each word in the string using the `for` loop\n\nIn this problem we will have to turn over each word in the line, but the words will remain in their places.\n\nFor example, the string `Hello World` becomes -> `olleH dlroW`.\n\n```javascript\nconst str = 'Hello World';\n\nlet result = '';        // variable in which our new string will be stored\nlet word = '';          // this variable will hold each word separately\nlet revWord = '';       // this variable will hold the reversed word\n\nfor (let i = 0; i < str.length; i++){       // loop that will go through the entire string\n    const isLast = i === str.length - 1;    // variable that will hold the condition\n\n    if (str[i] === ' ' || isLast){             // if the element is equal to space or `i` is equal to the last index of the string\n        if(isLast) word += str[i];             // if `i` is equal to the last index of the string, then we add it to the variable\n\n        for (let j = 0; j < word.length; j++){     // the purpose of the second loop is to reverse the elements that are in the `word` variable\n            revWord = word[j] + revWord;           // we reverse the elements in the word `word` and store it in the `revWord` variable\n        }\n\n        if (isLast) result += revWord;      // if `i` is equal to the last index of the string, then we write the reversed word to the result\n        else result += revWord + ' ';       // otherwise, we write the reversed word plus a space to the `result` variable\n\n        revWord = '';   // clear everything from the `revWord` variable so that a new word can be written in the next iteration of the loop\n        word = '';      // clear everything from the `word` variable so that a new word can be written in the next iteration of the loop\n    } else {                    // if the element is not an empty string and i is not equal to the last index, then the following block will be executed\n        word += str[i];         // add the element to the `word` variable\n    }\n}\n\nconsole.log(result);   // \"olleH dlroW\"\n```\n\n\n### Writing a function and improving the code\n\nLet's write a function that takes a string and returns a new string with each word reversed.\n\nAlso, we will try to improve our code and get rid of the second loop.\n\n```javascript\nfunction revString(str){\n    let result = '';\n    let word = '';\n\n    for (let i = 0; i < str.length; i++){\n        if(str[i] !== ' ' && i !== str.length - 1){\n            word = str[i] + word;\n        } else {\n            if(i === str.length - 1) {\n                word = str[i] + word;\n                result += word;\n            } else {\n                result += word + ' ';\n                word = '';\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(revString('Hello World'));           // \"olleH dlroW\"\nconsole.log(revString('12 345 67890'));          // \"21 543 09876\"\nconsole.log(revString(\"Hi, It's Java Script!\")); // \",iH s'tI avaJ !tpircS\"\n```\n\nFrom the example of the last problem, you should already know what is going on in this function.\n\nRewrite the code yourself several times to better understand and understand how the function works.\n",
    "es": "# Перевернуть строку language: es"
  },
  "video": {
    "ru": "https://youtu.be/lKgmFSQ3tzQ",
    "en": "",
    "es": ""
  }
}