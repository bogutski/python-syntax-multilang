{
  "_id": "6696c2ca763f0712c198e4ac",
  "name": {
    "en": "Compiler of abbreviations",
    "ru": "Составитель аббревиатур"
  },
  "instruction": {
    "en": "An abbreviation is an abbreviation of a word or phrase formed from the first letters of the words that make it up. For example, BMW is an abbreviation formed from the first letters of the words \"Bayerische Motoren Werke\"\n\nWrite a function `makeAcronym` that takes three strings and returns an abbreviation formed from the first letters of those strings.\n\nAn example of running the function:\n```javascript\nmakeAcronym(' Kentucky', ' Fried', 'Chicken'); // 'KFC'\nmakeAcronym(' node', package', ' Manager'); // 'NPM'\nmakeAcronym(' national', ' hockey', 'League'); // 'NHL'\n```",
    "ru": "Аббревиатура — это сокращение слова или словосочетания, образованное из первых букв слов, из которых оно состоит. Например, BMW — это аббревиатура, образованная из первых букв слов «Bayerische Motoren Werke»\n\nНапишите функцию `makeAcronym`, которая принимает три строки и возвращает аббревиатуру, составленную из первых букв этих строк.\n\nПример запуска функции:\n```javascript\nmakeAcronym('   Kentucky', ' Fried', 'Chicken'); // 'KFC'\nmakeAcronym('  node',    package', '    Manager'); // 'NPM'\nmakeAcronym('    national', ' hockey', 'League'); // 'NHL'\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function makeAcronym(string1, string2, string3) {\n  return (\n    string1.trim()[0].toUpperCase() +\n    string2.trim()[0].toUpperCase() +\n    string3.trim()[0].toUpperCase()\n  );\n}",
  "openTest": "it('Created function makeAcronym', () => {\n  expect(makeAcronym).to.be.a('function');\n});\n\nit('makeAcronym(\"   Kentucky\", \" Fried\", \"Chicken\") should return \"KFC\"', () => {\n  expect(makeAcronym('   Kentucky', ' Fried', 'Chicken')).to.be.equal('KFC');\n});\n\nit('makeAcronym(\"  node\",    package\", \"    Manager\") should return \"NPM\"', () => {\n  expect(makeAcronym('  node', 'package', '    Manager')).to.be.equal('NPM');\n});\n\nit('makeAcronym(\"    national\", \" hockey\", \"League\") should return \"NHL\"', () => {\n  expect(makeAcronym('    national', ' hockey', 'League')).to.be.equal('NHL');\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}