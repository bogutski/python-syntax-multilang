{
  "_id": "6696c2ca763f0712c198eaf6",
  "name": {
    "en": "The division into vowels and consonants",
    "ru": "Разделение на гласные и согласные"
  },
  "instruction": {
    "en": "Write a function `vowelsAndConsonants` that takes a string and returns an array of two arrays:\n\n* the first array contains all the vowels of the string in the same order as they occur in the string\n* The second array contains all consonants of the string in the same order as they occur in the string\n\nThe vowel letters are `a`, `e`, `i`, `o`, `u`.\n\nAn example of an `if` condition that checks if a letter is a vowel:\n* `if (str[i] === 'a' || str[i] === 'e' || str[i] === 'i' || str[i] === 'o' || str[i] === 'u')`\n\nAll letters in the string will be lowercase.\n\n\nAn example of how to run a function:\n```javascript\nvowelsAndConsonants('javascript') // [ ['a', 'a', 'i'], ['j', 'v', 's', 'c', 'r', 'p', 't'] ]\nvowelsAndConsonants('pasv') // [ ['a'], ['p', 's', 'v'] ]\nvowelsAndConsonants('') // [ [], [] ]\n```",
    "ru": "Напишите функцию `vowelsAndConsonants`, которая принимает строку и возвращает массив состоящий из двух массивов:\n\n* первый массив содержит все гласные буквы строки в том же порядке, в котором они встречаются в строке\n* второй массив содержит все согласные буквы строки в том же порядке, в котором они встречаются в строке\n\nГласными буквами являются `a`, `e`, `i`, `o`, `u`.\n\nПример условия `if`, который проверяет, является ли буква гласной:\n* `if (str[i] === 'a' || str[i] === 'e' || str[i] === 'i' || str[i] === 'o' || str[i] === 'u')`\n\nВсе буквы в строке будут строчными.\n\n\nПример запуска функции:\n```javascript\nvowelsAndConsonants('javascript') // [ ['a', 'a', 'i'], ['j', 'v', 's', 'c', 'r', 'p', 't'] ]\nvowelsAndConsonants('pasv') // [ ['a'], ['p', 's', 'v'] ]\nvowelsAndConsonants('') // [ [], [] ]\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function vowelsAndConsonants(str) {\n  const vowels = [];\n  const consonants = [];\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] === 'a' || str[i] === 'e' || str[i] === 'i' || str[i] === 'o' || str[i] === 'u') {\n      vowels.push(str[i]);\n    } else {\n      consonants.push(str[i]);\n    }\n  }\n  return [vowels, consonants]\n}",
  "openTest": "it('Created function vowelsAndConsonants', () => {\n  expect(vowelsAndConsonants).to.be.a('function');\n});\n\nit(\"vowelsAndConsonants('javascriptloops') should return [['a', 'a', 'i', 'o', 'o'], ['j', 'v', 's', 'c', 'r', 'p', 't', 'l', 'p', 's']]\", () => {\n  expect(vowelsAndConsonants('javascriptloops')).to.eql([['a', 'a', 'i', 'o', 'o'], ['j', 'v', 's', 'c', 'r', 'p', 't', 'l', 'p', 's']]);\n});\n\nit(\"vowelsAndConsonants('pasv') should return [['a'], ['p', 's', 'v']]\", () => {\n  expect(vowelsAndConsonants('pasv')).to.eql([['a'], ['p', 's', 'v']]);\n});\n\nit(\"vowelsAndConsonants('') should return [[], []]\", () => {\n  expect(vowelsAndConsonants('')).to.eql([[], []]);\n});\n\nit(\"vowelsAndConsonants('a') should return [['a'], []]\", () => {\n  expect(vowelsAndConsonants('a')).to.eql([['a'], []]);\n});\n\nit(\"vowelsAndConsonants('b') should return [[], ['b']]\", () => {\n  expect(vowelsAndConsonants('b')).to.eql([[], ['b']]);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}