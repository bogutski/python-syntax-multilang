{
  "_id": "6696c2ca763f0712c198eaf3",
  "name": {
    "en": "Connecting rows by index",
    "ru": "Соединение строк по индексу"
  },
  "instruction": {
    "en": "Write a function `twoStrings` that takes two strings and returns an array of connected strings by index.\n\nFor example: `twoStrings('abc', 'def')` should return `['ad', 'be', 'cf']`\n\n* `str1[0] + str2[0] = 'ad'`\n* `str1[1] + str2[1] = 'be'`\n* `str1[2] + str2[2] = 'cf'\n\nThe two strings will have the same length.\n\nAn example of running a function:\n```js\ntwoStrings('abc', 'def'); // ['ad', 'be', 'cf']\ntwoStrings('123', '456'); // ['14', '25', '36']\ntwoStrings('a', 'b'); // ['ab']\ntwoStrings('', ''); // []\n```",
    "ru": "Напишите функцию `twoStrings`, которая принимает две строки и возвращает массив, состоящий из соединенных строк по индексу.\n\nНапример: `twoStrings('abc', 'def')` должно вернуть `['ad', 'be', 'cf']`\n\n* `str1[0] + str2[0] = 'ad'`\n* `str1[1] + str2[1] = 'be'`\n* `str1[2] + str2[2] = 'cf'`\n\nДве строки будут иметь одинаковую длину.\n\nПример запуска функции:\n```js\ntwoStrings('abc', 'def'); // ['ad', 'be', 'cf']\ntwoStrings('123', '456'); // ['14', '25', '36']\ntwoStrings('a', 'b'); // ['ab']\ntwoStrings('', ''); // []\n```"
  },
  "initialSolution": "fun",
  "completedSolution": "function twoStrings(str1, str2) {\n  const arr = [];\n  for(let i = 0; i < str1.length; i++) {\n    arr.push(str1[i] + str2[i]);\n  }\n  return arr;\n}",
  "openTest": "it('Created function twoStrings', () => {\n  expect(twoStrings).to.be.a('function');\n});\n\nit(\"twoStrings('abc', 'def') should return ['ad', 'be', 'cf']\", () => {\n  expect(twoStrings('abc', 'def')).to.deep.equal(['ad', 'be', 'cf']);\n});\n\nit(\"twoStrings('123', '456') should return ['14', '25', '36']\", () => {\n  expect(twoStrings('123', '456')).to.deep.equal(['14', '25', '36']);\n});\n\nit(\"twoStrings('apples', 'orange') should return ['ao', 'pr', 'pa', 'ln', 'eg', 'se']\", () => {\n  expect(twoStrings('apples', 'orange')).to.deep.equal(['ao', 'pr', 'pa', 'ln', 'eg', 'se']);\n});\n\nit(\"twoStrings('a', 'b') should return ['ab']\", () => {\n  expect(twoStrings('a', 'b')).to.deep.equal(['ab']);\n});\n\nit(\"twoStrings('', '') should return []\", () => {\n  expect(twoStrings('', '')).to.deep.equal([]);\n});\n\nit(\"twoStrings('123456', 'abcdef') should return ['1a', '2b', '3c', '4d', '5e', '6f']\", () => {\n  expect(twoStrings('123456', 'abcdef')).to.deep.equal(['1a', '2b', '3c', '4d', '5e', '6f']);\n});",
  "hiddenTest": "",
  "programmingLang": "JavaScript",
  "status": "new",
  "level": "Easy",
  "showOpenTest": true,
  "active": false,
  "checker": "unit",
  "hint": {
    "en": "",
    "ru": ""
  }
}