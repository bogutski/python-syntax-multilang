{
  "_id": "6696c2ca763f0712c198eac1",
  "content": {
    "ru": "Преобразование строки в массив - важная часть изучения Java Script\n\n**Метод `split()`** \n\nЕго можно применять ТОЛЬКО над строкой!\n\nСинтаксис:\n\n`split(separator)`\n\nВ скобках указывается разделитель внутри строки. Необязательный параметр.\n\nДавайте рассмотрим на примере метод преобразованиия строки в массив с\nпомощью встроенного метода строк `split()`.\n```javascript\nconst str = 'Hello JS';\nconst arr = str.split('') //разделитель - пустая строка\nconsole.log(arr)\n\n[\"H\", \"e\", \"l\", \"l\", \"o\", \" \", \"J\", \"S\"]\n```\nВ данном случае разделитель задан в виде пустой строки и \n строка str преобразована в массив символов.\n\nРассмотрим другие примеры разделителя:\n```javascript\nconst str = 'Hello JS';\nconst arr = str.split(' ') //разделитель - строка с пробелом внутри\nconsole.log(arr)\n\n[\"Hello\", \"JS\"]\n```\nСтрока преобразована в массив с двумя элементами, разделенных по элементу пробел.\n```javascript\nconst str = 'Hello JS !!! .. ++';\nconst arr = str.split(' ') //разделитель - строка с пробелом внутри\nconsole.log(arr)\n\n[\"Hello\", \"JS\", \"!!!\", \"..\", \"++\"]\n```\nВсе элементы разделенные пробелом собираются в элемент массива.\n```javascript\nconst str = 'Hello JS';\nconst arr = str.split(',') //разделитель - строка с запятой внутри\nconsole.log(arr)\n  \n[\"Hello JS\"]\n```\nСтрока преобразована в массив только с одним элементом, так как запятая не встречается\nв строке.\n\nПопробуйте попрактиковаться, записывая разные варианты разделителя\nс разными строками и посмотрите какой будет результат.\n\nС помощью метода split() можно преобразовать строку с любым количеством символом в массив.\n\nИногда необходимо преобразовывать строку в массив без использования методов.\n\nТогда можно воспользоваться **циклом `for`**\n\n```javascript\nconst str = 'Hello JS-Coding PlayGround';\nconst arr = []; \nfor (let i = 0; i < str.length; i++){\n  let acc = ''; //создаем аккумулятор в виде пустой строки, чтобы собирать слова\n// чтобы собрать целое слово, необходимо применить условие if  \n  if (str[i] !== ' ') acc +=str[i] //если элемент не равен пробелу, то добавляем его в аккумулятор\n  else {                           // действие когда мы встретились с пробелом\n    arr.push(acc);                 // мы добавляем в массив всё, что мы собрали в аккумуляторе\n    acc = '';                      // и очищаем аккумулятор, делая его обратно пустой строкой\n  }\n}\n\nconsole.log(arr)\n  \n[\"\", \"\"]\n```\nВ данном случае мы получили массив с пустыми строками.\nЭто произошло по причине того, что аккумулятор был создан внутри цикла и \nна каждой итерации `acc` очищался вновь до пустой строки.\n\nЧтобы такого не происходимо аккумулятор `acc` необходимо создавать до запуска цикла.\n```javascript\nconst str = 'Hello JS-Coding PlayGround';\nconst arr = [];\nlet acc = '';\nfor (let i = 0; i < str.length; i++){\n  if (str[i] !== ' ') acc +=str[i] \n  else {                           \n    arr.push(acc);                 \n    acc = '';                      \n  }\n}\n\nconsole.log(arr)\n  \n[\"Hello\", \"JS-Coding\"]\n```\nМассив заполняется, но последнее слово не приходит в массив.\nЭто связано с тем, что после последнего слова в строке у нас нет пробела и\nусловие `else` никогда не выполняется. То есть не происходит команды `push`.\n\n```javascript\nconst str = 'Hello JS-Coding PlayGround';\nconst arr = [];\nlet acc = '';\nfor (let i = 0; i < str.length; i++){\n  if (str[i] !== ' ') acc +=str[i] \n  else {                           \n    arr.push(acc);                 \n    acc = '';                      \n  }\n}\narr.push(acc)     //после отработки цикла добавляем последний push аккумулятора\nconsole.log(arr)\n\n[\"Hello\", \"JS-Coding\", \"PlayGround\"]\n```\n\nИли можно проверить, что аккумулятор накопил последний элемент массива.\n\nДобавим условие, что элемент цикла равен последнему символу строки:\n```javascript\nconst str = 'H el lo';\nconst arr = [];\nlet acc = '';\nfor (let i = 0; i < str.length; i++){\n  if (str[i] !== ' ') acc +=str[i] \n  else {                           \n    arr.push(acc);                 \n    acc = '';                      \n  }\n  if(i === str.length-1) arr.push(acc)\n}\nconsole.log(arr)\n\n[\"H\", \"el\", \"lo\"] //цикл работает правильно\n```\n\nПопробуйте оптимизировать код, чтобы он был не таким длинным.\n",
    "en": "Converting a string into an array is an important part of learning Java Script\n\n**Method `split()`** \n\nIt can ONLY be applied above the line!\n\nSyntax:\n\n`split(separator)`\n\nThe parentheses indicate the delimiter inside the string. An optional parameter.\n\nLet's take the method of converting a string into an array using the\nusing the built-in string method `split()`.\n```javascript\nconst str = 'Hello JS';\nconst arr = str.split('') //the separator is an empty string\nconsole.log(arr)\n\n[\"H\", \"e\", \"l\", \"l\", \"o\", \" \", \"J\", \"S\"]\n```\nIn this case the separator is specified as an empty string and \n str is converted to an array of characters.\n\nConsider other examples of the separator:\n```javascript\nconst str = 'Hello JS';\nconst arr = str.split(' ') // the separator is a string with a space inside\nconsole.log(arr)\n\n[\"Hello\", \"JS\"]\n```\nThe string is converted to an array with two elements separated by a space element.\n```javascript\nconst str = 'Hello JS !!! .. ++';\nconst arr = str.split(' ') //the separator is a string with a space inside\nconsole.log(arr)\n\n[\"Hello\", \"JS\", \"!!!\", \"..\", \"++\"]\n```\nAll elements separated by a space are collected into an array element.\n```javascript\nconst str = 'Hello JS';\nconst arr = str.split(',') //the separator is a line with a comma inside\nconsole.log(arr)\n\n[\"Hello JS\"]\n```\nThe string is converted to an array with only one element, since the comma does not occur\nin the string.\n\nTry practicing by writing different separator variants\nwith different strings and see what the result is.\n\nYou can use the split() method to convert a string with any number of characters to an array.\n\nSometimes you need to convert a string to an array without using methods.\n\nThen you can use the **cycle `for`**\n\n```javascript\nconst str = 'Hello JS-Coding PlayGround';\nconst arr = []; \nfor (let i = 0; i < str.length; i++){\n  let acc = ''; //create an accumulator as an empty string to collect words\n// to collect an integer word, you must apply the if condition  \n  if (str[i] !== ' ') acc +=str[i] //if the element is not a space, add it to the accumulator\n  else { // the action when we have encountered a space\n    arr.push(acc); // we add to the array everything that we collected in the accumulator\n    acc = ''; // and we clear the accumulator, making it back an empty string\n  }\n}\n\nconsole.log(arr)\n\n[\"\", \"\"]\n```\nIn this case we got an array with empty strings.\nThis happened because the accumulator was created inside the loop and \nat each iteration of `acc` was cleared again to an empty string.\n\nTo prevent this from happening, the `acc` accumulator must be created before the cycle starts.\n```javascript\nconst str = 'Hello JS-Coding PlayGround';\nconst arr = [];\nlet acc = '';\nfor (let i = 0; i < str.length; i++){\n  if (str[i] !== ' ') acc +=str[i] \n  else {                           \n    arr.push(acc);                 \n    acc = '';                      \n  }\n}\n\nconsole.log(arr)\n\n[\"Hello\", \"JS-Coding\"]\n```\nThe array is filled, but the last word does not come into the array.\nThis is due to the fact that after the last word in the string we have no space and\nThe `else` condition is never satisfied. That is, no `push` command occurs.\n\n```javascript\nconst str = 'Hello JS-Coding PlayGround';\nconst arr = [];\nlet acc = '';\nfor (let i = 0; i < str.length; i++){\n  if (str[i] !== ' ') acc +=str[i] \n  else {                           \n    arr.push(acc);                 \n    acc = '';                      \n  }\n}\narr.push(acc)     //after the loop is finished, add the last push of the accumulator\nconsole.log(arr)\n\n[\"Hello\", \"JS-Coding\", \"PlayGround\"]\n```\n\nOr you can check that the accumulator has accumulated the last element of the array.\n\nLet's add the condition that the loop element is equal to the last character of the string:\n```javascript\nconst str = 'H el lo';\nconst arr = [];\nlet acc = '';\nfor (let i = 0; i < str.length; i++){\n  if (str[i] !== ' ') acc +=str[i] \n  else {                           \n    arr.push(acc);                 \n    acc = '';                      \n  }\n  if(i === str.length-1) arr.push(acc)\n}\nconsole.log(arr)\n\n[\"H\", \"el\", \"lo\"] //cycle works correctly\n```\n\nTry to optimize the code so that it is not so long.\n",
    "es": "# Преобразовать строку в массив language: es"
  },
  "video": {
    "ru": "https://youtu.be/zqKVl9eHrRw",
    "en": "",
    "es": ""
  }
}